-- MySQL dump 10.13  Distrib 5.1.73, for redhat-linux-gnu (x86_64)
--
-- Host: 127.3.17.2    Database: trac_ComputingDocs
-- ------------------------------------------------------
-- Server version	5.5.41

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `attachment`
--

DROP TABLE IF EXISTS `attachment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `attachment` (
  `type` text COLLATE utf8_bin NOT NULL,
  `id` text COLLATE utf8_bin NOT NULL,
  `filename` text COLLATE utf8_bin NOT NULL,
  `size` int(11) DEFAULT NULL,
  `time` bigint(20) DEFAULT NULL,
  `description` text COLLATE utf8_bin,
  `author` text COLLATE utf8_bin,
  `ipnr` text COLLATE utf8_bin,
  PRIMARY KEY (`type`(111),`id`(111),`filename`(111))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `attachment`
--

LOCK TABLES `attachment` WRITE;
/*!40000 ALTER TABLE `attachment` DISABLE KEYS */;
INSERT INTO `attachment` VALUES ('wiki','AdobePremierePro','AdobePP.jpg',29490,1411017151607913,'AdobePP','akshat','192.168.0.18'),('wiki','AdobePremierePro','CEPServiceManager4.tar.gz',109232128,1411020521271243,'CEPServiceManager4_Root','akshat','192.168.0.18'),('wiki','AdobePremierePro','CEPServiceManager4_Username.tar.gz',27229696,1411020551113215,'CEPServiceManager4_Username','akshat','192.168.0.18'),('wiki','AdobePremierePro','CreativeCloudInstaller.dmg',1574204,1411022954704485,'Creative Cloud Installer','akshat','192.168.0.18'),('wiki','AdobePremierePro','HTML5_101.pdf',216402,1411022273060063,'Installation Instructions','akshat','192.168.0.18'),('wiki','AdobePremierePro','JavaScriptToolsGuideCC.pdf',2675636,1411022697708953,'JavaScript Tools Guide CC','akshat','192.168.0.18'),('wiki','Ant','Ant.2.png',36611,1397141231373042,'AntLogo','admin','192.168.0.13'),('wiki','Ant','Ant.png',36611,1298748406000000,'','akshat','158.144.16.2'),('wiki','Ant','Bell.png',240513,1397141471785865,'Bell','admin','192.168.0.13'),('wiki','EclipsePlugins','Eclipse.png',54399,1405347333743669,'Eclipse','akshat','192.168.0.18'),('wiki','Hadoop','hadoop.gif',5880,1405346039569284,'Hadoop','akshat','192.168.0.18'),('wiki','Java','Java.jpg',7591,1405347690179758,'Java','akshat','192.168.0.18'),('wiki','LDAPClient','authconfig-tui.png',26877,1326283974184762,'','akshat','158.144.16.22'),('wiki','LDAPClient','authconfig.png',34156,1325073679000000,'','akshat','158.144.16.12'),('wiki','LDAPClient','authconfig2.png',37754,1325073685000000,'','akshat','158.144.16.12'),('wiki','LinuxCommands','Tux.png',72527,1405347188854291,'Tux','akshat','192.168.0.18'),('wiki','Lucene','Lucene.png',28106,1418887596977735,'Lucene','akshat','192.168.0.18'),('wiki','MacCommands','apple.jpg',1098722,1410502265874286,'apple','akshat','192.168.0.18'),('wiki','Mailman','Mailman.png',33105,1297337459000000,'','akshat','158.144.16.12'),('wiki','MySQL','MySQL.jpg',17606,1405347059050824,'MySQL','akshat','192.168.0.18'),('wiki','OpenSSL','Heartbleed.svg',2076,1398091955481275,'Heartbleed','akshat','192.168.0.18'),('wiki','OpenSSL','Simplified_Heartbleed_explanation.png',114658,1398092262120508,'HeartbleedDescription','akshat','192.168.0.18'),('wiki','Plone','Plone.png',31011,1301997714000000,'','akshat','59.163.79.36'),('wiki','Plone','PloneArchitecture.png',111848,1301997965000000,'','akshat','59.163.79.36'),('wiki','Python','Python.png',83564,1405347547105923,'Python','akshat','192.168.0.18'),('wiki','RedHat','RedHat.jpg',63681,1405346876894949,'Red Hat','akshat','192.168.0.18'),('wiki','Sed','SED.png',9475,1405347859726067,'','akshat','192.168.0.18'),('wiki','Subversion','Subversion.png',3667,1299246709000000,'','akshat','158.144.16.2'),('wiki','Tomcat','tomcat.gif',2066,1298835946000000,'','akshat','158.144.16.2'),('wiki','Vim','Vim.jpg',10256,1405347437052687,'VIM','akshat','192.168.0.18'),('wiki','WikiStart','Computing.jpg',339083,1309451667000000,'','akshat','158.144.16.13'),('wiki','WikiStart','GMRT2.jpg',110612,1309451234000000,'','akshat','158.144.16.13');
/*!40000 ALTER TABLE `attachment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_cookie`
--

DROP TABLE IF EXISTS `auth_cookie`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_cookie` (
  `cookie` text COLLATE utf8_bin NOT NULL,
  `name` text COLLATE utf8_bin NOT NULL,
  `ipnr` text COLLATE utf8_bin NOT NULL,
  `time` int(11) DEFAULT NULL,
  PRIMARY KEY (`cookie`(111),`ipnr`(111),`name`(111))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_cookie`
--

LOCK TABLES `auth_cookie` WRITE;
/*!40000 ALTER TABLE `auth_cookie` DISABLE KEYS */;
INSERT INTO `auth_cookie` VALUES ('76240a38b7574e0bf754482345b9104d','akshat','127.3.17.1',1435144343);
/*!40000 ALTER TABLE `auth_cookie` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cache`
--

DROP TABLE IF EXISTS `cache`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cache` (
  `id` int(11) NOT NULL DEFAULT '0',
  `generation` int(11) DEFAULT NULL,
  `key` text COLLATE utf8_bin,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cache`
--

LOCK TABLES `cache` WRITE;
/*!40000 ALTER TABLE `cache` DISABLE KEYS */;
INSERT INTO `cache` VALUES (901198563,16,'trac.wiki.api.WikiSystem.pages'),(1722364385,65,'trac.perm.DefaultPermissionStore._all_permissions');
/*!40000 ALTER TABLE `cache` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `component`
--

DROP TABLE IF EXISTS `component`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `component` (
  `name` text COLLATE utf8_bin NOT NULL,
  `owner` text COLLATE utf8_bin,
  `description` text COLLATE utf8_bin,
  PRIMARY KEY (`name`(255))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `component`
--

LOCK TABLES `component` WRITE;
/*!40000 ALTER TABLE `component` DISABLE KEYS */;
INSERT INTO `component` VALUES ('component1','somebody',NULL),('component2','somebody',NULL);
/*!40000 ALTER TABLE `component` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `enum`
--

DROP TABLE IF EXISTS `enum`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enum` (
  `type` text COLLATE utf8_bin NOT NULL,
  `name` text COLLATE utf8_bin NOT NULL,
  `value` text COLLATE utf8_bin,
  PRIMARY KEY (`type`(166),`name`(166))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `enum`
--

LOCK TABLES `enum` WRITE;
/*!40000 ALTER TABLE `enum` DISABLE KEYS */;
INSERT INTO `enum` VALUES ('priority','blocker','1'),('priority','critical','2'),('priority','major','3'),('priority','minor','4'),('priority','trivial','5'),('resolution','duplicate','4'),('resolution','fixed','1'),('resolution','invalid','2'),('resolution','wontfix','3'),('resolution','worksforme','5'),('ticket_type','defect','1'),('ticket_type','enhancement','2'),('ticket_type','task','3');
/*!40000 ALTER TABLE `enum` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `milestone`
--

DROP TABLE IF EXISTS `milestone`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `milestone` (
  `name` text COLLATE utf8_bin NOT NULL,
  `due` bigint(20) DEFAULT NULL,
  `completed` bigint(20) DEFAULT NULL,
  `description` text COLLATE utf8_bin,
  PRIMARY KEY (`name`(255))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `milestone`
--

LOCK TABLES `milestone` WRITE;
/*!40000 ALTER TABLE `milestone` DISABLE KEYS */;
INSERT INTO `milestone` VALUES ('milestone1',0,0,NULL),('milestone2',0,0,NULL),('milestone3',0,0,NULL),('milestone4',0,0,NULL);
/*!40000 ALTER TABLE `milestone` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `node_change`
--

DROP TABLE IF EXISTS `node_change`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `node_change` (
  `repos` int(11) NOT NULL DEFAULT '0',
  `rev` text COLLATE utf8_bin NOT NULL,
  `path` text COLLATE utf8_bin NOT NULL,
  `node_type` text COLLATE utf8_bin,
  `change_type` text COLLATE utf8_bin NOT NULL,
  `base_path` text COLLATE utf8_bin,
  `base_rev` text COLLATE utf8_bin,
  PRIMARY KEY (`repos`,`rev`(20),`path`(255),`change_type`(2)),
  KEY `node_change_repos_rev_idx` (`repos`,`rev`(20))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `node_change`
--

LOCK TABLES `node_change` WRITE;
/*!40000 ALTER TABLE `node_change` DISABLE KEYS */;
/*!40000 ALTER TABLE `node_change` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `permission`
--

DROP TABLE IF EXISTS `permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permission` (
  `username` text COLLATE utf8_bin NOT NULL,
  `action` text COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`username`(166),`action`(166))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permission`
--

LOCK TABLES `permission` WRITE;
/*!40000 ALTER TABLE `permission` DISABLE KEYS */;
INSERT INTO `permission` VALUES ('akshat','TRAC_ADMIN'),('akshat','VERSIONCONTROL_ADMIN'),('anonymous','BROWSER_VIEW'),('anonymous','CHANGESET_VIEW'),('anonymous','SEARCH_VIEW'),('anonymous','TIMELINE_VIEW'),('anonymous','WIKI_VIEW'),('authenticated','TICKET_CREATE'),('authenticated','TICKET_MODIFY'),('authenticated','WIKI_CREATE'),('authenticated','WIKI_MODIFY');
/*!40000 ALTER TABLE `permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report`
--

DROP TABLE IF EXISTS `report`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `author` text COLLATE utf8_bin,
  `title` text COLLATE utf8_bin,
  `query` text COLLATE utf8_bin,
  `description` text COLLATE utf8_bin,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report`
--

LOCK TABLES `report` WRITE;
/*!40000 ALTER TABLE `report` DISABLE KEYS */;
INSERT INTO `report` VALUES (1,NULL,'Active Tickets','\nSELECT p.value AS __color__,\n   id AS ticket, summary, component, version, milestone, t.type AS type, \n   owner, status,\n   time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t\n  LEFT JOIN enum p ON p.name = t.priority AND p.type = \'priority\'\n  WHERE status <> \'closed\'\n  ORDER BY CAST(p.value AS signed), milestone, t.type, time\n','\n * List all active tickets by priority.\n * Color each row based on priority.\n'),(2,NULL,'Active Tickets by Version','\nSELECT p.value AS __color__,\n   version AS __group__,\n   id AS ticket, summary, component, version, t.type AS type, \n   owner, status,\n   time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t\n  LEFT JOIN enum p ON p.name = t.priority AND p.type = \'priority\'\n  WHERE status <> \'closed\'\n  ORDER BY (version IS NULL),version, CAST(p.value AS signed), t.type, time\n','\nThis report shows how to color results by priority,\nwhile grouping results by version.\n\nLast modification time, description and reporter are included as hidden fields\nfor useful RSS export.\n'),(3,NULL,'Active Tickets by Milestone','\nSELECT p.value AS __color__,\n   concat(\'Milestone \', milestone) AS __group__,\n   id AS ticket, summary, component, version, t.type AS type, \n   owner, status,\n   time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t\n  LEFT JOIN enum p ON p.name = t.priority AND p.type = \'priority\'\n  WHERE status <> \'closed\' \n  ORDER BY (milestone IS NULL),milestone, CAST(p.value AS signed), t.type, time\n','\nThis report shows how to color results by priority,\nwhile grouping results by milestone.\n\nLast modification time, description and reporter are included as hidden fields\nfor useful RSS export.\n'),(4,NULL,'Accepted, Active Tickets by Owner','\n\nSELECT p.value AS __color__,\n   owner AS __group__,\n   id AS ticket, summary, component, milestone, t.type AS type, time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t\n  LEFT JOIN enum p ON p.name = t.priority AND p.type = \'priority\'\n  WHERE status = \'accepted\'\n  ORDER BY owner, CAST(p.value AS signed), t.type, time\n','\nList accepted tickets, group by ticket owner, sorted by priority.\n'),(5,NULL,'Accepted, Active Tickets by Owner (Full Description)','\nSELECT p.value AS __color__,\n   owner AS __group__,\n   id AS ticket, summary, component, milestone, t.type AS type, time AS created,\n   description AS _description_,\n   changetime AS _changetime, reporter AS _reporter\n  FROM ticket t\n  LEFT JOIN enum p ON p.name = t.priority AND p.type = \'priority\'\n  WHERE status = \'accepted\'\n  ORDER BY owner, CAST(p.value AS signed), t.type, time\n','\nList tickets accepted, group by ticket owner.\nThis report demonstrates the use of full-row display.\n'),(6,NULL,'All Tickets By Milestone  (Including closed)','\nSELECT p.value AS __color__,\n   t.milestone AS __group__,\n   (CASE status \n      WHEN \'closed\' THEN \'color: #777; background: #ddd; border-color: #ccc;\'\n      ELSE \n        (CASE owner WHEN $USER THEN \'font-weight: bold\' END)\n    END) AS __style__,\n   id AS ticket, summary, component, status, \n   resolution,version, t.type AS type, priority, owner,\n   changetime AS modified,\n   time AS _time,reporter AS _reporter\n  FROM ticket t\n  LEFT JOIN enum p ON p.name = t.priority AND p.type = \'priority\'\n  ORDER BY (milestone IS NULL), milestone DESC, (status = \'closed\'), \n        (CASE status WHEN \'closed\' THEN changetime ELSE (-1) * CAST(p.value AS signed) END) DESC\n','\nA more complex example to show how to make advanced reports.\n'),(7,NULL,'My Tickets','\nSELECT p.value AS __color__,\n   (CASE status WHEN \'accepted\' THEN \'Accepted\' ELSE \'Owned\' END) AS __group__,\n   id AS ticket, summary, component, version, milestone,\n   t.type AS type, priority, time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t\n  LEFT JOIN enum p ON p.name = t.priority AND p.type = \'priority\'\n  WHERE t.status <> \'closed\' AND owner = $USER\n  ORDER BY (status = \'accepted\') DESC, CAST(p.value AS signed), milestone, t.type, time\n','\nThis report demonstrates the use of the automatically set \nUSER dynamic variable, replaced with the username of the\nlogged in user when executed.\n'),(8,NULL,'Active Tickets, Mine first','\nSELECT p.value AS __color__,\n   (CASE owner \n     WHEN $USER THEN \'My Tickets\' \n     ELSE \'Active Tickets\' \n    END) AS __group__,\n   id AS ticket, summary, component, version, milestone, t.type AS type, \n   owner, status,\n   time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t\n  LEFT JOIN enum p ON p.name = t.priority AND p.type = \'priority\'\n  WHERE status <> \'closed\' \n  ORDER BY (COALESCE(owner, \'\') = $USER) DESC, CAST(p.value AS signed), milestone, t.type, time\n','\n * List all active tickets by priority.\n * Show all tickets owned by the logged in user in a group first.\n');
/*!40000 ALTER TABLE `report` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `repository`
--

DROP TABLE IF EXISTS `repository`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `repository` (
  `id` int(11) NOT NULL DEFAULT '0',
  `name` text COLLATE utf8_bin NOT NULL,
  `value` text COLLATE utf8_bin,
  PRIMARY KEY (`id`,`name`(166))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `repository`
--

LOCK TABLES `repository` WRITE;
/*!40000 ALTER TABLE `repository` DISABLE KEYS */;
INSERT INTO `repository` VALUES (1,'name',''),(1,'youngest_rev','');
/*!40000 ALTER TABLE `repository` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `revision`
--

DROP TABLE IF EXISTS `revision`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `revision` (
  `repos` int(11) NOT NULL DEFAULT '0',
  `rev` text COLLATE utf8_bin NOT NULL,
  `time` bigint(20) DEFAULT NULL,
  `author` text COLLATE utf8_bin,
  `message` text COLLATE utf8_bin,
  PRIMARY KEY (`repos`,`rev`(20)),
  KEY `revision_repos_time_idx` (`repos`,`time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `revision`
--

LOCK TABLES `revision` WRITE;
/*!40000 ALTER TABLE `revision` DISABLE KEYS */;
/*!40000 ALTER TABLE `revision` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `session`
--

DROP TABLE IF EXISTS `session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `session` (
  `sid` text COLLATE utf8_bin NOT NULL,
  `authenticated` int(11) NOT NULL DEFAULT '0',
  `last_visit` int(11) DEFAULT NULL,
  PRIMARY KEY (`sid`(166),`authenticated`),
  KEY `session_last_visit_idx` (`last_visit`),
  KEY `session_authenticated_idx` (`authenticated`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `session`
--

LOCK TABLES `session` WRITE;
/*!40000 ALTER TABLE `session` DISABLE KEYS */;
INSERT INTO `session` VALUES ('abi',1,1397217468),('aditi',1,1325961967),('admin',1,1397206968),('aks',1,1291894923),('akshat',1,1435140594),('johri',1,1326273571),('kumaran',1,1410520964),('laadpiyush',1,1306745618),('manisha',1,1301986414),('srinivas',1,1397206848),('yogesh',1,1303985897);
/*!40000 ALTER TABLE `session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `session_attribute`
--

DROP TABLE IF EXISTS `session_attribute`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `session_attribute` (
  `sid` text COLLATE utf8_bin NOT NULL,
  `authenticated` int(11) NOT NULL DEFAULT '0',
  `name` text COLLATE utf8_bin NOT NULL,
  `value` text COLLATE utf8_bin,
  PRIMARY KEY (`sid`(111),`authenticated`,`name`(111))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `session_attribute`
--

LOCK TABLES `session_attribute` WRITE;
/*!40000 ALTER TABLE `session_attribute` DISABLE KEYS */;
INSERT INTO `session_attribute` VALUES ('aditi',1,'timeline.authors',''),('aditi',1,'timeline.daysback','30'),('admin',1,'timeline.lastvisit','1397121281475438'),('admin',1,'timeline.nextlastvisit','1397068026274646'),('admin',1,'wiki_editrows','32'),('admin',1,'wiki_sidebyside','1'),('aks',1,'timeline.daysback','30'),('akshat',1,'timeline.lastvisit','1435141487735958'),('akshat',1,'timeline.nextlastvisit','1435141487735958'),('akshat',1,'wiki_editrows','32'),('akshat',1,'wiki_sidebyside','1'),('johri',1,'timeline.authors',''),('johri',1,'timeline.daysback','30'),('johri',1,'wiki_editrows','8');
/*!40000 ALTER TABLE `session_attribute` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `system`
--

DROP TABLE IF EXISTS `system`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `system` (
  `name` text COLLATE utf8_bin NOT NULL,
  `value` text COLLATE utf8_bin,
  PRIMARY KEY (`name`(255))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `system`
--

LOCK TABLES `system` WRITE;
/*!40000 ALTER TABLE `system` DISABLE KEYS */;
INSERT INTO `system` VALUES ('database_version','29'),('initial_database_version','21');
/*!40000 ALTER TABLE `system` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ticket`
--

DROP TABLE IF EXISTS `ticket`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ticket` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `type` text COLLATE utf8_bin,
  `time` bigint(20) DEFAULT NULL,
  `changetime` bigint(20) DEFAULT NULL,
  `component` text COLLATE utf8_bin,
  `severity` text COLLATE utf8_bin,
  `priority` text COLLATE utf8_bin,
  `owner` text COLLATE utf8_bin,
  `reporter` text COLLATE utf8_bin,
  `cc` text COLLATE utf8_bin,
  `version` text COLLATE utf8_bin,
  `milestone` text COLLATE utf8_bin,
  `status` text COLLATE utf8_bin,
  `resolution` text COLLATE utf8_bin,
  `summary` text COLLATE utf8_bin,
  `description` text COLLATE utf8_bin,
  `keywords` text COLLATE utf8_bin,
  PRIMARY KEY (`id`),
  KEY `ticket_time_idx` (`time`),
  KEY `ticket_status_idx` (`status`(255))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ticket`
--

LOCK TABLES `ticket` WRITE;
/*!40000 ALTER TABLE `ticket` DISABLE KEYS */;
/*!40000 ALTER TABLE `ticket` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ticket_change`
--

DROP TABLE IF EXISTS `ticket_change`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ticket_change` (
  `ticket` int(11) NOT NULL DEFAULT '0',
  `time` bigint(20) NOT NULL DEFAULT '0',
  `author` text COLLATE utf8_bin,
  `field` text COLLATE utf8_bin NOT NULL,
  `oldvalue` text COLLATE utf8_bin,
  `newvalue` text COLLATE utf8_bin,
  PRIMARY KEY (`ticket`,`time`,`field`(111)),
  KEY `ticket_change_ticket_idx` (`ticket`),
  KEY `ticket_change_time_idx` (`time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ticket_change`
--

LOCK TABLES `ticket_change` WRITE;
/*!40000 ALTER TABLE `ticket_change` DISABLE KEYS */;
/*!40000 ALTER TABLE `ticket_change` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ticket_custom`
--

DROP TABLE IF EXISTS `ticket_custom`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ticket_custom` (
  `ticket` int(11) NOT NULL DEFAULT '0',
  `name` text COLLATE utf8_bin NOT NULL,
  `value` text COLLATE utf8_bin,
  PRIMARY KEY (`ticket`,`name`(166))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ticket_custom`
--

LOCK TABLES `ticket_custom` WRITE;
/*!40000 ALTER TABLE `ticket_custom` DISABLE KEYS */;
/*!40000 ALTER TABLE `ticket_custom` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `version`
--

DROP TABLE IF EXISTS `version`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `version` (
  `name` text COLLATE utf8_bin NOT NULL,
  `time` bigint(20) DEFAULT NULL,
  `description` text COLLATE utf8_bin,
  PRIMARY KEY (`name`(255))
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `version`
--

LOCK TABLES `version` WRITE;
/*!40000 ALTER TABLE `version` DISABLE KEYS */;
INSERT INTO `version` VALUES ('1.0',0,NULL),('2.0',0,NULL);
/*!40000 ALTER TABLE `version` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wiki`
--

DROP TABLE IF EXISTS `wiki`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wiki` (
  `name` text COLLATE utf8_bin NOT NULL,
  `version` int(11) NOT NULL DEFAULT '0',
  `time` bigint(20) DEFAULT NULL,
  `author` text COLLATE utf8_bin,
  `ipnr` text COLLATE utf8_bin,
  `text` text COLLATE utf8_bin,
  `comment` text COLLATE utf8_bin,
  `readonly` int(11) DEFAULT NULL,
  PRIMARY KEY (`name`(166),`version`),
  KEY `wiki_time_idx` (`time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wiki`
--

LOCK TABLES `wiki` WRITE;
/*!40000 ALTER TABLE `wiki` DISABLE KEYS */;
INSERT INTO `wiki` VALUES ('AdobePremierePro',1,1411017128113826,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('AdobePremierePro',2,1411020353571254,'akshat','192.168.0.18','== Adobe Premiere Pro ==\r\n\r\n[[Image(AdobePP.jpg,270px,right)]]\r\n\r\n=== Adobe Premiere Pro Installation and Configuration Steps  ===\r\n \r\n==== STEP 1 : Installation steps ====\r\n\r\n1.  First download the creative cloud from the following link [http://www.adobe.com/appsmanager/ download here].\r\n\r\n2. Install the following applications from creative cloud:\r\n\r\n{{{\r\na. Adobe Premiere Pro CC\r\nb. Extended Script Toolkit CC\r\nc. Extension Manager\r\nd. Media Encoder CC\r\n}}}\r\n\r\n3. Download eclipse IDE.\r\n\r\n4. Download Extension Builder 3 plugin for eclipse from the following link. [http://labs.adobe.com/downloads/extensionbuilder3.html download here].\r\n\r\nExtension Builder 3 plugin Installation :\r\n{{{\r\nOpen eclipse and browse though following links through eclipse menu...\r\n\r\nHelp -> Install New Software -> Add -> Click Archive -> Browse to the .zip file -> Install\r\n}}}\r\n\r\n==== STEP 2 : Configure Preferences ====\r\n\r\n1. Click on eclipse menu and select Preferences.\r\n\r\n2. Configure CC Launching Path. Follow the steps given in the following url [http://blogs.adobe.com/cssdk/2014/06/adobe-extension-builder-and-creative-cloud-2014.html Click here].\r\n\r\n3. Extract the following [xxx tar] file into following path for root user: \r\n{{{\r\n/Library/Application Support/Adobe/CEPServiceManager4/\r\n}}}\r\n\r\n3. Extract the following [xxx tar] file into following path for normal user: \r\n{{{\r\n/Users/username/Library/Application Support/Adobe/CEPServiceManager4/\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('AdobePremierePro',3,1411022178017596,'akshat','192.168.0.18','== Adobe Premiere Pro ==\r\n\r\n[[Image(AdobePP.jpg,270px,right)]]\r\n\r\n=== Adobe Premiere Pro Installation and Configuration Steps  ===\r\n \r\n==== STEP 1 : Installation steps ====\r\n\r\n1.  First download the creative cloud from the following link [http://www.adobe.com/appsmanager/ download here].\r\n\r\n2. Install the following applications from creative cloud:\r\n\r\n{{{\r\na. Adobe Premiere Pro CC\r\nb. Extended Script Toolkit CC\r\nc. Extension Manager\r\nd. Media Encoder CC\r\n}}}\r\n\r\n3. Download eclipse IDE.\r\n\r\n4. Download Extension Builder 3 plugin for eclipse from the following link. [http://labs.adobe.com/downloads/extensionbuilder3.html download here].\r\n\r\nExtension Builder 3 plugin Installation :\r\n{{{\r\nOpen eclipse and browse though following links through eclipse menu...\r\n\r\nHelp -> Install New Software -> Add -> Click Archive -> Browse to the .zip file -> Install\r\n}}}\r\n\r\n==== STEP 2 : Configure Preferences ====\r\n\r\n1. Click on eclipse menu and select Preferences.\r\n\r\n2. Configure CC Launching Path. Follow the steps given in the following url [http://blogs.adobe.com/cssdk/2014/06/adobe-extension-builder-and-creative-cloud-2014.html Click here].\r\n\r\n3. Extract the following [wiki:CEPServiceManager4.tar.gz tar] file into following path for root user: \r\n{{{\r\n/Library/Application Support/Adobe/CEPServiceManager4/\r\n}}}\r\n\r\n3. Extract the following [xxx tar] file into following path for normal user: \r\n{{{\r\n/Users/username/Library/Application Support/Adobe/CEPServiceManager4/\r\n}}}\r\n\r\n4. Update \'\'\'Bundle Manifest XML\'\'\'\r\n\r\na. Right click on project and click on \'\'\'Adobe Extension Builder 3\'\'\' and select \'\'\'Bundle Manifest Editor\'\'\'\r\nb. Navigate to the manifest.xml tab. Right click anywhere in it and choose Open With -> XML Editor\r\nc. Modify the Host parameters by updating the version to Creative Cloud.\r\n\r\n{{{\r\n<Host Name=”PPRO” Version=”[8.0,8.9]” />\r\n\r\nFinally, change the RequireRunTime attribute to :\r\n<RequiredRuntime Name=”CSXS” Version=”5.0″ />\r\n}}}\r\n\r\n==== STEP 3 : Create new Project ====\r\n\r\n1. For creating a new project for Adobe Premiere Pro go through the following menus in eclipse:\r\n{{{\r\nFile -> New -> Adobe Extension Builder\r\n}}}\r\n\r\n2. Follow the steps given in [xxx HTML5_101] document for creating new project.\r\n\r\n3. For Extended Javascript documentation API refer the following document [xxx Javascript Tookit Guide].\r\n\r\n\r\n==== STEP 4. Exporting the Application ====\r\n\r\n1. Right click on project directory in eclipse and select the \'\'\'Export\'\'\' option from context menu and select export as \'\'\'Adobe Application Extension\'\'\' from \'\'\'Extension Builder 3\'\'\' menu.\r\n\r\n2. Browse through next step and create certificate with valid name and password.\r\n\r\n3. Check the option \'\'\'Unpack ZXP into export Folder\'\'\'.\r\n\r\n4. Create the package.\r\n\r\n==== STEP 5 : Deploying the Application ====\r\n\r\n1. Open Adobe Extension Manager and select \'\'\'Premiere Pro CC\'\'\' from the left panel.\r\n\r\n2. Click on the Install link and select the .zxp package from the location that was saved in Step 4.\r\n\r\n3. Ignore warnings.\r\n\r\n==== STEP 6 : Validate the Extension in Premiere Pro CC ====\r\n\r\n1. Open Premiere Pro CC and go to Windows -> Extensions and click on your extension.\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('AdobePremierePro',4,1411022717940449,'akshat','192.168.0.18','== Adobe Premiere Pro ==\r\n\r\n[[Image(AdobePP.jpg,270px,right)]]\r\n\r\n=== Adobe Premiere Pro Installation and Configuration Steps  ===\r\n \r\n==== STEP 1 : Installation steps ====\r\n\r\n1.  First download the creative cloud from the following link [http://www.adobe.com/appsmanager/ download here].\r\n\r\n2. Install the following applications from creative cloud:\r\n\r\n{{{\r\na. Adobe Premiere Pro CC\r\nb. Extended Script Toolkit CC\r\nc. Extension Manager\r\nd. Media Encoder CC\r\n}}}\r\n\r\n3. Download eclipse IDE.\r\n\r\n4. Download Extension Builder 3 plugin for eclipse from the following link. [http://labs.adobe.com/downloads/extensionbuilder3.html download here].\r\n\r\nExtension Builder 3 plugin Installation :\r\n{{{\r\nOpen eclipse and browse though following links through eclipse menu...\r\n\r\nHelp -> Install New Software -> Add -> Click Archive -> Browse to the .zip file -> Install\r\n}}}\r\n\r\n==== STEP 2 : Configure Preferences ====\r\n\r\n1. Click on eclipse menu and select Preferences.\r\n\r\n2. Configure CC Launching Path. Follow the steps given in the following url [http://blogs.adobe.com/cssdk/2014/06/adobe-extension-builder-and-creative-cloud-2014.html Click here].\r\n\r\n3. Extract the following [attachment:CEPServiceManager4.tar.gz tar] file into following path for root user: \r\n{{{\r\n/Library/Application Support/Adobe/CEPServiceManager4/\r\n}}}\r\n\r\n3. Extract the following [attachment:CEPServiceManager4_Username.tar.gz  tar] file into following path for normal user: \r\n{{{\r\n/Users/username/Library/Application Support/Adobe/CEPServiceManager4/\r\n}}}\r\n\r\n4. Update \'\'\'Bundle Manifest XML\'\'\'\r\n\r\na. Right click on project and click on \'\'\'Adobe Extension Builder 3\'\'\' and select \'\'\'Bundle Manifest Editor\'\'\'\r\nb. Navigate to the manifest.xml tab. Right click anywhere in it and choose Open With -> XML Editor\r\nc. Modify the Host parameters by updating the version to Creative Cloud.\r\n\r\n{{{\r\n<Host Name=”PPRO” Version=”[8.0,8.9]” />\r\n\r\nFinally, change the RequireRunTime attribute to :\r\n<RequiredRuntime Name=”CSXS” Version=”5.0″ />\r\n}}}\r\n\r\n==== STEP 3 : Create new Project ====\r\n\r\n1. For creating a new project for Adobe Premiere Pro go through the following menus in eclipse:\r\n{{{\r\nFile -> New -> Adobe Extension Builder\r\n}}}\r\n\r\n2. Follow the steps given in [attachment:HTML5_101.pdf HTML5_101] document for creating new project.\r\n\r\n3. For Extended Javascript documentation API refer the following document [attachment:JavaScriptToolsGuideCC.pdf​ Javascript Tools Guide].\r\n\r\n\r\n==== STEP 4. Exporting the Application ====\r\n\r\n1. Right click on project directory in eclipse and select the \'\'\'Export\'\'\' option from context menu and select export as \'\'\'Adobe Application Extension\'\'\' from \'\'\'Extension Builder 3\'\'\' menu.\r\n\r\n2. Browse through next step and create certificate with valid name and password.\r\n\r\n3. Check the option \'\'\'Unpack ZXP into export Folder\'\'\'.\r\n\r\n4. Create the package.\r\n\r\n==== STEP 5 : Deploying the Application ====\r\n\r\n1. Open Adobe Extension Manager and select \'\'\'Premiere Pro CC\'\'\' from the left panel.\r\n\r\n2. Click on the Install link and select the .zxp package from the location that was saved in Step 4.\r\n\r\n3. Ignore warnings.\r\n\r\n==== STEP 6 : Validate the Extension in Premiere Pro CC ====\r\n\r\n1. Open Premiere Pro CC and go to Windows -> Extensions and click on your extension.\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('AdobePremierePro',5,1411023062371262,'akshat','192.168.0.18','== Adobe Premiere Pro ==\r\n\r\n[[Image(AdobePP.jpg,270px,right)]]\r\n\r\n=== Adobe Premiere Pro Installation and Configuration Steps  ===\r\n \r\n==== STEP 1 : Installation steps ====\r\n\r\n1.  First download the creative cloud from the following link [http://www.adobe.com/appsmanager/ download here Full] or Creative Cloud Installer .dmg link Internet Installer File [attachment:CreativeCloudInstaller.dmg​ Creative Cloud Installer .dmg file].\r\n\r\n2. Install the following applications from creative cloud:\r\n\r\n{{{\r\na. Adobe Premiere Pro CC\r\nb. Extended Script Toolkit CC\r\nc. Extension Manager\r\nd. Media Encoder CC\r\n}}}\r\n\r\n3. Download eclipse IDE.\r\n\r\n4. Download Extension Builder 3 plugin for eclipse from the following link. [http://labs.adobe.com/downloads/extensionbuilder3.html download here].\r\n\r\nExtension Builder 3 plugin Installation :\r\n{{{\r\nOpen eclipse and browse though following links through eclipse menu...\r\n\r\nHelp -> Install New Software -> Add -> Click Archive -> Browse to the .zip file -> Install\r\n}}}\r\n\r\n==== STEP 2 : Configure Preferences ====\r\n\r\n1. Click on eclipse menu and select Preferences.\r\n\r\n2. Configure CC Launching Path. Follow the steps given in the following url [http://blogs.adobe.com/cssdk/2014/06/adobe-extension-builder-and-creative-cloud-2014.html Click here].\r\n\r\n3. Extract the following [attachment:CEPServiceManager4.tar.gz tar] file into following path for root user: \r\n{{{\r\n/Library/Application Support/Adobe/CEPServiceManager4/\r\n}}}\r\n\r\n3. Extract the following [attachment:CEPServiceManager4_Username.tar.gz  tar] file into following path for normal user: \r\n{{{\r\n/Users/username/Library/Application Support/Adobe/CEPServiceManager4/\r\n}}}\r\n\r\n4. Update \'\'\'Bundle Manifest XML\'\'\'\r\n\r\na. Right click on project and click on \'\'\'Adobe Extension Builder 3\'\'\' and select \'\'\'Bundle Manifest Editor\'\'\'\r\nb. Navigate to the manifest.xml tab. Right click anywhere in it and choose Open With -> XML Editor\r\nc. Modify the Host parameters by updating the version to Creative Cloud.\r\n\r\n{{{\r\n<Host Name=”PPRO” Version=”[8.0,8.9]” />\r\n\r\nFinally, change the RequireRunTime attribute to :\r\n<RequiredRuntime Name=”CSXS” Version=”5.0″ />\r\n}}}\r\n\r\n==== STEP 3 : Create new Project ====\r\n\r\n1. For creating a new project for Adobe Premiere Pro go through the following menus in eclipse:\r\n{{{\r\nFile -> New -> Adobe Extension Builder\r\n}}}\r\n\r\n2. Follow the steps given in [attachment:HTML5_101.pdf HTML5_101] document for creating new project.\r\n\r\n3. For Extended Javascript documentation API refer the following document [attachment:JavaScriptToolsGuideCC.pdf​ Javascript Tools Guide].\r\n\r\n\r\n==== STEP 4. Exporting the Application ====\r\n\r\n1. Right click on project directory in eclipse and select the \'\'\'Export\'\'\' option from context menu and select export as \'\'\'Adobe Application Extension\'\'\' from \'\'\'Extension Builder 3\'\'\' menu.\r\n\r\n2. Browse through next step and create certificate with valid name and password.\r\n\r\n3. Check the option \'\'\'Unpack ZXP into export Folder\'\'\'.\r\n\r\n4. Create the package.\r\n\r\n==== STEP 5 : Deploying the Application ====\r\n\r\n1. Open Adobe Extension Manager and select \'\'\'Premiere Pro CC\'\'\' from the left panel.\r\n\r\n2. Click on the Install link and select the .zxp package from the location that was saved in Step 4.\r\n\r\n3. Ignore warnings.\r\n\r\n==== STEP 6 : Validate the Extension in Premiere Pro CC ====\r\n\r\n1. Open Premiere Pro CC and go to Windows -> Extensions and click on your extension.\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Ant',1,1298748251000000,'akshat','158.144.16.2','== ANT ==','',0),('Ant',2,1298748392000000,'akshat','158.144.16.2','== ANT ==\r\n\r\n[[Image(Ant.png,right)]]','',0),('Ant',3,1298748560000000,'akshat','158.144.16.2','== ANT ==\r\n\r\n[[Image(Ant.png,200px,right)]]','',0),('Ant',4,1298748686000000,'akshat','158.144.16.2','== ANT ==\r\n\r\n[[Image(Ant.png,200px,right)]]\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n\r\n\r\n','',0),('Ant',5,1298749460000000,'akshat','158.144.16.2','== ANT ==\r\n\r\n[[Image(Ant.png,200px,right)]]\r\n\r\nApache Ant is an Open Source software tool for automating software build processes. It is similar to Make but is implemented using the Java language, requires the Java platform, and is best suited to building Java projects. Ant is cross platform and portable.\r\n\r\nAnt can get source code from version control like CVS, Subversion, ClearCase etc.[[BR]]\r\nAnt can compile source code.[[BR]]\r\nAnt can run unit tests.[[BR]]\r\nAnt can package compiled code and resources like jars, wars, ears, tars, zips etc\r\n\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n\r\n\r\n','',0),('Ant',6,1298749498000000,'akshat','158.144.16.2','== ANT ==\r\n\r\n[[Image(Ant.png,200px,right)]]\r\n\r\nApache Ant is an Open Source software tool for automating software build processes. It is similar to Make but is implemented using the Java language, requires the Java platform, and is best suited to building Java projects. Ant is cross platform and portable.\r\n\r\nAnt can get source code from version control like CVS, Subversion etc.[[BR]]\r\nAnt can compile source code.[[BR]]\r\nAnt can run unit tests.[[BR]]\r\nAnt can package compiled code and resources like jars, wars, ears, tars, zips etc\r\n\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n\r\n\r\n','',0),('Ant',7,1298753338000000,'akshat','158.144.16.2','== ANT ==\r\n\r\n[[Image(Ant.png,200px,right)]]\r\n\r\nApache Ant is an Open Source software tool for automating software build processes. It is similar to Make but is implemented using the Java language, requires the Java platform, and is best suited to building Java projects. Ant is cross platform and portable.\r\n\r\nAnt can get source code from version control like CVS, Subversion etc.[[BR]]\r\nAnt can compile source code.[[BR]]\r\nAnt can run unit tests.[[BR]]\r\nAnt can package compiled code and resources like jars, wars, ears, tars, zips etc\r\n\r\n----\r\n\r\n=== ANT TERMINOLOGY ===\r\n1.  \'\'\'<project>\'\'\' : It is the top level element in an Ant Script. It has has three optional attributes:\r\n  a. \'\'\'name\'\'\'     : Name of the Project.[[BR]]\r\n  b. \'\'\'default\'\'\'  : The default target to use when no target is supplied.[[BR]]\r\n  c. \'\'\'basedir\'\'\'  : The base directory from which all path calculations are done.[[BR]]\r\n\r\n\r\n2. \'\'\'Target\'\'\' : Target is a set of task that needs to be executed. Each project should define zero or more tasks. On starting Ant we select which target(s) to be executed. Default is executed when no target is defined. Targets can be conditionally executed (using if/unless). Targets can depend on other targets and Target dependencies are transitive.\r\n\r\n{{{\r\n<target name=\"A\"/>\r\n<target name=\"B\" depends=\"A\"/>\r\n<target name=\"C\" depends=\"A\"/>\r\n<target name=\"D\" depends=\"B,C\"/>\r\n\r\nSo, first A is executed, then B, then C, and finally D\r\n}}}\r\n\r\n3. \'\'\'Tasks\'\'\' : A task is a piece of code that can be executed. Task can have multiple attributes whose value use the value of a property. Ant comes with over 80 core tasks, and 60 optional tasks and over 100 third party tools and tasks.\r\n\r\n4. \'\'\'Properties\'\'\' : A property has a name and a value and the name is case-sensitive. Properties may be used in the value of task attributes. This is done by placing the property name between \"${\" and \"}\" in the attribute value. E.g. ${builddir}/classes is resolved at run-time as build/classes.[[BR]]\r\n\r\n\'\'Properties are immutable\'\' : When the property is set it should be freeze for rest of the build. They are mostly not variable and they are comparable to string constants in other languages. [[BR]]\r\n\r\n\'\'Setting Properties - Precedence\'\' : When the same property is set in multiple places, the first definition of the property freezes the value, subsequent definition attempts fail. The following rules are used to determine precedence:\r\n\r\n{{{\r\nProperties defined on the command line: Dname=value\r\n<property> elements under the <project> element in their written order\r\n<property> elements under <target> elements in their executued order\r\n}}}\r\n\r\n\'\'Built-in Properties\'\' :[[BR]]\r\n\'\'\'basedir\'\'\' : The absolute path of the project\'s basedir.[[BR]]\r\n\'\'\'ant.file\'\'\' : The absolute path of the buildfile.[[BR]]\r\n\'\'\'ant.version\'\'\' : The version of Ant[[BR]]\r\n\'\'\'ant.project.name\'\'\' : The name of the project that is currently executing; it is set in the name attribute of <project>[[BR]]\r\n\'\'\'ant.java.version\'\'\' : The JVM version Ant detected.\r\n\r\n5. \'\'\'Path\'\'\'\r\n\r\n{{{\r\n<classpath>\r\n  <pathelement path=\"${classpath}\"/>\r\n  <fileset dir=\"lib\">\r\n    <include name=\"**/*.jar\"/>\r\n  </fileset>\r\n  <pathelement location=\"classes\"/>\r\n  <dirset dir=\"${build.dir}\">\r\n    <include name=\"apps/**/classes\"/>\r\n    <exclude name=\"apps/**/*Test*\"/>\r\n  </dirset>\r\n  <filelist refid=\"third-party_jars\"/>\r\n</classpath>\r\n}}}\r\n\r\n\r\n----\r\n\r\n== ANT INSTALLATION ==\r\n\'\'\'1. ANT ENVIRONMENTS\'\'\'\r\n\r\n----\r\n=== References ===\r\n[http://en.wikipedia.org/wiki/Apache_Ant Wikipedia][[BR]]\r\n[http://www.exubero.com/ant/antintro-s5.html Joe Schmetzer Presentation]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n\r\n\r\n','',0),('Ant',8,1397142168785233,'admin','192.168.0.13','== ANT ==\r\n\r\n[[Image(/chrome/site/Ant/Ant.png,200px,right)]]\r\n\r\nApache Ant is an Open Source software tool for automating software build processes. It is similar to Make but is implemented using the Java language, requires the Java platform, and is best suited to building Java projects. Ant is cross platform and portable.\r\n\r\nAnt can get source code from version control like CVS, Subversion etc.[[BR]]\r\nAnt can compile source code.[[BR]]\r\nAnt can run unit tests.[[BR]]\r\nAnt can package compiled code and resources like jars, wars, ears, tars, zips etc\r\n\r\n----\r\n\r\n=== ANT TERMINOLOGY ===\r\n1.  \'\'\'<project>\'\'\' : It is the top level element in an Ant Script. It has three optional attributes:\r\n  a. \'\'\'name\'\'\'     : Name of the Project.[[BR]]\r\n  b. \'\'\'default\'\'\'  : The default target to use when no target is supplied.[[BR]]\r\n  c. \'\'\'basedir\'\'\'  : The base directory from which all path calculations are done.[[BR]]\r\n\r\n\r\n2. \'\'\'Target\'\'\' : Target is a set of task that needs to be executed. Each project should define zero or more tasks. On starting Ant we select which target(s) to be executed. Default is executed when no target is defined. Targets can be conditionally executed (using if/unless). Targets can depend on other targets and Target dependencies are transitive.\r\n\r\n{{{\r\n<target name=\"A\"/>\r\n<target name=\"B\" depends=\"A\"/>\r\n<target name=\"C\" depends=\"A\"/>\r\n<target name=\"D\" depends=\"B,C\"/>\r\n\r\nSo, first A is executed, then B, then C, and finally D\r\n}}}\r\n\r\n3. \'\'\'Tasks\'\'\' : A task is a piece of code that can be executed. Task can have multiple attributes whose value use the value of a property. Ant comes with over 80 core tasks, and 60 optional tasks and over 100 third party tools and tasks.\r\n\r\n4. \'\'\'Properties\'\'\' : A property has a name and a value and the name is case-sensitive. Properties may be used in the value of task attributes. This is done by placing the property name between \"${\" and \"}\" in the attribute value. E.g. ${builddir}/classes is resolved at run-time as build/classes.[[BR]]\r\n\r\n\'\'Properties are immutable\'\' : When the property is set it should be freeze for rest of the build. They are mostly not variable and they are comparable to string constants in other languages. [[BR]]\r\n\r\n\'\'Setting Properties - Precedence\'\' : When the same property is set in multiple places, the first definition of the property freezes the value, subsequent definition attempts fail. The following rules are used to determine precedence:\r\n\r\n{{{\r\nProperties defined on the command line: Dname=value\r\n<property> elements under the <project> element in their written order\r\n<property> elements under <target> elements in their executued order\r\n}}}\r\n\r\n\'\'Built-in Properties\'\' :[[BR]]\r\n\'\'\'basedir\'\'\' : The absolute path of the project\'s basedir.[[BR]]\r\n\'\'\'ant.file\'\'\' : The absolute path of the buildfile.[[BR]]\r\n\'\'\'ant.version\'\'\' : The version of Ant[[BR]]\r\n\'\'\'ant.project.name\'\'\' : The name of the project that is currently executing; it is set in the name attribute of <project>[[BR]]\r\n\'\'\'ant.java.version\'\'\' : The JVM version Ant detected.\r\n\r\n5. \'\'\'Path\'\'\'\r\n\r\n{{{\r\n<classpath>\r\n  <pathelement path=\"${classpath}\"/>\r\n  <fileset dir=\"lib\">\r\n    <include name=\"**/*.jar\"/>\r\n  </fileset>\r\n  <pathelement location=\"classes\"/>\r\n  <dirset dir=\"${build.dir}\">\r\n    <include name=\"apps/**/classes\"/>\r\n    <exclude name=\"apps/**/*Test*\"/>\r\n  </dirset>\r\n  <filelist refid=\"third-party_jars\"/>\r\n</classpath>\r\n}}}\r\n\r\n\r\n----\r\n\r\n== ANT INSTALLATION ==\r\n\'\'\'1. ANT ENVIRONMENTS\'\'\'\r\n\r\n----\r\n=== References ===\r\n[http://en.wikipedia.org/wiki/Apache_Ant Wikipedia][[BR]]\r\n[http://www.exubero.com/ant/antintro-s5.html Joe Schmetzer Presentation]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n\r\n\r\n','',0),('Ant',9,1397144373102693,'admin','192.168.0.13','== ANT ==\r\n\r\n[[Image(htdocs:Ant/Ant.png,200px,right)]]\r\n\r\nApache Ant is an Open Source software tool for automating software build processes. It is similar to Make but is implemented using the Java language, requires the Java platform, and is best suited to building Java projects. Ant is cross platform and portable.\r\n\r\nAnt can get source code from version control like CVS, Subversion etc.[[BR]]\r\nAnt can compile source code.[[BR]]\r\nAnt can run unit tests.[[BR]]\r\nAnt can package compiled code and resources like jars, wars, ears, tars, zips etc\r\n\r\n----\r\n\r\n=== ANT TERMINOLOGY ===\r\n1.  \'\'\'<project>\'\'\' : It is the top level element in an Ant Script. It has three optional attributes:\r\n  a. \'\'\'name\'\'\'     : Name of the Project.[[BR]]\r\n  b. \'\'\'default\'\'\'  : The default target to use when no target is supplied.[[BR]]\r\n  c. \'\'\'basedir\'\'\'  : The base directory from which all path calculations are done.[[BR]]\r\n\r\n\r\n2. \'\'\'Target\'\'\' : Target is a set of task that needs to be executed. Each project should define zero or more tasks. On starting Ant we select which target(s) to be executed. Default is executed when no target is defined. Targets can be conditionally executed (using if/unless). Targets can depend on other targets and Target dependencies are transitive.\r\n\r\n{{{\r\n<target name=\"A\"/>\r\n<target name=\"B\" depends=\"A\"/>\r\n<target name=\"C\" depends=\"A\"/>\r\n<target name=\"D\" depends=\"B,C\"/>\r\n\r\nSo, first A is executed, then B, then C, and finally D\r\n}}}\r\n\r\n3. \'\'\'Tasks\'\'\' : A task is a piece of code that can be executed. Task can have multiple attributes whose value use the value of a property. Ant comes with over 80 core tasks, and 60 optional tasks and over 100 third party tools and tasks.\r\n\r\n4. \'\'\'Properties\'\'\' : A property has a name and a value and the name is case-sensitive. Properties may be used in the value of task attributes. This is done by placing the property name between \"${\" and \"}\" in the attribute value. E.g. ${builddir}/classes is resolved at run-time as build/classes.[[BR]]\r\n\r\n\'\'Properties are immutable\'\' : When the property is set it should be freeze for rest of the build. They are mostly not variable and they are comparable to string constants in other languages. [[BR]]\r\n\r\n\'\'Setting Properties - Precedence\'\' : When the same property is set in multiple places, the first definition of the property freezes the value, subsequent definition attempts fail. The following rules are used to determine precedence:\r\n\r\n{{{\r\nProperties defined on the command line: Dname=value\r\n<property> elements under the <project> element in their written order\r\n<property> elements under <target> elements in their executued order\r\n}}}\r\n\r\n\'\'Built-in Properties\'\' :[[BR]]\r\n\'\'\'basedir\'\'\' : The absolute path of the project\'s basedir.[[BR]]\r\n\'\'\'ant.file\'\'\' : The absolute path of the buildfile.[[BR]]\r\n\'\'\'ant.version\'\'\' : The version of Ant[[BR]]\r\n\'\'\'ant.project.name\'\'\' : The name of the project that is currently executing; it is set in the name attribute of <project>[[BR]]\r\n\'\'\'ant.java.version\'\'\' : The JVM version Ant detected.\r\n\r\n5. \'\'\'Path\'\'\'\r\n\r\n{{{\r\n<classpath>\r\n  <pathelement path=\"${classpath}\"/>\r\n  <fileset dir=\"lib\">\r\n    <include name=\"**/*.jar\"/>\r\n  </fileset>\r\n  <pathelement location=\"classes\"/>\r\n  <dirset dir=\"${build.dir}\">\r\n    <include name=\"apps/**/classes\"/>\r\n    <exclude name=\"apps/**/*Test*\"/>\r\n  </dirset>\r\n  <filelist refid=\"third-party_jars\"/>\r\n</classpath>\r\n}}}\r\n\r\n\r\n----\r\n\r\n== ANT INSTALLATION ==\r\n\'\'\'1. ANT ENVIRONMENTS\'\'\'\r\n\r\n----\r\n=== References ===\r\n[http://en.wikipedia.org/wiki/Apache_Ant Wikipedia][[BR]]\r\n[http://www.exubero.com/ant/antintro-s5.html Joe Schmetzer Presentation]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n\r\n\r\n','',0),('BigData',1,1402570545924865,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Big Data</h2>\r\n}}}\r\n\r\nAccording to IBM Big data Big data spans three dimensions: Volume, Velocity and Variety.\r\n\r\n\'\'\'Volume\'\'\': Enterprises are awash with ever-growing data of all types, easily amassing terabytes—even petabytes—of information.\r\n\r\n\'\'\'Velocity\'\'\': Sometimes 2 minutes is too late. For time-sensitive processes such as catching fraud, big data must be used as it streams into your enterprise in order to maximize its value.\r\n\r\n\'\'\'Variety\'\'\': Big data is any type of data - structured and unstructured data such as text, sensor data, audio, video, click streams, log files and more. New insights are found when analyzing these data types together.\r\n\r\n=== References ===\r\n\r\n[http://wiki.apache.org/hadoop/GettingStartedWithHadoop Hadoop Installation]\r\n\r\n[http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-single-node-cluster/ Single Node Setup - Michael Blog]\r\n\r\n[http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-multi-node-cluster/ Multi Node Setup - Michael Blog]\r\n\r\n[http://hadoop.apache.org/docs/r2.3.0/hadoop-project-dist/hadoop-common/SingleNodeSetup.html Single Node Setup - Apache Documentation]\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('BigData',2,1405346617141060,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Big Data</h2>\r\n}}}\r\n\r\nAccording to IBM Big data Big data spans three dimensions: Volume, Velocity and Variety.\r\n\r\n\'\'\'Volume\'\'\': Enterprises are awash with ever-growing data of all types, easily amassing terabytes—even petabytes—of information.\r\n\r\n\'\'\'Velocity\'\'\': Sometimes 2 minutes is too late. For time-sensitive processes such as catching fraud, big data must be used as it streams into your enterprise in order to maximize its value.\r\n\r\n\'\'\'Variety\'\'\': Big data is any type of data - structured and unstructured data such as text, sensor data, audio, video, click streams, log files and more. New insights are found when analyzing these data types together.\r\n\r\n=== References ===\r\n\r\n[wiki:Hadoop Hadoop Installation]\r\n\r\n[http://wiki.apache.org/hadoop/GettingStartedWithHadoop Hadoop Installation Documentation]\r\n\r\n[http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-single-node-cluster/ Single Node Setup - Michael Blog]\r\n\r\n[http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-multi-node-cluster/ Multi Node Setup - Michael Blog]\r\n\r\n[http://hadoop.apache.org/docs/r2.3.0/hadoop-project-dist/hadoop-common/SingleNodeSetup.html Single Node Setup - Apache Documentation]\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('C++',1,1402569132324945,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[http://www.tutorialspoint.com/cplusplus/cpp_basic_syntax.htm C++ Tutorial]\r\n\r\n[http://www.cplusplus.com/doc/tutorial/structures/ Data Structures]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('CamelCase',1,1291894092000000,'trac','127.0.0.1','= !CamelCase =\nNew words created by smashing together capitalized words.\n\nCamelCase is the original wiki convention for creating hyperlinks, with the additional requirement that the capitals are followed by a lower-case letter; hence “AlabamA” and “ABc” will not be links.\n\n== Customizing the Wiki behavior ==\n\nSome people dislike linking by CamelCase.  While Trac remains faithful to the original Wiki style, it provides a number of ways to accomodate users with different preferences:\n * There\'s an option (`ignore_missing_pages` in `[wiki]`) to simply ignore links to missing pages when the link is written using the CamelCase style, instead of that word being replaced by a gray link followed by a question mark.[[BR]]\n   That can be useful when CamelCase style is used to name code artifacts like class names and there\'s no corresponding page for them.\n * There\'s an option (`split_page_names` in `[wiki]`) to automatically insert space characters between the words of a CamelCase link when rendering the link.\n * Creation of explicit Wiki links is also easy, see WikiPageNames for details.\n * In addition, Wiki formatting can be disabled completely in some places (e.g. when rendering commit log messages)\n\nSee TracIni for more information on the available options.\n\n== More information on !CamelCase ==\n\n * http://c2.com/cgi/wiki?WikiCase\n * http://en.wikipedia.org/wiki/CamelCase\n\n----\nSee also: WikiPageNames, WikiNewPage, WikiFormatting, TracWiki',NULL,NULL),('CamelCase',2,1397068026257491,'trac','127.0.0.1','= !CamelCase =\nNew words created by smashing together capitalized words.\n\nCamelCase is the original wiki convention for creating hyperlinks, with the additional requirement that the capitals are followed by a lower-case letter; hence “AlabamA” and “ABc” will not be links.\n\n== Customizing the Wiki behavior ==\n\nSome people dislike linking by CamelCase.  While Trac remains faithful to the original Wiki style, it provides a number of ways to accomodate users with different preferences:\n * There\'s an option (`ignore_missing_pages` in the [wiki:TracIni#wiki-section \"[wiki]\"] section of TracIni) to simply ignore links to missing pages when the link is written using the CamelCase style, instead of that word being replaced by a gray link followed by a question mark.[[BR]]\n   That can be useful when CamelCase style is used to name code artifacts like class names and there\'s no corresponding page for them.\n * There\'s an option (`split_page_names` in the  [wiki:TracIni#wiki-section \"[wiki]\"] section of TracIni) to automatically insert space characters between the words of a CamelCase link when rendering the link.\n * Creation of explicit Wiki links is also easy, see WikiPageNames for details.\n * In addition, Wiki formatting can be disabled completely in some places (e.g. when rendering commit log messages). See `wiki_format_messages` in the [wiki:TracIni#changeset-section \"[changeset]\"] section of TracIni.\n\nSee TracIni for more information on the available options.\n\n== More information on !CamelCase ==\n\n * http://c2.com/cgi/wiki?WikiCase\n * http://en.wikipedia.org/wiki/CamelCase\n\n----\nSee also: WikiPageNames, WikiNewPage, WikiFormatting, TracWiki\n',NULL,NULL),('Contents',1,1291896928000000,'akshat','158.144.12.163','\'\'\'List of all Pages\'\'\'','',0),('Contents',2,1291896961000000,'akshat','158.144.12.163','== List of all Pages ==\r\n\r\nLDAP\r\n\r\nPlone\r\n\r\nSubversion','',0),('Contents',3,1293012284000000,'akshat','158.144.12.194','== List of all Pages ==\r\n\r\nLDAP\r\n\r\nPlone\r\n\r\nSubversion sudo chown -R svn.svn svn','',0),('Contents',4,1297333922000000,'akshat','158.144.16.12','== List of all Pages ==\r\n\r\n[Mailman] [http://mutha/trac/Computing%20Documentation/wiki/Mailman]\r\n\r\nLDAP\r\n\r\nPlone\r\n\r\nSubversion sudo chown -R svn.svn svn','',0),('Contents',5,1297333981000000,'akshat','158.144.16.12','== List of all Pages ==\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\nPlone\r\n\r\nSubversion sudo chown -R svn.svn svn','',0),('Contents',6,1298748226000000,'akshat','158.144.16.2','== List of all Pages ==\r\n\r\n== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\nPlone\r\n\r\nSubversion sudo chown -R svn.svn svn','',0),('Contents',7,1298748237000000,'akshat','158.144.16.2','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\nPlone\r\n\r\nSubversion sudo chown -R svn.svn svn','',0),('Contents',8,1298748820000000,'akshat','158.144.16.2','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\nPlone\r\n\r\n[wiki:Subversion Subversion]','',0),('Contents',9,1298835406000000,'akshat','158.144.16.2','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\nPlone\r\n\r\n[wiki:Tomcat Apache-Tomcat]\r\n\r\n[wiki:Subversion Subversion]','',0),('Contents',10,1298835895000000,'akshat','158.144.16.2','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\nPlone\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:Tomcat Apache-Tomcat]','',0),('Contents',11,1299231001000000,'akshat','158.144.16.2','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\nPlone\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:Tomcat Apache-Tomcat]','',0),('Contents',12,1301997530000000,'akshat','59.163.79.36','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:Tomcat Apache-Tomcat]','',0),('Contents',13,1303127835000000,'akshat','158.144.16.5','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:Tomcat Eclipse Plugin Installations]','',0),('Contents',14,1303128179000000,'akshat','158.144.16.5','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',15,1321528222000000,'akshat','158.144.16.12','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\nLDAP\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',16,1322765114000000,'akshat','158.144.16.12','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',17,1325068387000000,'akshat','158.144.16.12','== List of all Pages ==\r\n\r\n[wiki:Ant Ant]\r\n\r\n[wiki:Mailman Mailman] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:LDAPClient OpenLDAP Client COnfiguration]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',18,1325092102000000,'akshat','158.144.16.12','== List of all Pages ==\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:LDAPClient OpenLDAP Client COnfiguration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',19,1334048590145397,'akshat','158.144.16.26','== List of all Pages ==\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:OLAF Online Application Forms]\r\n\r\n[wiki:LDAPClient OpenLDAP Client COnfiguration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',20,1335173224115746,'akshat','158.144.16.26','== List of all Pages ==\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:OLAF Online Application Forms]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',21,1397143337036931,'admin','192.168.0.13','== List of all Pages ==\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',22,1397569009043445,'akshat','192.168.0.8','== List of all Pages ==\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]','',0),('Contents',23,1398089929176168,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',24,1398092750836593,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',25,1402056368761147,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LinuxCommands Linux Commands]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',26,1402567199921000,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LinuxCommands Linux Commands]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Languages Specific</h2>\r\n}}}\r\n\r\n[wiki:Python Python References] \r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',27,1402568558161063,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LinuxCommands Linux Commands]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Languages Specific</h2>\r\n}}}\r\n\r\n[wiki:Python C++] \r\n\r\n[wiki:Python Python] \r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Cheat Sheets</h2>\r\n}}}\r\n\r\n[wiki:Vim Vim Editor]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',28,1402569091704119,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LinuxCommands Linux Commands]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Languages Specific</h2>\r\n}}}\r\n\r\n[wiki:C++ C++] \r\n\r\n[wiki:Python Python] \r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Cheat Sheets</h2>\r\n}}}\r\n\r\n[wiki:Vim Vim Editor]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',29,1402569471308575,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LinuxCommands Linux Commands]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Languages Specific</h2>\r\n}}}\r\n\r\n[wiki:C++ C++] \r\n\r\n[wiki:Python Python] \r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Cheat Sheets</h2>\r\n}}}\r\n\r\n[wiki:Sed Sed]\r\n\r\n[wiki:Vim Vim Editor]\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',30,1402570010702658,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LinuxCommands Linux Commands]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Languages Specific</h2>\r\n}}}\r\n\r\n[wiki:C++ C++] \r\n\r\n[wiki:Java Java]\r\n\r\n[wiki:Python Python]\r\n\r\n[http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]\r\n\r\n\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Cheat Sheets</h2>\r\n}}}\r\n\r\n[wiki:Sed Sed]\r\n\r\n[wiki:Vim Vim Editor]\r\n\r\n\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',31,1402571503261588,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LinuxCommands Linux Commands]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Languages Specific</h2>\r\n}}}\r\n\r\n[wiki:Qt Qt]\r\n\r\n[wiki:C++ C++] \r\n\r\n[wiki:Java Java]\r\n\r\n[wiki:Python Python]\r\n\r\n[wiki:BigData Big Data]\r\n\r\n[http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]\r\n\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Cheat Sheets</h2>\r\n}}}\r\n\r\n[wiki:Sed Sed]\r\n\r\n[wiki:Vim Vim Editor]\r\n\r\n\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',32,1402572038347349,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #191970\">List of all Pages</h2>\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:25%;  border-width:20px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>Computing Documentation </h2>\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n<br><br>\r\n</div>\r\n\r\n<div align =\"justify\" style=\"width:25%;  margin-left:450px; margin-bottom:-900px; border-width:20px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>Computing Documentation </h2>\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n[wiki:Ant Ant] \r\n\r\n[wiki:LDAP LDAP]\r\n\r\n[wiki:Plone Plone]\r\n\r\n[wiki:Samba Samba]\r\n\r\n[wiki:MySQL MySQL]\r\n\r\n[wiki:Tomcat Tomcat]\r\n\r\n[wiki:RedHat Red Hat]\r\n\r\n[wiki:Mailman Mailman]\r\n\r\n[wiki:Subversion Subversion]\r\n\r\n[wiki:LinuxCommands Linux Commands]\r\n\r\n[wiki:EclipsePlugins Eclipse Plugin Installations]\r\n\r\n[wiki:LDAPClient OpenLDAP Client Configuration]\r\n\r\n\r\n[[BR]]\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Languages Specific</h2>\r\n}}}\r\n\r\n[wiki:Qt Qt]\r\n\r\n[wiki:C++ C++] \r\n\r\n[wiki:Java Java]\r\n\r\n[wiki:Python Python]\r\n\r\n[wiki:BigData Big Data]\r\n\r\n[http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]\r\n\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Cheat Sheets</h2>\r\n}}}\r\n\r\n[wiki:Sed Sed]\r\n\r\n[wiki:Vim Vim Editor]\r\n\r\n\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n[wiki:OpenSSL OpenSSL Vulnerability]\r\n\r\n[http://lwn.net/Articles/317814/ Taming the OOM killer]','',0),('Contents',33,1402579101424008,'akshat','192.168.0.18','{{{\r\n#!html\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:25%;  margin-left:450px; border-width:22px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>List of All Pages</h2>\r\nThis pages has the following Categories:\r\n<br><br>\r\nGeneral Documentation\r\n<br>\r\nLanguage Specific Documentation\r\n<br>\r\nCheat Sheets\r\n<br>\r\nInteresting Articles\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!td\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n||  [[BR]][[BR]] \'\'\'General Documentation\'\'\' [[BR]][[BR]]  ||  [[BR]] \'\'\'Language Specific [[BR]] Documentation\'\'\'  ||  [[BR]]  \'\'\'Cheat Sheets of Various [[BR]] Tools\'\'\'  ||\r\n|| [wiki:Ant Ant]                                                            || [wiki:Qt Qt]                            || [wiki:Sed Sed] ||\r\n|| [wiki:LDAP LDAP]                                                       || [wiki:C++ C++]                    || [wiki:Vim Vim Editor] ||\r\n|| [wiki:Plone Plone]                                                      || [wiki:Java Java]                       ||  ||\r\n|| [wiki:Samba Samba]                                                  || [wiki:Python Python]               ||  ||\r\n|| [wiki:MySQL MySQL]                                                  ||                                              ||  ||\r\n|| [wiki:Tomcat Tomcat]                                                ||                                              ||  ||\r\n|| [wiki:RedHat Red Hat]                                                ||                                              ||  ||\r\n|| [wiki:Mailman Mailman]                                             ||                                              ||  ||\r\n|| [wiki:Subversion Subversion]                                     ||                                              ||  ||\r\n|| [wiki:LinuxCommands Linux Commands]                  ||                                              ||  ||\r\n|| [wiki:EclipsePlugins Eclipse Plugin Installations]         ||                                             ||  ||\r\n|| [wiki:LDAPClient OpenLDAP Client Configuration]      ||                                             ||  ||\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n\r\n||  || [[BR]] \'\'\'storageDNA Wiki Docs\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| * || [wiki:BigData Big Data]  || Big data is high-volume, high-velocity and high-variety information assets that demand cost-effective, innovative forms of information processing for enhanced insight and decision making. ||\r\n|| * || [wiki:OpenSSL OpenSSL Vulnerability] ||The recent detection of heartbleed vulnerability in openssl which is a serious vulnerability in the popular OpenSSL cryptographic software library.||\r\n|| * || || ||\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">External Links</h2>\r\n}}}\r\n\r\n|| \'\'\'Serial\'\'\' || [[BR]]   \'\'\'Link\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| 1 || [http://lwn.net/Articles/317814/ Taming the OOM killer]                             ||To avoid the untimely killing of wrong processes under desperately low memory conditions, the out-of-memory (OOM) killer kicks in and picks a process to kill using a set of heuristics.||\r\n|| 2 || [http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]  || NPTEL Data Structure Course.                  ||\r\n|| * || || ||\r\n\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:WikiStart Home]\r\n\r\n----','',0),('Contents',34,1402579543664540,'akshat','192.168.0.18','{{{\r\n#!html\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:36%;  border-width:5px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>List of All Pages</h2>\r\nThis page contains links of all pages available and the documentation is categorised according to general documentation of various tools, Language specific documentation and some interesting knowledge base. This page also contains the links to cheat sheets of various tools and also some external links to the interesting articles.\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!td\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n||  [[BR]][[BR]] \'\'\'General Documentation\'\'\' [[BR]][[BR]]  ||  [[BR]] \'\'\'Language Specific [[BR]] Documentation\'\'\'  ||  [[BR]]  \'\'\'Cheat Sheets of Various [[BR]] Tools\'\'\'  ||\r\n|| [wiki:Ant Ant]                                                            || [wiki:Qt Qt]                            || [wiki:Sed Sed] ||\r\n|| [wiki:LDAP LDAP]                                                       || [wiki:C++ C++]                    || [wiki:Vim Vim Editor] ||\r\n|| [wiki:Plone Plone]                                                      || [wiki:Java Java]                       ||  ||\r\n|| [wiki:Samba Samba]                                                  || [wiki:Python Python]               ||  ||\r\n|| [wiki:MySQL MySQL]                                                  ||                                              ||  ||\r\n|| [wiki:Tomcat Tomcat]                                                ||                                              ||  ||\r\n|| [wiki:RedHat Red Hat]                                                ||                                              ||  ||\r\n|| [wiki:Mailman Mailman]                                             ||                                              ||  ||\r\n|| [wiki:Subversion Subversion]                                     ||                                              ||  ||\r\n|| [wiki:LinuxCommands Linux Commands]                  ||                                              ||  ||\r\n|| [wiki:EclipsePlugins Eclipse Plugin Installations]         ||                                             ||  ||\r\n|| [wiki:LDAPClient OpenLDAP Client Configuration]      ||                                             ||  ||\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n\r\n||  || [[BR]] \'\'\'storageDNA Wiki Docs\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| * || [wiki:BigData Big Data]  || Big data is high-volume, high-velocity and high-variety information assets that demand cost-effective, innovative forms of information processing for enhanced insight and decision making. ||\r\n|| * || [wiki:OpenSSL OpenSSL Vulnerability] ||The recent detection of heartbleed vulnerability in openssl which is a serious vulnerability in the popular OpenSSL cryptographic software library.||\r\n|| * || || ||\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">External Links</h2>\r\n}}}\r\n\r\n|| \'\'\'Serial\'\'\' || [[BR]]   \'\'\'Link\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| 1 || [http://lwn.net/Articles/317814/ Taming the OOM killer]                             ||To avoid the untimely killing of wrong processes under desperately low memory conditions, the out-of-memory (OOM) killer kicks in and picks a process to kill using a set of heuristics.||\r\n|| 2 || [http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]  || NPTEL Data Structure Course.                  ||\r\n|| * || || ||\r\n\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:WikiStart Home]\r\n\r\n----','',0),('Contents',35,1402640585963270,'akshat','192.168.0.18','{{{\r\n#!html\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:36%;  border-width:5px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>List of All Pages</h2>\r\nThis page contains links of all pages available and the documentation is categorised according to general documentation of various tools, Language specific documentation and some interesting knowledge base. This page also contains the links to cheat sheets of various tools and also some external links to the interesting articles.\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!td\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n||  [[BR]][[BR]] \'\'\'General Documentation\'\'\' [[BR]][[BR]]  ||  [[BR]] \'\'\'Language Specific [[BR]] Documentation\'\'\'  ||  [[BR]]  \'\'\'Cheat Sheets of Various [[BR]] Tools\'\'\'  ||\r\n|| [wiki:Ant Ant]                                                            || [wiki:Qt Qt]                            || [wiki:Sed Sed] ||\r\n|| [wiki:LDAP LDAP]                                                       || [wiki:C++ C++]                    || [wiki:Vim Vim Editor] ||\r\n|| [wiki:Plone Plone]                                                      || [wiki:Java Java]                       ||  ||\r\n|| [wiki:Samba Samba]                                                  || [wiki:Python Python]               ||  ||\r\n|| [wiki:MySQL MySQL]                                                  ||                                              ||  ||\r\n|| [wiki:Tomcat Tomcat]                                                ||                                              ||  ||\r\n|| [wiki:RedHat Red Hat]                                                ||                                              ||  ||\r\n|| [wiki:Mailman Mailman]                                             ||                                              ||  ||\r\n|| [wiki:Subversion Subversion]                                     ||                                              ||  ||\r\n|| [wiki:LinuxCommands Linux Commands]                  ||                                              ||  ||\r\n|| [wiki:EclipsePlugins Eclipse Plugin Installations]         ||                                             ||  ||\r\n|| [wiki:LDAPClient OpenLDAP Client Configuration]      ||                                             ||  ||\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n\r\n||  || [[BR]] \'\'\'storageDNA Wiki Docs\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| * || [wiki:BigData Big Data]  || Big data is high-volume, high-velocity and high-variety information assets that demand cost-effective, innovative forms of information processing for enhanced insight and decision making. ||\r\n|| * || [wiki:OpenSSL OpenSSL Vulnerability] ||The recent detection of heartbleed vulnerability in openssl which is a serious vulnerability in the popular OpenSSL cryptographic software library.||\r\n|| * || || ||\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">External Links</h2>\r\n}}}\r\n\r\n|| \'\'\'Serial\'\'\' || [[BR]]   \'\'\'Link\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| 1 || [http://lwn.net/Articles/317814/ Taming the OOM killer]                             ||To avoid the untimely killing of wrong processes under desperately low memory conditions, the out-of-memory (OOM) killer kicks in and picks a process to kill using a set of heuristics.||\r\n|| 2 || [http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]  || NPTEL Data Structure Course.                  ||\r\n|| * || || ||\r\n\r\n[[BR]]\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:WikiStart Home]\r\n\r\n----','',0),('Contents',36,1405343964307127,'akshat','192.168.0.18','{{{\r\n#!html\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:36%;  border-width:5px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>List of All Pages</h2>\r\nThis page contains links of all pages available and the documentation is categorised according to general documentation of various tools, Language specific documentation and some interesting knowledge base. This page also contains the links to cheat sheets of various tools and also some external links to the interesting articles.\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!td\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n||  [[BR]][[BR]] \'\'\'General Documentation\'\'\' [[BR]][[BR]]  ||  [[BR]] \'\'\'Language Specific [[BR]] Documentation\'\'\'  ||  [[BR]]  \'\'\'Cheat Sheets of Various [[BR]] Tools\'\'\'  ||\r\n|| [wiki:Ant Ant]                                                            || [wiki:Qt Qt]                            || [wiki:Sed Sed] ||\r\n|| [wiki:LDAP LDAP]                                                       || [wiki:C++ C++]                    || [wiki:Vim Vim Editor] ||\r\n|| [wiki:Plone Plone]                                                      || [wiki:Java Java]                       ||  ||\r\n|| [wiki:Samba Samba]                                                  || [wiki:Python Python]               ||  ||\r\n|| [wiki:MySQL MySQL]                                                  ||                                              ||  ||\r\n|| [wiki:Tomcat Tomcat]                                                ||                                              ||  ||\r\n|| [wiki:Hadoop Hadoop]                                                ||                                              ||  ||\r\n|| [wiki:RedHat Red Hat]                                                ||                                              ||  ||\r\n|| [wiki:Mailman Mailman]                                             ||                                              ||  ||\r\n|| [wiki:Subversion Subversion]                                     ||                                              ||  ||\r\n|| [wiki:LinuxCommands Linux Commands]                  ||                                              ||  ||\r\n|| [wiki:EclipsePlugins Eclipse Plugin Installations]         ||                                             ||  ||\r\n|| [wiki:LDAPClient OpenLDAP Client Configuration]      ||                                             ||  ||\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n\r\n||  || [[BR]] \'\'\'storageDNA Wiki Docs\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| * || [wiki:BigData Big Data]  || Big data is high-volume, high-velocity and high-variety information assets that demand cost-effective, innovative forms of information processing for enhanced insight and decision making. ||\r\n|| * || [wiki:OpenSSL OpenSSL Vulnerability] ||The recent detection of heartbleed vulnerability in openssl which is a serious vulnerability in the popular OpenSSL cryptographic software library.||\r\n|| * || || ||\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">External Links</h2>\r\n}}}\r\n\r\n|| \'\'\'Serial\'\'\' || [[BR]]   \'\'\'Link\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| 1 || [http://lwn.net/Articles/317814/ Taming the OOM killer]                             ||To avoid the untimely killing of wrong processes under desperately low memory conditions, the out-of-memory (OOM) killer kicks in and picks a process to kill using a set of heuristics.||\r\n|| 2 || [http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]  || NPTEL Data Structure Course.                  ||\r\n|| * || || ||\r\n\r\n[[BR]]\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:WikiStart Home]\r\n\r\n----','',0),('Contents',37,1410501807466163,'akshat','192.168.0.18','{{{\r\n#!html\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:36%;  border-width:5px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>List of All Pages</h2>\r\nThis page contains links of all pages available and the documentation is categorised according to general documentation of various tools, Language specific documentation and some interesting knowledge base. This page also contains the links to cheat sheets of various tools and also some external links to the interesting articles.\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!td\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n||  [[BR]][[BR]] \'\'\'General Documentation\'\'\' [[BR]][[BR]]  ||  [[BR]] \'\'\'Language Specific [[BR]] Documentation\'\'\'  ||  [[BR]]  \'\'\'Cheat Sheets of Various [[BR]] Tools\'\'\'  ||\r\n|| [wiki:Ant Ant]                                                            || [wiki:Qt Qt]                            || [wiki:Sed Sed] ||\r\n|| [wiki:LDAP LDAP]                                                       || [wiki:C++ C++]                    || [wiki:Vim Vim Editor] ||\r\n|| [wiki:Plone Plone]                                                      || [wiki:Java Java]                       ||  ||\r\n|| [wiki:Samba Samba]                                                  || [wiki:Python Python]               ||  ||\r\n|| [wiki:MySQL MySQL]                                                  ||                                              ||  ||\r\n|| [wiki:Tomcat Tomcat]                                                ||                                              ||  ||\r\n|| [wiki:Hadoop Hadoop]                                                ||                                              ||  ||\r\n|| [wiki:RedHat Red Hat]                                                ||                                              ||  ||\r\n|| [wiki:Mailman Mailman]                                             ||                                              ||  ||\r\n|| [wiki:Subversion Subversion]                                     ||                                              ||  ||\r\n|| [wiki:MacCommands Mac Commands]                  ||                                              ||  ||\r\n|| [wiki:LinuxCommands Linux Commands]                  ||                                              ||  ||\r\n|| [wiki:EclipsePlugins Eclipse Plugin Installations]         ||                                             ||  ||\r\n|| [wiki:LDAPClient OpenLDAP Client Configuration]      ||                                             ||  ||\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n\r\n||  || [[BR]] \'\'\'storageDNA Wiki Docs\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| * || [wiki:BigData Big Data]  || Big data is high-volume, high-velocity and high-variety information assets that demand cost-effective, innovative forms of information processing for enhanced insight and decision making. ||\r\n|| * || [wiki:OpenSSL OpenSSL Vulnerability] ||The recent detection of heartbleed vulnerability in openssl which is a serious vulnerability in the popular OpenSSL cryptographic software library.||\r\n|| * || || ||\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">External Links</h2>\r\n}}}\r\n\r\n|| \'\'\'Serial\'\'\' || [[BR]]   \'\'\'Link\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| 1 || [http://lwn.net/Articles/317814/ Taming the OOM killer]                             ||To avoid the untimely killing of wrong processes under desperately low memory conditions, the out-of-memory (OOM) killer kicks in and picks a process to kill using a set of heuristics.||\r\n|| 2 || [http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]  || NPTEL Data Structure Course.                  ||\r\n|| * || || ||\r\n\r\n[[BR]]\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:WikiStart Home]\r\n\r\n----','',0),('Contents',38,1411016871833741,'akshat','192.168.0.18','{{{\r\n#!html\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:36%;  border-width:5px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>List of All Pages</h2>\r\nThis page contains links of all pages available and the documentation is categorised according to general documentation of various tools, Language specific documentation and some interesting knowledge base. This page also contains the links to cheat sheets of various tools and also some external links to the interesting articles.\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!td\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n||  [[BR]][[BR]] \'\'\'General Documentation\'\'\' [[BR]][[BR]]  ||  [[BR]] \'\'\'Language Specific [[BR]] Documentation\'\'\'  ||  [[BR]]  \'\'\'Cheat Sheets of Various [[BR]] Tools\'\'\'  ||\r\n|| [wiki:Ant Ant]                                                            || [wiki:Qt Qt]                            || [wiki:Sed Sed] ||\r\n|| [wiki:LDAP LDAP]                                                       || [wiki:C++ C++]                    || [wiki:Vim Vim Editor] ||\r\n|| [wiki:Plone Plone]                                                      || [wiki:Java Java]                       ||  ||\r\n|| [wiki:Samba Samba]                                                  || [wiki:Python Python]               ||  ||\r\n|| [wiki:MySQL MySQL]                                                  ||                                              ||  ||\r\n|| [wiki:Tomcat Tomcat]                                                ||                                              ||  ||\r\n|| [wiki:Hadoop Hadoop]                                                ||                                              ||  ||\r\n|| [wiki:RedHat Red Hat]                                                ||                                              ||  ||\r\n|| [wiki:Mailman Mailman]                                             ||                                              ||  ||\r\n|| [wiki:Subversion Subversion]                                     ||                                              ||  ||\r\n|| [wiki:MacCommands Mac Commands]                  ||                                              ||  ||\r\n|| [wiki:LinuxCommands Linux Commands]                  ||                                              ||  ||\r\n|| [wiki:EclipsePlugins Eclipse Plugin Installations]         ||                                             ||  ||\r\n|| [wiki:LDAPClient OpenLDAP Client Configuration]      ||                                             ||  ||\r\n|| [wiki:AdobePremierePro Adobe Premiere Pro Installation]                  ||                                              ||  ||\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n\r\n||  || [[BR]] \'\'\'storageDNA Wiki Docs\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| * || [wiki:BigData Big Data]  || Big data is high-volume, high-velocity and high-variety information assets that demand cost-effective, innovative forms of information processing for enhanced insight and decision making. ||\r\n|| * || [wiki:OpenSSL OpenSSL Vulnerability] ||The recent detection of heartbleed vulnerability in openssl which is a serious vulnerability in the popular OpenSSL cryptographic software library.||\r\n|| * || || ||\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">External Links</h2>\r\n}}}\r\n\r\n|| \'\'\'Serial\'\'\' || [[BR]]   \'\'\'Link\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| 1 || [http://lwn.net/Articles/317814/ Taming the OOM killer]                             ||To avoid the untimely killing of wrong processes under desperately low memory conditions, the out-of-memory (OOM) killer kicks in and picks a process to kill using a set of heuristics.||\r\n|| 2 || [http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]  || NPTEL Data Structure Course.                  ||\r\n|| * || || ||\r\n\r\n[[BR]]\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:WikiStart Home]\r\n\r\n----','',0),('Contents',39,1418887308097398,'akshat','192.168.0.18','{{{\r\n#!html\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:36%;  border-width:5px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>List of All Pages</h2>\r\nThis page contains links of all pages available and the documentation is categorised according to general documentation of various tools, Language specific documentation and some interesting knowledge base. This page also contains the links to cheat sheets of various tools and also some external links to the interesting articles.\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!td\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n||  [[BR]][[BR]] \'\'\'General Documentation\'\'\' [[BR]][[BR]]  ||  [[BR]] \'\'\'Language Specific [[BR]] Documentation\'\'\'  ||  [[BR]]  \'\'\'Cheat Sheets of Various [[BR]] Tools\'\'\'  ||\r\n|| [wiki:Ant Ant]                                                            || [wiki:Qt Qt]                            || [wiki:Sed Sed] ||\r\n|| [wiki:LDAP LDAP]                                                       || [wiki:C++ C++]                    || [wiki:Vim Vim Editor] ||\r\n|| [wiki:Plone Plone]                                                      || [wiki:Java Java]                       ||  ||\r\n|| [wiki:Samba Samba]                                                  || [wiki:Python Python]               ||  ||\r\n|| [wiki:MySQL MySQL]                                                  || [wiki:Lucene Lucene]                                               ||  ||\r\n|| [wiki:Tomcat Tomcat]                                                ||                                              ||  ||\r\n|| [wiki:Hadoop Hadoop]                                                ||                                              ||  ||\r\n|| [wiki:RedHat Red Hat]                                                ||                                              ||  ||\r\n|| [wiki:Mailman Mailman]                                             ||                                              ||  ||\r\n|| [wiki:Subversion Subversion]                                     ||                                              ||  ||\r\n|| [wiki:MacCommands Mac Commands]                  ||                                              ||  ||\r\n|| [wiki:LinuxCommands Linux Commands]                  ||                                              ||  ||\r\n|| [wiki:EclipsePlugins Eclipse Plugin Installations]         ||                                             ||  ||\r\n|| [wiki:LDAPClient OpenLDAP Client Configuration]      ||                                             ||  ||\r\n|| [wiki:AdobePremierePro Adobe Premiere Pro Installation]                  ||                                              ||  ||\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n\r\n||  || [[BR]] \'\'\'storageDNA Wiki Docs\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| * || [wiki:BigData Big Data]  || Big data is high-volume, high-velocity and high-variety information assets that demand cost-effective, innovative forms of information processing for enhanced insight and decision making. ||\r\n|| * || [wiki:OpenSSL OpenSSL Vulnerability] ||The recent detection of heartbleed vulnerability in openssl which is a serious vulnerability in the popular OpenSSL cryptographic software library.||\r\n|| * || || ||\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">External Links</h2>\r\n}}}\r\n\r\n|| \'\'\'Serial\'\'\' || [[BR]]   \'\'\'Link\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| 1 || [http://lwn.net/Articles/317814/ Taming the OOM killer]                             ||To avoid the untimely killing of wrong processes under desperately low memory conditions, the out-of-memory (OOM) killer kicks in and picks a process to kill using a set of heuristics.||\r\n|| 2 || [http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]  || NPTEL Data Structure Course.                  ||\r\n|| * || || ||\r\n\r\n[[BR]]\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:WikiStart Home]\r\n\r\n----','',0),('Contents',40,1435141487735958,'akshat','127.3.17.1','{{{\r\n#!html\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:36%;  border-width:5px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>List of All Pages</h2>\r\nThis page contains links of all pages available and the documentation is categorised according to general documentation of various tools, Language specific documentation and some interesting knowledge base. This page also contains the links to cheat sheets of various tools and also some external links to the interesting articles.\r\n<br><br>\r\n</div>\r\n}}}\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!td\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Documentation</h2>\r\n}}}\r\n\r\n||  [[BR]][[BR]] \'\'\'General Documentation\'\'\' [[BR]][[BR]]  ||  [[BR]] \'\'\'Language Specific [[BR]] Documentation\'\'\'  ||  [[BR]]  \'\'\'Cheat Sheets of Various [[BR]] Tools\'\'\'  ||\r\n|| [wiki:Ant Ant]                                                            || [wiki:Qt Qt]                            || [wiki:Sed Sed] ||\r\n|| [wiki:LDAP LDAP]                                                       || [wiki:C++ C++]                    || [wiki:Vim Vim Editor] ||\r\n|| [wiki:Plone Plone]                                                      || [wiki:Java Java]                       ||  ||\r\n|| [wiki:Samba Samba]                                                  || [wiki:Python Python]               ||  ||\r\n|| [wiki:MySQL MySQL]                                                  || [wiki:Lucene Lucene]                                               ||  ||\r\n|| [wiki:Tomcat Tomcat]                                                ||                                              ||  ||\r\n|| [wiki:Hadoop Hadoop]                                                ||                                              ||  ||\r\n|| [wiki:RedHat Red Hat]                                                ||                                              ||  ||\r\n|| [wiki:Mailman Mailman]                                             ||                                              ||  ||\r\n|| [wiki:Subversion Subversion]                                     ||                                              ||  ||\r\n|| [wiki:MacCommands Mac Commands]                  ||                                              ||  ||\r\n|| [wiki:LinuxCommands Linux Commands]                  ||                                              ||  ||\r\n|| [wiki:EclipsePlugins Eclipse Plugin Installations]         ||                                             ||  ||\r\n|| [wiki:LDAPClient OpenLDAP Client Configuration]      ||                                             ||  ||\r\n|| [wiki:AdobePremierePro Adobe Premiere Pro Installation]                  ||                                              ||  ||\r\n\r\n[[BR]]\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Interesting Articles</h2>\r\n}}}\r\n\r\n\r\n||  || [[BR]] \'\'\'akshat\'s Wiki Docs\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| * || [wiki:BigData Big Data]  || Big data is high-volume, high-velocity and high-variety information assets that demand cost-effective, innovative forms of information processing for enhanced insight and decision making. ||\r\n|| * || [wiki:OpenSSL OpenSSL Vulnerability] ||The recent detection of heartbleed vulnerability in openssl which is a serious vulnerability in the popular OpenSSL cryptographic software library.||\r\n|| * || || ||\r\n\r\n{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">External Links</h2>\r\n}}}\r\n\r\n|| \'\'\'Serial\'\'\' || [[BR]]   \'\'\'Link\'\'\' [[BR]][[BR]]  || \'\'\'Brief Introduction\'\'  ||\r\n|| 1 || [http://lwn.net/Articles/317814/ Taming the OOM killer]                             ||To avoid the untimely killing of wrong processes under desperately low memory conditions, the out-of-memory (OOM) killer kicks in and picks a process to kill using a set of heuristics.||\r\n|| 2 || [http://nptel.ac.in/video.php?subjectId=106102064 Data Structure Videos]  || NPTEL Data Structure Course.                  ||\r\n|| * || || ||\r\n\r\n[[BR]]\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:WikiStart Home]\r\n\r\n----','',0),('EclipsePlugins',1,1303128226000000,'akshat','158.144.16.5','== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded [http://www.eclipsetotale.com/tomcatPlugin.html here].\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n== Installation of Glassfish Plugin in Eclipse ==\r\n\r\nThe plugin can be downloaded and configured from [http://glassfishplugins.java.net/eclipse36/index.html here].\r\n\r\n----\r\n\r\n== Installation of Servlet and JSP development with Eclipse WTP ==\r\n\r\nThe plugin can be downloaded and configured from [http://www.vogella.de/articles/EclipseWTP/article.html here].\r\n\r\n----\r\n\r\n== Installation of Google Plugin for Eclipse ==\r\n\r\nThe plugin can be downloaded and configured from [http://code.google.com/eclipse/docs/download.html here].\r\n\r\n=== Google Web Toolkit Downloads ===\r\n\r\nThe plugins can be downloaded and configured from [http://code.google.com/webtoolkit/download.html here].\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n','',0),('EclipsePlugins',2,1405347368581363,'akshat','192.168.0.18','== Installation of Tomcat Plugin in Eclipse ==\r\n\r\n[[Image(Eclipse.png,150px,right)]]\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded [http://www.eclipsetotale.com/tomcatPlugin.html here].\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n== Installation of Glassfish Plugin in Eclipse ==\r\n\r\nThe plugin can be downloaded and configured from [http://glassfishplugins.java.net/eclipse36/index.html here].\r\n\r\n----\r\n\r\n== Installation of Servlet and JSP development with Eclipse WTP ==\r\n\r\nThe plugin can be downloaded and configured from [http://www.vogella.de/articles/EclipseWTP/article.html here].\r\n\r\n----\r\n\r\n== Installation of Google Plugin for Eclipse ==\r\n\r\nThe plugin can be downloaded and configured from [http://code.google.com/eclipse/docs/download.html here].\r\n\r\n=== Google Web Toolkit Downloads ===\r\n\r\nThe plugins can be downloaded and configured from [http://code.google.com/webtoolkit/download.html here].\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Hadoop',1,1405343949148999,'akshat','192.168.0.18','== Hadoop ==\r\n\r\n=== Hadoop Installation ===\r\n\r\n\'\'\'Creating a user hduser and adding it to group hadoop\'\'\'\r\n{{{\r\n$ sudo addgroup hadoop\r\n$ sudo adduser --ingroup hadoop hduser\r\n}}}\r\n\r\n\'\'\'Keys generation\'\'\'\r\n{{{\r\n$ su - hduser\r\n$ ssh-keygen -t rsa -P \"\"\r\n$ cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys\r\n$ ssh localhost\r\n}}}\r\n\r\n\r\n\'\'\'Unpack hadoop and install\'\'\'\r\n{{{\r\n$ cd /usr/local\r\n$ sudo tar -zxxf hadoop-1.2.1.tar.gz\r\n$ sudo mv hadoop-1.0.3 hadoop\r\n$ sudo chown -R hduser:hadoop hadoop\r\n}}}\r\n\r\n\r\n\'\'\'Update .bashrc\'\'\'\r\n\r\n{{{\r\nexport ANT_HOME=/usr/local/ant\r\nexport HADOOP_HOME=/usr/local/hadoop\r\nexport JRE_HOME=/usr/local/jdk1.6.0_22/jre\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\nexport PIG_HOME=/usr/local/pig-0.13.0\r\n\r\nunalias fs &> /dev/null\r\nalias fs=\"hadoop fs\"\r\nunalias hls &> /dev/null\r\nalias hls=\"fs -ls\"\r\n\r\nlzohead () {\r\n    hadoop fs -cat $1 | lzop -dc | head -1000 | less\r\n}\r\nexport PATH=$PATH:$HADOOP_HOME/bin:$JAVA_HOME/bin/:$PIG_HOME/bin:$ANT_HOME/bin\r\n\r\n}}}\r\n\r\n\'\'\'Datanode Configuration\'\'\'\r\n\r\n{{{\r\n$ sudo mkdir /tmp/hadoop_data\r\n$ sudo chown hduser:hadoop /tmp/hadoop_data\r\n$ sudo chmod 777 /tmp/hadoop_data\r\n}}}\r\n\r\n\r\n\'\'\'Configurations\'\'\'\r\n{{{\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/core-site.xml\r\n<property>\r\n  <name>hadoop.tmp.dir</name>\r\n  <value>/tmp/hadoop_data</value>\r\n  <description>directory for hadoop data</description>\r\n</property>\r\n\r\n<property>\r\n  <name>fs.default.name</name>\r\n  <value>hdfs://localhost:54310</value>\r\n  <description> data to be put on this URI</description>\r\n</property>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/mapred-site.xml\r\n<configuration>\r\n<property>\r\n <name>mapreduce.framework.name</name>\r\n    <value>yarn</value>\r\n    <description>Akshat Singh</description>\r\n</property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/yarn-site.xml\r\n<configuration>\r\n    <property>\r\n        <name>yarn.nodemanager.aux-services</name>\r\n        <value>mapreduce_shuffle</value>\r\n    </property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml\r\n<configuration>\r\n<property>\r\n  <name>dfs.replication</name>\r\n  <value>1</value>\r\n  <description>Default block replication</description>\r\n</property>\r\n</configuration>\r\n}}}\r\n\r\n\r\n\'\'\'Formatting the Single Node Cluster.\'\'\'\r\n{{{\r\n$ /usr/local/hadoop/bin/hadoop namenode -format\r\n}}}\r\n\r\n\r\n\'\'\'Starting or Stopping the Single Node Cluster.\'\'\'\r\n\r\n{{{\r\n$ /usr/local/hadoop/sbin/start-all.sh\r\n$ /usr/local/hadoop/sbin/stop-all.sh\r\n\r\nOR\r\n$ /usr/local/hadoop/sbin/start-dfs.sh\r\n$ /usr/local/hadoop/sbin/stop-dfs.sh\r\n\r\n$ /usr/local/hadoop/sbin/start-yarn.sh\r\n$ /usr/local/hadoop/sbin/stop-yarn.sh\r\n}}}\r\n\r\n\'\'\'For seeing all the services running\'\'\'\r\n{{{\r\n$ jps\r\n}}}\r\n\r\n\r\n{{{\r\n$ hdfs dfs -mkdir /akshat - For creating directory\r\n$ hdfs dfs -mkdir /akshat/Pune\r\n$ hdfs dfs -put history /akshat/Pune - For Copying\r\n}}}\r\n\r\n\r\nIf the file is not able to copy and show the error like:\r\n\r\n{{{\r\nFile /akshat/Pune/history._COPYING_ could only be replicated to 0 nodes instead of minReplication (=1).  There are 0 datanode(s) running and no node(s) are excluded in this operation. - CAUSED DUE TO MULTIPLE FORMAT.\r\n}}}\r\n\r\nThen clear all the contents from /tmp/hadoop_data/dfs/data','',0),('Hadoop',2,1405344040004506,'akshat','192.168.0.18','== Hadoop ==\r\n\r\n=== Hadoop Installation ===\r\n\r\n\'\'\'Creating a user hduser and adding it to group hadoop\'\'\'\r\n{{{\r\n$ sudo addgroup hadoop\r\n$ sudo adduser --ingroup hadoop hduser\r\n}}}\r\n\r\n\'\'\'Keys generation\'\'\'\r\n{{{\r\n$ su - hduser\r\n$ ssh-keygen -t rsa -P \"\"\r\n$ cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys\r\n$ ssh localhost\r\n}}}\r\n\r\n\r\n\'\'\'Unpack hadoop and install\'\'\'\r\n{{{\r\n$ cd /usr/local\r\n$ sudo tar -zxxf hadoop-1.2.1.tar.gz\r\n$ sudo mv hadoop-1.0.3 hadoop\r\n$ sudo chown -R hduser:hadoop hadoop\r\n}}}\r\n\r\n\r\n\'\'\'Update .bashrc\'\'\'\r\n\r\n{{{\r\nexport ANT_HOME=/usr/local/ant\r\nexport HADOOP_HOME=/usr/local/hadoop\r\nexport JRE_HOME=/usr/local/jdk1.6.0_22/jre\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\nexport PIG_HOME=/usr/local/pig-0.13.0\r\n\r\nunalias fs &> /dev/null\r\nalias fs=\"hadoop fs\"\r\nunalias hls &> /dev/null\r\nalias hls=\"fs -ls\"\r\n\r\nlzohead () {\r\n    hadoop fs -cat $1 | lzop -dc | head -1000 | less\r\n}\r\nexport PATH=$PATH:$HADOOP_HOME/bin:$JAVA_HOME/bin/:$PIG_HOME/bin:$ANT_HOME/bin\r\n\r\n}}}\r\n\r\n\'\'\'Datanode Configuration\'\'\'\r\n\r\n{{{\r\n$ sudo mkdir /tmp/hadoop_data\r\n$ sudo chown hduser:hadoop /tmp/hadoop_data\r\n$ sudo chmod 777 /tmp/hadoop_data\r\n}}}\r\n\r\n\r\n\'\'\'Configurations\'\'\'\r\n{{{\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/core-site.xml\r\n<property>\r\n  <name>hadoop.tmp.dir</name>\r\n  <value>/tmp/hadoop_data</value>\r\n  <description>directory for hadoop data</description>\r\n</property>\r\n\r\n<property>\r\n  <name>fs.default.name</name>\r\n  <value>hdfs://localhost:54310</value>\r\n  <description> data to be put on this URI</description>\r\n</property>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/mapred-site.xml\r\n<configuration>\r\n<property>\r\n <name>mapreduce.framework.name</name>\r\n    <value>yarn</value>\r\n    <description>Akshat Singh</description>\r\n</property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/yarn-site.xml\r\n<configuration>\r\n    <property>\r\n        <name>yarn.nodemanager.aux-services</name>\r\n        <value>mapreduce_shuffle</value>\r\n    </property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml\r\n<configuration>\r\n<property>\r\n  <name>dfs.replication</name>\r\n  <value>1</value>\r\n  <description>Default block replication</description>\r\n</property>\r\n</configuration>\r\n}}}\r\n\r\n\r\n\'\'\'Formatting the Single Node Cluster.\'\'\'\r\n{{{\r\n$ /usr/local/hadoop/bin/hadoop namenode -format\r\n}}}\r\n\r\n\r\n\'\'\'Starting or Stopping the Single Node Cluster.\'\'\'\r\n\r\n{{{\r\n$ /usr/local/hadoop/sbin/start-all.sh\r\n$ /usr/local/hadoop/sbin/stop-all.sh\r\n\r\nOR\r\n$ /usr/local/hadoop/sbin/start-dfs.sh\r\n$ /usr/local/hadoop/sbin/stop-dfs.sh\r\n\r\n$ /usr/local/hadoop/sbin/start-yarn.sh\r\n$ /usr/local/hadoop/sbin/stop-yarn.sh\r\n}}}\r\n\r\n\'\'\'For seeing all the services running\'\'\'\r\n{{{\r\n$ jps\r\n}}}\r\n\r\n\r\n{{{\r\n$ hdfs dfs -mkdir /akshat - For creating directory\r\n$ hdfs dfs -mkdir /akshat/Pune\r\n$ hdfs dfs -put history /akshat/Pune - For Copying\r\n}}}\r\n\r\n\r\nIf the file is not able to copy and show the error like:\r\n\r\n{{{\r\nFile /akshat/Pune/history._COPYING_ could only be replicated to 0 nodes instead of minReplication (=1).  There are 0 datanode(s) running and no node(s) are excluded in this operation. - CAUSED DUE TO MULTIPLE FORMAT.\r\n}}}\r\n\r\nThen clear all the contents from /tmp/hadoop_data/dfs/data\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Hadoop',3,1405346745693719,'akshat','192.168.0.18','[[TOC]]\r\n\r\n== Hadoop ==\r\n[[Image(hadoop.gif,200px,right)]]\r\n\r\n=== Hadoop Installation ===\r\n\r\n\'\'\'Creating a user hduser and adding it to group hadoop\'\'\'\r\n{{{\r\n$ sudo addgroup hadoop\r\n$ sudo adduser --ingroup hadoop hduser\r\n}}}\r\n\r\n\'\'\'Keys generation\'\'\'\r\n{{{\r\n$ su - hduser\r\n$ ssh-keygen -t rsa -P \"\"\r\n$ cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys\r\n$ ssh localhost\r\n}}}\r\n\r\n\r\n\'\'\'Unpack hadoop and install\'\'\'\r\n{{{\r\n$ cd /usr/local\r\n$ sudo tar -zxxf hadoop-1.2.1.tar.gz\r\n$ sudo mv hadoop-1.0.3 hadoop\r\n$ sudo chown -R hduser:hadoop hadoop\r\n}}}\r\n\r\n\r\n\'\'\'Update .bashrc\'\'\'\r\n\r\n{{{\r\nexport ANT_HOME=/usr/local/ant\r\nexport HADOOP_HOME=/usr/local/hadoop\r\nexport JRE_HOME=/usr/local/jdk1.6.0_22/jre\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\nexport PIG_HOME=/usr/local/pig-0.13.0\r\n\r\nunalias fs &> /dev/null\r\nalias fs=\"hadoop fs\"\r\nunalias hls &> /dev/null\r\nalias hls=\"fs -ls\"\r\n\r\nlzohead () {\r\n    hadoop fs -cat $1 | lzop -dc | head -1000 | less\r\n}\r\nexport PATH=$PATH:$HADOOP_HOME/bin:$JAVA_HOME/bin/:$PIG_HOME/bin:$ANT_HOME/bin\r\n\r\n}}}\r\n\r\n\'\'\'Datanode Configuration\'\'\'\r\n\r\n{{{\r\n$ sudo mkdir /tmp/hadoop_data\r\n$ sudo chown hduser:hadoop /tmp/hadoop_data\r\n$ sudo chmod 777 /tmp/hadoop_data\r\n}}}\r\n\r\n\r\n\'\'\'Configurations\'\'\'\r\n{{{\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/core-site.xml\r\n<property>\r\n  <name>hadoop.tmp.dir</name>\r\n  <value>/tmp/hadoop_data</value>\r\n  <description>directory for hadoop data</description>\r\n</property>\r\n\r\n<property>\r\n  <name>fs.default.name</name>\r\n  <value>hdfs://localhost:54310</value>\r\n  <description> data to be put on this URI</description>\r\n</property>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/mapred-site.xml\r\n<configuration>\r\n<property>\r\n <name>mapreduce.framework.name</name>\r\n    <value>yarn</value>\r\n    <description>Akshat Singh</description>\r\n</property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/yarn-site.xml\r\n<configuration>\r\n    <property>\r\n        <name>yarn.nodemanager.aux-services</name>\r\n        <value>mapreduce_shuffle</value>\r\n    </property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml\r\n<configuration>\r\n<property>\r\n  <name>dfs.replication</name>\r\n  <value>1</value>\r\n  <description>Default block replication</description>\r\n</property>\r\n</configuration>\r\n}}}\r\n\r\n\r\n\'\'\'Formatting the Single Node Cluster.\'\'\'\r\n{{{\r\n$ /usr/local/hadoop/bin/hadoop namenode -format\r\n}}}\r\n\r\n\r\n\'\'\'Starting or Stopping the Single Node Cluster.\'\'\'\r\n\r\n{{{\r\n$ /usr/local/hadoop/sbin/start-all.sh\r\n$ /usr/local/hadoop/sbin/stop-all.sh\r\n\r\nOR\r\n$ /usr/local/hadoop/sbin/start-dfs.sh\r\n$ /usr/local/hadoop/sbin/stop-dfs.sh\r\n\r\n$ /usr/local/hadoop/sbin/start-yarn.sh\r\n$ /usr/local/hadoop/sbin/stop-yarn.sh\r\n}}}\r\n\r\n\'\'\'For seeing all the services running\'\'\'\r\n{{{\r\n$ jps\r\n}}}\r\n\r\n\r\n{{{\r\n$ hdfs dfs -mkdir /akshat - For creating directory\r\n$ hdfs dfs -mkdir /akshat/Pune\r\n$ hdfs dfs -put history /akshat/Pune - For Copying\r\n}}}\r\n\r\n\r\nIf the file is not able to copy and show the error like:\r\n\r\n{{{\r\nFile /akshat/Pune/history._COPYING_ could only be replicated to 0 nodes instead of minReplication (=1).  There are 0 datanode(s) running and no node(s) are excluded in this operation. - CAUSED DUE TO MULTIPLE FORMAT.\r\n}}}\r\n\r\nThen clear all the contents from /tmp/hadoop_data/dfs/data\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Hadoop',4,1405348197812533,'akshat','192.168.0.18','[[TOC]]\r\n\r\n== Hadoop ==\r\n[[Image(hadoop.gif,200px,right)]]\r\n\r\n=== Hadoop Installation ===\r\n\r\n\'\'\'Creating a user hduser and adding it to group hadoop\'\'\'\r\n{{{\r\n$ sudo addgroup hadoop\r\n$ sudo adduser --ingroup hadoop hduser\r\n}}}\r\n\r\n\'\'\'Keys generation\'\'\'\r\n{{{\r\n$ su - hduser\r\n$ ssh-keygen -t rsa -P \"\"\r\n$ cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys\r\n$ ssh localhost\r\n}}}\r\n\r\n\r\n\'\'\'Unpack hadoop and install\'\'\'\r\n{{{\r\n$ cd /usr/local\r\n$ sudo tar -zxxf hadoop-1.2.1.tar.gz\r\n$ sudo mv hadoop-1.0.3 hadoop\r\n$ sudo chown -R hduser:hadoop hadoop\r\n}}}\r\n\r\n\r\n\'\'\'Update .bashrc\'\'\'\r\n\r\n{{{\r\nexport ANT_HOME=/usr/local/ant\r\nexport HADOOP_HOME=/usr/local/hadoop\r\nexport JRE_HOME=/usr/local/jdk1.6.0_22/jre\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\nexport PIG_HOME=/usr/local/pig-0.13.0\r\n\r\nunalias fs &> /dev/null\r\nalias fs=\"hadoop fs\"\r\nunalias hls &> /dev/null\r\nalias hls=\"fs -ls\"\r\n\r\nlzohead () {\r\n    hadoop fs -cat $1 | lzop -dc | head -1000 | less\r\n}\r\nexport PATH=$PATH:$HADOOP_HOME/bin:$JAVA_HOME/bin/:$PIG_HOME/bin:$ANT_HOME/bin\r\n\r\n}}}\r\n\r\n\'\'\'Datanode Configuration\'\'\'\r\n\r\n{{{\r\n$ sudo mkdir /tmp/hadoop_data\r\n$ sudo chown hduser:hadoop /tmp/hadoop_data\r\n$ sudo chmod 777 /tmp/hadoop_data\r\n}}}\r\n\r\n\r\n\'\'\'Configurations\'\'\'\r\n{{{\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/core-site.xml\r\n<property>\r\n  <name>hadoop.tmp.dir</name>\r\n  <value>/tmp/hadoop_data</value>\r\n  <description>directory for hadoop data</description>\r\n</property>\r\n\r\n<property>\r\n  <name>fs.default.name</name>\r\n  <value>hdfs://localhost:54310</value>\r\n  <description> data to be put on this URI</description>\r\n</property>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/mapred-site.xml\r\n<configuration>\r\n<property>\r\n <name>mapreduce.framework.name</name>\r\n    <value>yarn</value>\r\n    <description>Akshat Singh</description>\r\n</property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/yarn-site.xml\r\n<configuration>\r\n    <property>\r\n        <name>yarn.nodemanager.aux-services</name>\r\n        <value>mapreduce_shuffle</value>\r\n    </property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml\r\n<configuration>\r\n<property>\r\n  <name>dfs.replication</name>\r\n  <value>1</value>\r\n  <description>Default block replication</description>\r\n</property>\r\n</configuration>\r\n}}}\r\n\r\n\r\n\'\'\'Formatting the Single Node Cluster.\'\'\'\r\n{{{\r\n$ /usr/local/hadoop/bin/hadoop namenode -format\r\n}}}\r\n\r\n\r\n\'\'\'Starting or Stopping the Single Node Cluster.\'\'\'\r\n\r\n{{{\r\n$ /usr/local/hadoop/sbin/start-all.sh\r\n$ /usr/local/hadoop/sbin/stop-all.sh\r\n\r\nOR\r\n$ /usr/local/hadoop/sbin/start-dfs.sh\r\n$ /usr/local/hadoop/sbin/stop-dfs.sh\r\n\r\n$ /usr/local/hadoop/sbin/start-yarn.sh\r\n$ /usr/local/hadoop/sbin/stop-yarn.sh\r\n}}}\r\n\r\n\'\'\'For seeing all the services running\'\'\'\r\n{{{\r\n$ jps\r\n}}}\r\n\r\n\'\'\'For doing some copying operations\'\'\'\r\n{{{\r\n$ hdfs dfs -mkdir /akshat - For creating directory\r\n$ hdfs dfs -mkdir /akshat/Pune\r\n$ hdfs dfs -put history /akshat/Pune - For Copying\r\n}}}\r\n\r\n\r\nIf the file is not able to copy and show the error like:\r\n\r\n{{{\r\nFile /akshat/Pune/history._COPYING_ could only be replicated to 0 nodes instead of minReplication (=1).  There are 0 datanode(s) running and no node(s) are excluded in this operation. - CAUSED DUE TO MULTIPLE FORMAT.\r\n}}}\r\n\r\nThen clear all the contents from /tmp/hadoop_data/dfs/data\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Hadoop',5,1405348358059024,'akshat','192.168.0.18','[[TOC]]\r\n\r\n== Hadoop ==\r\n[[Image(hadoop.gif,200px,right)]]\r\n\r\n=== Hadoop Installation ===\r\n\r\n=== Creating a user hduser and adding it to group hadoop ===\r\n{{{\r\n$ sudo addgroup hadoop\r\n$ sudo adduser --ingroup hadoop hduser\r\n}}}\r\n\r\n=== Keys generation ===\r\n{{{\r\n$ su - hduser\r\n$ ssh-keygen -t rsa -P \"\"\r\n$ cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys\r\n$ ssh localhost\r\n}}}\r\n\r\n\r\n=== Unpack hadoop and install ===\r\n{{{\r\n$ cd /usr/local\r\n$ sudo tar -zxxf hadoop-1.2.1.tar.gz\r\n$ sudo mv hadoop-1.0.3 hadoop\r\n$ sudo chown -R hduser:hadoop hadoop\r\n}}}\r\n\r\n\r\n=== Update .bashrc ===\r\n\r\n{{{\r\nexport ANT_HOME=/usr/local/ant\r\nexport HADOOP_HOME=/usr/local/hadoop\r\nexport JRE_HOME=/usr/local/jdk1.6.0_22/jre\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\nexport PIG_HOME=/usr/local/pig-0.13.0\r\n\r\nunalias fs &> /dev/null\r\nalias fs=\"hadoop fs\"\r\nunalias hls &> /dev/null\r\nalias hls=\"fs -ls\"\r\n\r\nlzohead () {\r\n    hadoop fs -cat $1 | lzop -dc | head -1000 | less\r\n}\r\nexport PATH=$PATH:$HADOOP_HOME/bin:$JAVA_HOME/bin/:$PIG_HOME/bin:$ANT_HOME/bin\r\n\r\n}}}\r\n\r\n\r\n=== Datanode Configuration ===\r\n\r\n{{{\r\n$ sudo mkdir /tmp/hadoop_data\r\n$ sudo chown hduser:hadoop /tmp/hadoop_data\r\n$ sudo chmod 777 /tmp/hadoop_data\r\n}}}\r\n\r\n\r\n=== Configurations ===\r\n{{{\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/core-site.xml\r\n<property>\r\n  <name>hadoop.tmp.dir</name>\r\n  <value>/tmp/hadoop_data</value>\r\n  <description>directory for hadoop data</description>\r\n</property>\r\n\r\n<property>\r\n  <name>fs.default.name</name>\r\n  <value>hdfs://localhost:54310</value>\r\n  <description> data to be put on this URI</description>\r\n</property>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/mapred-site.xml\r\n<configuration>\r\n<property>\r\n <name>mapreduce.framework.name</name>\r\n    <value>yarn</value>\r\n    <description>Akshat Singh</description>\r\n</property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/yarn-site.xml\r\n<configuration>\r\n    <property>\r\n        <name>yarn.nodemanager.aux-services</name>\r\n        <value>mapreduce_shuffle</value>\r\n    </property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml\r\n<configuration>\r\n<property>\r\n  <name>dfs.replication</name>\r\n  <value>1</value>\r\n  <description>Default block replication</description>\r\n</property>\r\n</configuration>\r\n}}}\r\n\r\n\r\n=== Formatting the Single Node Cluster. ===\r\n{{{\r\n$ /usr/local/hadoop/bin/hadoop namenode -format\r\n}}}\r\n\r\n\r\n=== Starting or Stopping the Single Node Cluster. ===\r\n\r\n{{{\r\n$ /usr/local/hadoop/sbin/start-all.sh\r\n$ /usr/local/hadoop/sbin/stop-all.sh\r\n\r\nOR\r\n$ /usr/local/hadoop/sbin/start-dfs.sh\r\n$ /usr/local/hadoop/sbin/stop-dfs.sh\r\n\r\n$ /usr/local/hadoop/sbin/start-yarn.sh\r\n$ /usr/local/hadoop/sbin/stop-yarn.sh\r\n}}}\r\n\r\n\'\'\'For seeing all the services running\'\'\'\r\n{{{\r\n$ jps\r\n}}}\r\n\r\n=== For doing some copying operations ===\r\n{{{\r\n$ hdfs dfs -mkdir /akshat - For creating directory\r\n$ hdfs dfs -mkdir /akshat/Pune\r\n$ hdfs dfs -put history /akshat/Pune - For Copying\r\n}}}\r\n\r\n\r\nIf the file is not able to copy and show the error like:\r\n\r\n{{{\r\nFile /akshat/Pune/history._COPYING_ could only be replicated to 0 nodes instead of minReplication (=1).  There are 0 datanode(s) running and no node(s) are excluded in this operation. - CAUSED DUE TO MULTIPLE FORMAT.\r\n}}}\r\n\r\nThen clear all the contents from /tmp/hadoop_data/dfs/data\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Hadoop',6,1410520964588874,'kumaran','192.168.0.23','[[TOC]]\r\n\r\n== Hadoop ==\r\n[[Image(hadoop.gif,200px,right)]]\r\n\r\n=== Hadoop Installation ===\r\n\r\n=== Creating a user hduser and adding it to group hadoop ===\r\n{{{\r\n$ sudo addgroup hadoop\r\n$ sudo adduser --ingroup hadoop hduser\r\n}}}\r\n\r\n=== Keys generation ===\r\n{{{\r\n$ su - hduser\r\n$ ssh-keygen -t rsa -P \"\"\r\n$ cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys\r\n$ ssh localhost\r\n}}}\r\n\r\n\r\n=== Unpack hadoop and install ===\r\n{{{\r\n$ cd /usr/local\r\n$ sudo tar -zxxf hadoop-1.2.1.tar.gz\r\n$ sudo mv hadoop-1.0.3 hadoop\r\n$ sudo chown -R hduser:hadoop hadoop\r\n}}}\r\n\r\n\r\n=== Update .bashrc ===\r\n\r\n{{{\r\nexport ANT_HOME=/usr/local/ant\r\nexport HADOOP_HOME=/usr/local/hadoop\r\nexport JRE_HOME=/usr/local/jdk1.6.0_22/jre\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\nexport PIG_HOME=/usr/local/pig-0.13.0\r\n\r\nunalias fs &> /dev/null\r\nalias fs=\"hadoop fs\"\r\nunalias hls &> /dev/null\r\nalias hls=\"fs -ls\"\r\n\r\nlzohead () {\r\n    hadoop fs -cat $1 | lzop -dc | head -1000 | less\r\n}\r\nexport PATH=$PATH:$HADOOP_HOME/bin:$JAVA_HOME/bin/:$PIG_HOME/bin:$ANT_HOME/bin\r\n\r\n}}}\r\n\r\n\r\n=== Datanode Configuration ===\r\n\r\n{{{\r\n$ sudo mkdir /tmp/hadoop_data\r\n$ sudo chown hduser:hadoop /tmp/hadoop_data\r\n$ sudo chmod 777 /tmp/hadoop_data\r\n}}}\r\n\r\n\r\n=== Configurations ===\r\n{{{\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh\r\nexport JAVA_HOME=/usr/local/jdk1.6.0_22\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/core-site.xml\r\n<configuration>\r\n<property>\r\n  <name>hadoop.tmp.dir</name>\r\n  <value>/tmp/hadoop_data</value>\r\n  <description>directory for hadoop data</description>\r\n</property>\r\n\r\n<property>\r\n  <name>fs.default.name</name>\r\n  <value>hdfs://localhost:54310</value>\r\n  <description> data to be put on this URI</description>\r\n</property>\r\n<configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/mapred-site.xml\r\n<configuration>\r\n<property>\r\n <name>mapreduce.framework.name</name>\r\n    <value>yarn</value>\r\n    <description>Akshat Singh</description>\r\n</property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/yarn-site.xml\r\n<configuration>\r\n    <property>\r\n        <name>yarn.nodemanager.aux-services</name>\r\n        <value>mapreduce_shuffle</value>\r\n    </property>\r\n</configuration>\r\n\r\n[hduser@localhost ~]$ vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml\r\n<configuration>\r\n<property>\r\n  <name>dfs.replication</name>\r\n  <value>1</value>\r\n  <description>Default block replication</description>\r\n</property>\r\n</configuration>\r\n}}}\r\n\r\n\r\n=== Formatting the Single Node Cluster. ===\r\n{{{\r\n$ /usr/local/hadoop/bin/hadoop namenode -format\r\n}}}\r\n\r\n\r\n=== Starting or Stopping the Single Node Cluster. ===\r\n\r\n{{{\r\n$ /usr/local/hadoop/sbin/start-all.sh\r\n$ /usr/local/hadoop/sbin/stop-all.sh\r\n\r\nOR\r\n$ /usr/local/hadoop/sbin/start-dfs.sh\r\n$ /usr/local/hadoop/sbin/stop-dfs.sh\r\n\r\n$ /usr/local/hadoop/sbin/start-yarn.sh\r\n$ /usr/local/hadoop/sbin/stop-yarn.sh\r\n}}}\r\n\r\n\'\'\'For seeing all the services running\'\'\'\r\n{{{\r\n$ jps\r\n}}}\r\n\r\n=== For doing some copying operations ===\r\n{{{\r\n$ hdfs dfs -mkdir /akshat - For creating directory\r\n$ hdfs dfs -mkdir /akshat/Pune\r\n$ hdfs dfs -put history /akshat/Pune - For Copying\r\n}}}\r\n\r\n\r\nIf the file is not able to copy and show the error like:\r\n\r\n{{{\r\nFile /akshat/Pune/history._COPYING_ could only be replicated to 0 nodes instead of minReplication (=1).  There are 0 datanode(s) running and no node(s) are excluded in this operation. - CAUSED DUE TO MULTIPLE FORMAT.\r\n}}}\r\n\r\nThen clear all the contents from /tmp/hadoop_data/dfs/data\r\n\r\nThe webUI for checking if Hadoop is up and running : http://localhost:50070/\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Installation',1,1302000958000000,'akshat','59.163.79.36','== Installation Methods ==\r\n\r\nThere are two options available for Plone installation either Root Installation or Non-Root Installation. If we choose the Root Installation method it will\r\ninstall Python, Zope and Plone to /usr/local/Plone by default. A plone user will be created and Zope will be configured to run under that user id. If installation is run as a normal (non-root) user Python, Zope and Plone will be built at at the user’s home directory. It will run the Plone with the\r\nprivileges of that user. The non-root method is not an acceptable security profile for a production server, but can be used for testing and development\r\npurposes. The root installation provides the installation that runs the Zope server as a distinct user identity with minimal privileges unless the privileges are added. It provides adequate security for a production server.\r\n\r\n== Installation Options ==\r\n\r\nThere are two installation options available to install Plone as a standalone (single-instance) setup or as a clustered (ZEO) setup. The standalone option is easier for a desktop-based development setup while a clustered (ZEO) setup will take advantage of multi-core CPUs and is recommended for a production deployment.[[BR]]\r\n\r\nTo install Plone 3.3.5 in a stand-alone (single Zope instance) configuration:[[BR]]\r\n\r\nThe following command is issued for standalone option:\r\n\r\n{{{\r\nsudo ./install.sh standalone\r\n}}}\r\n\r\nTo install Plone 3.3.5 in a ZEO Cluster (ZEO server, 2 clients) configuration:[[BR]]\r\nThe following command is issued for standalone option for ZEO cluster option:\r\n\r\n{{{\r\nsudo ./install.sh zeo\r\n}}}\r\n\r\n== Installation for NCRA-TIFR Website ==\r\n\r\nPlone 3.3.5 with standalone option was installed for the NCRA-TIFR Pune website. It provides an user friendly web Interface and it was configured\r\naccording to the needs of NCRA-TIFR. Additional addon packages were installed like Plone FormGen for making Online Application Forms, Dropdown\r\nMenus, Embedding of Google Maps for pointing the various NCRA locations within the country etc. Plone was configured to use with external Database\r\nMySQL for NCRA-TIFR website to achieve it we need to set up a connection between the Database and the Zope application server for making queries to\r\nthe database via Plone through web based forms. Finally Plone was configured with the LDAP Server which is a central authentication server for users\r\nto have Single Sign On facility so that they can be able to log into the system for accessing internal data by their account on the LDAP server.[[BR]]\r\n\r\nOnce the installation is over we need to restart the Plone with the following command.\r\n\r\n{{{\r\nFor starting the Plone : /usr/local/Plone/zinstance/bin/plonectl start\r\nFor restarting the Plone : /usr/local/Plone/zinstance/bin/plonectl restart\r\nFor stopping the Plone : /usr/local/Plone/zinstance/bin/plonectl stop\r\nFor running in foreground: /usr/local/Plone/zinstance/bin/instance fg\r\n}}}\r\n\r\nAfter restarting Plone/Zope is accessed by opening a web browser though the URL http://localhost:8080/sitename. A username and password is needed\r\nby default the admin can login with the user name admin and the password is randomly generated during the installation that is stored in the[[BR]]\r\n\r\n{{{\r\n/usr/local/Plone/zinstance/admin.txt\r\n}}}\r\n\r\nIf we want to add a new site in Plone we need to access the ZMI through http://localhost:8080/manage and then there is a drop-down list of products located in the top-right corner and we can add a new Plone site there.\r\n\r\n\r\n----\r\n[wiki:PloneInstallation Back to Installation of Plone]','',0),('Installation',2,1302001025000000,'akshat','59.163.79.36','== Installation Methods ==\r\n\r\nThere are two options available for Plone installation either:[[BR]]\r\nA. Root Installation or[[BR]]\r\nB. Non-Root Installation.[[BR]]\r\n\r\nIf we choose the Root Installation method it will install Python, Zope and Plone to /usr/local/Plone by default. A plone user will be created and Zope will be configured to run under that user id. If installation is run as a normal (non-root) user Python, Zope and Plone will be built at at the user’s home directory. It will run the Plone with the privileges of that user. The non-root method is not an acceptable security profile for a production server, but can be used for testing and development purposes. The root installation provides the installation that runs the Zope server as a distinct user identity with minimal privileges unless the privileges are added. It provides adequate security for a production server.\r\n\r\n== Installation Options ==\r\n\r\nThere are two installation options available to install Plone as a standalone (single-instance) setup or as a clustered (ZEO) setup. The standalone option is easier for a desktop-based development setup while a clustered (ZEO) setup will take advantage of multi-core CPUs and is recommended for a production deployment.[[BR]]\r\n\r\nTo install Plone 3.3.5 in a stand-alone (single Zope instance) configuration:[[BR]]\r\n\r\nThe following command is issued for standalone option:\r\n\r\n{{{\r\nsudo ./install.sh standalone\r\n}}}\r\n\r\nTo install Plone 3.3.5 in a ZEO Cluster (ZEO server, 2 clients) configuration:[[BR]]\r\nThe following command is issued for standalone option for ZEO cluster option:\r\n\r\n{{{\r\nsudo ./install.sh zeo\r\n}}}\r\n\r\n== Installation for NCRA-TIFR Website ==\r\n\r\nPlone 3.3.5 with standalone option was installed for the NCRA-TIFR Pune website. It provides an user friendly web Interface and it was configured\r\naccording to the needs of NCRA-TIFR. Additional addon packages were installed like Plone FormGen for making Online Application Forms, Dropdown\r\nMenus, Embedding of Google Maps for pointing the various NCRA locations within the country etc. Plone was configured to use with external Database\r\nMySQL for NCRA-TIFR website to achieve it we need to set up a connection between the Database and the Zope application server for making queries to\r\nthe database via Plone through web based forms. Finally Plone was configured with the LDAP Server which is a central authentication server for users\r\nto have Single Sign On facility so that they can be able to log into the system for accessing internal data by their account on the LDAP server.[[BR]]\r\n\r\nOnce the installation is over we need to restart the Plone with the following command.\r\n\r\n{{{\r\nFor starting the Plone : /usr/local/Plone/zinstance/bin/plonectl start\r\nFor restarting the Plone : /usr/local/Plone/zinstance/bin/plonectl restart\r\nFor stopping the Plone : /usr/local/Plone/zinstance/bin/plonectl stop\r\nFor running in foreground: /usr/local/Plone/zinstance/bin/instance fg\r\n}}}\r\n\r\nAfter restarting Plone/Zope is accessed by opening a web browser though the URL http://localhost:8080/sitename. A username and password is needed\r\nby default the admin can login with the user name admin and the password is randomly generated during the installation that is stored in the[[BR]]\r\n\r\n{{{\r\n/usr/local/Plone/zinstance/admin.txt\r\n}}}\r\n\r\nIf we want to add a new site in Plone we need to access the ZMI through http://localhost:8080/manage and then there is a drop-down list of products located in the top-right corner and we can add a new Plone site there.\r\n\r\n\r\n----\r\n[wiki:PloneInstallation Back to Installation of Plone]','',0),('InstallationDetails',1,1301999660000000,'akshat','59.163.79.36','== Installation Details ==\r\n\r\nThe installed version of the Plone was Plone-3.3.5-UnifiedInstaller. This version includes Plone 3.3.5, Zope 2.10.7, and Python 2.4.6. This installer will compile Python, Zope and the required libraries from source. The details of the hardware and software specifications chosen are:\r\n\r\n\'\'\'HARDWARE SPECIFICATION\'\'\'[[BR]]\r\n\r\nProcessor : Intel Core 2 Duo 500MHZ[[BR]]\r\nRAM : 4GB[[BR]]\r\nHDD : 1TB[[BR]]\r\nFree Hard disk space : 250GB[[BR]]\r\nSTD Color Monitor[[BR]]\r\nNetwork interface card or Modem[[BR]]\r\n[[BR]]\r\n\r\n\'\'\'SOFTWARE SPECIFICATION\'\'\'[[BR]]\r\n\r\nOperating System : Ubuntu Server 10.04[[BR]]\r\nPlone Version : 3.3.5[[BR]]\r\nZope Version : 2.10.7[[BR]]\r\nPython Version : 2.4.6[[BR]]\r\nOpenLDAP[[BR]]\r\n\r\n\'\'\'Dependencies Needed\'\'\'[[BR]]\r\n\r\nThe following dependencies were needed to install Plone:[[BR]]\r\n1) gcc[[BR]]\r\n2) g++ (gcc-c++)[[BR]]\r\n3) GNU make[[BR]]\r\n4) GNU tar[[BR]]\r\n5) gunzip and bunzip2[[BR]]\r\n6) posix-compliant /bin/sh[[BR]]\r\n\r\n\'\'\'Libraries Needed\'\'\'[[BR]]\r\nThe following libraries should be installed prior to the installation of Plone:[[BR]]\r\n1) \'\'\'libssl (SSL support)\'\'\' : libssl-dev is used by openid and SecureMailHost and needed for https updates.[[BR]]\r\n2) \'\'\'zlib (GZ compression)\'\'\' : The Unified Installer will install this library zlib1g-dev but system libraries are usually preferable.[[BR]]\r\n3) \'\'\'libjpeg (jpeg support)\'\'\' : The Unified Installer will install this library libjpeg62-dev but system libraries are usually preferable.[[BR]]\r\n4) \'\'\'readline\'\'\' : This libreadline5-dev library is used to read Python command line history.[[BR]]\r\n5) \'\'\'libxml2\'\'\' : This libxml-dev library is used by marshall.[[BR]]\r\n6) \'\'\'wv\'\'\' : This library is used to index Word documents.[[BR]]\r\n7) \'\'\'xpdf\'\'\' : This library used to index PDFs.[[BR]]\r\n\r\n\r\n','',0),('InstallationDetails',2,1301999735000000,'akshat','59.163.79.36','== Installation Details ==\r\n\r\nThe installed version of the Plone was Plone-3.3.5-UnifiedInstaller. This version includes Plone 3.3.5, Zope 2.10.7, and Python 2.4.6. This installer will compile Python, Zope and the required libraries from source. The details of the hardware and software specifications chosen are:\r\n\r\n\'\'\'HARDWARE SPECIFICATION\'\'\'[[BR]]\r\n\r\nProcessor : Intel Core 2 Duo 500MHZ[[BR]]\r\nRAM : 4GB[[BR]]\r\nHDD : 1TB[[BR]]\r\nFree Hard disk space : 250GB[[BR]]\r\nSTD Color Monitor[[BR]]\r\nNetwork interface card or Modem[[BR]]\r\n[[BR]]\r\n\r\n\'\'\'SOFTWARE SPECIFICATION\'\'\'[[BR]]\r\n\r\nOperating System : Ubuntu Server 10.04[[BR]]\r\nPlone Version : 3.3.5[[BR]]\r\nZope Version : 2.10.7[[BR]]\r\nPython Version : 2.4.6[[BR]]\r\nOpenLDAP[[BR]]\r\n\r\n\'\'\'Dependencies Needed\'\'\'[[BR]]\r\n\r\nThe following dependencies were needed to install Plone:[[BR]]\r\n1) gcc[[BR]]\r\n2) g++ (gcc-c++)[[BR]]\r\n3) GNU make[[BR]]\r\n4) GNU tar[[BR]]\r\n5) gunzip and bunzip2[[BR]]\r\n6) posix-compliant /bin/sh[[BR]]\r\n\r\n\'\'\'Libraries Needed\'\'\'[[BR]]\r\nThe following libraries should be installed prior to the installation of Plone:[[BR]]\r\n1) \'\'\'libssl (SSL support)\'\'\' : libssl-dev is used by openid and SecureMailHost and needed for https updates.[[BR]]\r\n2) \'\'\'zlib (GZ compression)\'\'\' : The Unified Installer will install this library zlib1g-dev but system libraries are usually preferable.[[BR]]\r\n3) \'\'\'libjpeg (jpeg support)\'\'\' : The Unified Installer will install this library libjpeg62-dev but system libraries are usually preferable.[[BR]]\r\n4) \'\'\'readline\'\'\' : This libreadline5-dev library is used to read Python command line history.[[BR]]\r\n5) \'\'\'libxml2\'\'\' : This libxml-dev library is used by marshall.[[BR]]\r\n6) \'\'\'wv\'\'\' : This library is used to index Word documents.[[BR]]\r\n7) \'\'\'xpdf\'\'\' : This library used to index PDFs.[[BR]]\r\n\r\n\r\n[wiki:PloneInstallation Plone Installation]','',0),('InstallationDetails',3,1302000546000000,'akshat','59.163.79.36','== Installation Details ==\r\n\r\nThe installed version of the Plone was Plone-3.3.5-UnifiedInstaller. This version includes Plone 3.3.5, Zope 2.10.7, and Python 2.4.6. This installer will compile Python, Zope and the required libraries from source. The details of the hardware and software specifications chosen are:\r\n\r\n\'\'\'HARDWARE SPECIFICATION\'\'\'[[BR]]\r\n\r\nProcessor : Intel Core 2 Duo 500MHZ[[BR]]\r\nRAM : 4GB[[BR]]\r\nHDD : 1TB[[BR]]\r\nFree Hard disk space : 250GB[[BR]]\r\nSTD Color Monitor[[BR]]\r\nNetwork interface card or Modem[[BR]]\r\n[[BR]]\r\n\r\n\'\'\'SOFTWARE SPECIFICATION\'\'\'[[BR]]\r\n\r\nOperating System : Ubuntu Server 10.04[[BR]]\r\nPlone Version : 3.3.5[[BR]]\r\nZope Version : 2.10.7[[BR]]\r\nPython Version : 2.4.6[[BR]]\r\nOpenLDAP[[BR]]\r\n\r\n\'\'\'Dependencies Needed\'\'\'[[BR]]\r\n\r\nThe following dependencies were needed to install Plone:[[BR]]\r\n1) gcc[[BR]]\r\n2) g++ (gcc-c++)[[BR]]\r\n3) GNU make[[BR]]\r\n4) GNU tar[[BR]]\r\n5) gunzip and bunzip2[[BR]]\r\n6) posix-compliant /bin/sh[[BR]]\r\n\r\n\'\'\'Libraries Needed\'\'\'[[BR]]\r\nThe following libraries should be installed prior to the installation of Plone:[[BR]]\r\n1) \'\'\'libssl (SSL support)\'\'\' : libssl-dev is used by openid and SecureMailHost and needed for https updates.[[BR]]\r\n2) \'\'\'zlib (GZ compression)\'\'\' : The Unified Installer will install this library zlib1g-dev but system libraries are usually preferable.[[BR]]\r\n3) \'\'\'libjpeg (jpeg support)\'\'\' : The Unified Installer will install this library libjpeg62-dev but system libraries are usually preferable.[[BR]]\r\n4) \'\'\'readline\'\'\' : This libreadline5-dev library is used to read Python command line history.[[BR]]\r\n5) \'\'\'libxml2\'\'\' : This libxml-dev library is used by marshall.[[BR]]\r\n6) \'\'\'wv\'\'\' : This library is used to index Word documents.[[BR]]\r\n7) \'\'\'xpdf\'\'\' : This library used to index PDFs.[[BR]]\r\n----\r\n\r\n[wiki:PloneInstallation Plone Installation]','',0),('InstallationDetails',4,1302018884000000,'akshat','158.144.16.5','== Installation Details ==\r\n\r\nThe installed version of the Plone was Plone-3.3.5-UnifiedInstaller. This version includes Plone 3.3.5, Zope 2.10.7, and Python 2.4.6. This installer will compile Python, Zope and the required libraries from source. The details of the hardware and software specifications chosen are:\r\n\r\n\'\'\'HARDWARE SPECIFICATION\'\'\'[[BR]]\r\n\r\nProcessor : Intel Core 2 Duo 500MHZ[[BR]]\r\nRAM : 4GB[[BR]]\r\nHDD : 1TB[[BR]]\r\nFree Hard disk space : 250GB[[BR]]\r\nSTD Color Monitor[[BR]]\r\nNetwork interface card or Modem[[BR]]\r\n[[BR]]\r\n\r\n\'\'\'SOFTWARE SPECIFICATION\'\'\'[[BR]]\r\n\r\nOperating System : Ubuntu Server 10.04[[BR]]\r\nPlone Version : 3.3.5[[BR]]\r\nZope Version : 2.10.7[[BR]]\r\nPython Version : 2.4.6[[BR]]\r\nOpenLDAP[[BR]]\r\n\r\n\'\'\'Dependencies Needed\'\'\'[[BR]]\r\n\r\nThe following dependencies were needed to install Plone:[[BR]]\r\n1) gcc[[BR]]\r\n2) g++ (gcc-c++)[[BR]]\r\n3) GNU make[[BR]]\r\n4) GNU tar[[BR]]\r\n5) gunzip and bunzip2[[BR]]\r\n6) posix-compliant /bin/sh[[BR]]\r\n\r\n\'\'\'Libraries Needed\'\'\'[[BR]]\r\n\r\nThe following libraries should be installed prior to the installation of Plone:[[BR]]\r\n1) \'\'\'libssl (SSL support)\'\'\' : libssl-dev is used by openid and SecureMailHost and needed for https updates.[[BR]]\r\n2) \'\'\'zlib (GZ compression)\'\'\' : The Unified Installer will install this library zlib1g-dev but system libraries are usually preferable.[[BR]]\r\n3) \'\'\'libjpeg (jpeg support)\'\'\' : The Unified Installer will install this library libjpeg62-dev but system libraries are usually preferable.[[BR]]\r\n4) \'\'\'readline\'\'\' : This libreadline5-dev library is used to read Python command line history.[[BR]]\r\n5) \'\'\'libxml2\'\'\' : This libxml-dev library is used by marshall.[[BR]]\r\n6) \'\'\'wv\'\'\' : This library is used to index Word documents.[[BR]]\r\n7) \'\'\'xpdf\'\'\' : This library used to index PDFs.[[BR]]\r\n----\r\n\r\n[wiki:PloneInstallation Plone Installation]','',0),('InterMapTxt',1,1291894092000000,'trac','127.0.0.1','= InterMapTxt =\n\n== This is the place for defining InterWiki prefixes ==\n\nThis page was modelled after the MeatBall:InterMapTxt page.\nIn addition, an optional comment is allowed after the mapping.\n\n\nThis page is interpreted in a special way by Trac, in order to support\n!InterWiki links in a flexible and dynamic way.\n\nThe code block after the first line separator in this page\nwill be interpreted as a list of !InterWiki specifications:\n{{{\nprefix <space> URL [<space> # comment]\n}}}\n\nBy using `$1`, `$2`, etc. within the URL, it is possible to create \nInterWiki links which support multiple arguments, e.g. Trac:ticket:40.\nThe URL itself can be optionally followed by a comment, \nwhich will subsequently be used for decorating the links \nusing that prefix.\n\nNew !InterWiki links can be created by adding to that list, in real time.\nNote however that \'\'deletions\'\' are also taken into account immediately,\nso it may be better to use comments for disabling prefixes.\n\nAlso note that !InterWiki prefixes are case insensitive.\n\n\n== List of Active Prefixes ==\n\n[[InterWiki]]\n\n\n----\n\n== Prefix Definitions ==\n\n{{{\nPEP     http://www.python.org/peps/pep-$1.html    # Python Enhancement Proposal \nPythonBug    http://bugs.python.org/issue$1       # Python Issue #$1\nPython-issue http://bugs.python.org/issue$1       # Python Issue #$1\n\nTrac-ML  http://thread.gmane.org/gmane.comp.version-control.subversion.trac.general/ # Message $1 in Trac Mailing List\ntrac-dev http://thread.gmane.org/gmane.comp.version-control.subversion.trac.devel/   # Message $1 in Trac Development Mailing List\n\nMercurial http://www.selenic.com/mercurial/wiki/index.cgi/ # the wiki for the Mercurial distributed SCM\nRFC       http://tools.ietf.org/html/rfc$1 # IETF\'s RFC $1\nISO       http://en.wikipedia.org/wiki/ISO_ # ISO Standard $1 in Wikipedia\n\nCheeseShop  http://cheeseshop.python.org/pypi/  # Python Package $1 from the Cheese Shop\nSQLite      http://www.sqlite.org/cvstrac/wiki?p= \nmysql-bugs  http://bugs.mysql.com/bug.php?id=  # Bug #$1 in MySQL\'s bug database\npeak        http://peak.telecommunity.com/DevCenter/ # $1 in Python Enterprise Application Kit\'s Wiki\nMODPYTHON   http://issues.apache.org/jira/browse/MODPYTHON- # Issue $1 in mod_python\'s JIRA instance\nSvnWiki     http://www.orcaware.com/svn/wiki/ # Subversion Wiki\n\n#\n# A arbitrary pick of InterWiki prefixes...\n#\nAcronym          http://www.acronymfinder.com/af-query.asp?String=exact&Acronym=\nC2find           http://c2.com/cgi/wiki?FindPage&value=\nCache            http://www.google.com/search?q=cache:\nCPAN             http://search.cpan.org/perldoc?\nDebianBug        http://bugs.debian.org/\nDebianPackage    http://packages.debian.org/\nDictionary       http://www.dict.org/bin/Dict?Database=*&Form=Dict1&Strategy=*&Query=\nGoogle           http://www.google.com/search?q=\nGoogleGroups     http://groups.google.com/group/$1/msg/$2        # Message $2 in $1 Google Group\nJargonFile       http://downlode.org/perl/jargon-redirect.cgi?term=\nMeatBall         http://www.usemod.com/cgi-bin/mb.pl?\nMetaWiki         http://sunir.org/apps/meta.pl?\nMetaWikiPedia    http://meta.wikipedia.org/wiki/\nMoinMoin         http://moinmoin.wikiwikiweb.de/\nWhoIs            http://www.whois.sc/\nWhy              http://clublet.com/c/c/why?\nc2Wiki           http://c2.com/cgi/wiki?\nWikiPedia        http://en.wikipedia.org/wiki/\n}}}\n',NULL,NULL),('InterTrac',1,1291894092000000,'trac','127.0.0.1','= InterTrac Links  =\n\nTrac supports a convenient way to refer to resources of other Trac servers, from within the Wiki markup, since version 0.10.\n\n== Definitions ==\n\nAn InterTrac link can be seen as a scoped TracLinks.\nIt is used for referring to a Trac resource \n(Wiki page, changeset, ticket, ...) located in another\nTrac environment.\n\n== List of Active InterTrac Prefixes ==\n\n[[InterTrac]]\n\n== Link Syntax ==\n\nSimply use the name of the other Trac environment as a prefix, \nfollowed by a colon, ending with the resource located in the other environment.\n\n{{{\n<target_environment>:<TracLinks>\n}}}\n\nThe other resource is specified using a regular TracLinks, of any flavor.\n\nThat target environment name is either the real name of the \nenvironment, or an alias for it. \nThe aliases are defined in `trac.ini` (see below).\nThe prefix is case insensitive.\n\nWhen a TracLink is enclosed in brackets, the alias is expanded.  That is, `[th:ticket:1]` is displayed as `trachacks:ticket:1`, since `th` is an alias for `trachacks`.  If the TracLink is not enclosed in brackets, then the alias is displayed as it is typed.\n\nFor convenience, there\'s also some alternative short-hand form, \nwhere one can use an alias as an immediate prefix \nfor the identifier of a ticket, changeset or report:\n(e.g. `#T234`, `[T1508]`, `[trac 1508]`, ...)\n\n== Examples ==\n\nIt is necessary to setup a configuration for the InterTrac facility.\nThis configuration has to be done in the TracIni file, `[intertrac]` section.\n\nExample configuration:\n{{{\n...\n[intertrac]\n# -- Example of setting up an alias:\nt = trac\n\n# -- Link to an external Trac:\ntrac.title = Edgewall\'s Trac for Trac\ntrac.url = http://trac.edgewall.org\n}}}\n\nThe `.url` is mandatory and is used for locating the other Trac.\nThis can be a relative URL in case that Trac environment is located \non the same server.\n\nThe `.title` information will be used for providing an useful tooltip\nwhen moving the cursor over an InterTrac links.\n\nFinally, the `.compat` option can be used to activate or disable\na \'\'compatibility\'\' mode:\n * If the targeted Trac is running a version below [trac:milestone:0.10 0.10] \n   ([trac:r3526 r3526] to be precise), then it doesn\'t know how to dispatch an InterTrac \n   link, and it\'s up to the local Trac to prepare the correct link. \n   Not all links will work that way, but the most common do. \n   This is called the compatibility mode, and is `true` by default. \n * If you know that the remote Trac knows how to dispatch InterTrac links, \n   you can explicitly disable this compatibility mode and then \'\'any\'\' \n   TracLinks can become an InterTrac link.\n\nNow, given the above configuration, one could create the following links:\n * to this InterTrac page:\n   * `trac:wiki:InterTrac` trac:wiki:InterTrac\n   * `t:wiki:InterTrac` t:wiki:InterTrac\n   * Keys are case insensitive: `T:wiki:InterTrac` T:wiki:InterTrac\n * to the ticket #234:\n   * `trac:ticket:234` trac:ticket:234\n   * `trac:#234` trac:#234 \n   * `#T234` #T234\n * to the changeset [1912]:\n   * `trac:changeset:1912` trac:changeset:1912\n   * `[T1912]` [T1912]\n * to the log range [3300:3330]: \'\'\'(Note: the following ones need `trac.compat=false`)\'\'\'\n   * `trac:log:@3300:3330` trac:log:@3300:3330  \n   * `[trac 3300:3330]` [trac 3300:3330] \n * finally, to link to the start page of a remote trac, simply use its prefix followed by \':\', inside an explicit link. Example: `[th: Trac Hacks]` (\'\'since 0.11; note that the \'\'remote\'\' Trac has to run 0.11 for this to work\'\')\n\nThe generic form `intertrac_prefix:module:id` is translated\nto the corresponding URL `<remote>/module/id`, shorthand links\nare specific to some modules (e.g. !#T234 is processed by the\nticket module) and for the rest (`intertrac_prefix:something`),\nwe rely on the TracSearch#quickjump facility of the remote Trac.\n\n----\nSee also: TracLinks, InterWiki\n',NULL,NULL),('InterTrac',2,1397068026262270,'trac','127.0.0.1','= InterTrac Links  =\n\nTrac supports a convenient way to refer to resources of other Trac servers, from within the Wiki markup, since version 0.10.\n\n== Definitions ==\n\nAn InterTrac link can be seen as a scoped TracLinks.\nIt is used for referring to a Trac resource \n(Wiki page, changeset, ticket, ...) located in another\nTrac environment.\n\n== List of Active InterTrac Prefixes ==\n\n[[InterTrac]]\n\n== Link Syntax ==\n\nSimply use the name of the other Trac environment as a prefix, \nfollowed by a colon, ending with the resource located in the other environment.\n\n{{{\n<target_environment>:<TracLinks>\n}}}\n\nThe other resource is specified using a regular TracLinks, of any flavor.\n\nThat target environment name is either the real name of the \nenvironment, or an alias for it. \nThe aliases are defined in `trac.ini` (see below).\nThe prefix is case insensitive.\n\nIf the InterTrac link is enclosed in square brackets (like `[th:WikiExtrasPlugin]`), the InterTrac prefix is removed in the displayed link, like a normal link resolver would be (i.e. the above would be displayed as `WikiExtrasPlugin`).\n\nFor convenience, there\'s also some alternative short-hand form, \nwhere one can use an alias as an immediate prefix \nfor the identifier of a ticket, changeset or report:\n(e.g. `#T234`, `[T1508]`, `[trac 1508]`, ...)\n\n== Examples ==\n\nIt is necessary to setup a configuration for the InterTrac facility.\nThis configuration has to be done in the TracIni file, `[intertrac]` section.\n\nExample configuration:\n{{{\n...\n[intertrac]\n# -- Example of setting up an alias:\nt = trac\n\n# -- Link to an external Trac:\ntrac.title = Edgewall\'s Trac for Trac\ntrac.url = http://trac.edgewall.org\n}}}\n\nThe `.url` is mandatory and is used for locating the other Trac.\nThis can be a relative URL in case that Trac environment is located \non the same server.\n\nThe `.title` information will be used for providing an useful tooltip\nwhen moving the cursor over an InterTrac links.\n\nFinally, the `.compat` option can be used to activate or disable\na \'\'compatibility\'\' mode:\n * If the targeted Trac is running a version below [trac:milestone:0.10 0.10] \n   ([trac:r3526 r3526] to be precise), then it doesn\'t know how to dispatch an InterTrac \n   link, and it\'s up to the local Trac to prepare the correct link. \n   Not all links will work that way, but the most common do. \n   This is called the compatibility mode, and is `true` by default. \n * If you know that the remote Trac knows how to dispatch InterTrac links, \n   you can explicitly disable this compatibility mode and then \'\'any\'\' \n   TracLinks can become an InterTrac link.\n\nNow, given the above configuration, one could create the following links:\n * to this InterTrac page:\n   * `trac:wiki:InterTrac` trac:wiki:InterTrac\n   * `t:wiki:InterTrac` t:wiki:InterTrac\n   * Keys are case insensitive: `T:wiki:InterTrac` T:wiki:InterTrac\n * to the ticket #234:\n   * `trac:ticket:234` trac:ticket:234\n   * `trac:#234` trac:#234 \n   * `#T234` #T234\n * to the changeset [1912]:\n   * `trac:changeset:1912` trac:changeset:1912\n   * `[T1912]` [T1912]\n * to the log range [3300:3330]: \'\'\'(Note: the following ones need `trac.compat=false`)\'\'\'\n   * `trac:log:@3300:3330` trac:log:@3300:3330  \n   * `[trac 3300:3330]` [trac 3300:3330] \n * finally, to link to the start page of a remote trac, simply use its prefix followed by \':\', inside an explicit link. Example: `[th: Trac Hacks]` (\'\'since 0.11; note that the \'\'remote\'\' Trac has to run 0.11 for this to work\'\')\n\nThe generic form `intertrac_prefix:module:id` is translated\nto the corresponding URL `<remote>/module/id`, shorthand links\nare specific to some modules (e.g. !#T234 is processed by the\nticket module) and for the rest (`intertrac_prefix:something`),\nwe rely on the TracSearch#quickjump facility of the remote Trac.\n\n----\nSee also: TracLinks, InterWiki\n',NULL,NULL),('InterWiki',1,1291894092000000,'trac','127.0.0.1','= Support for InterWiki links =\n\n\'\'(since [trac:milestone:0.10 0.10])\'\'\n\n== Definition ==\n\nAn InterWiki link can be used for referring to a Wiki page\nlocated in another Wiki system, and by extension, to any object\nlocated in any other Web application, provided a simple URL \nmapping can be done.\n\nAt the extreme, InterWiki prefixes can even be used to simply introduce\nlinks to new protocols, such as `tsvn:` used by [trac:TortoiseSvn TortoiseSvn].\n\n== Link Syntax ==\n\n{{{\n<target_wiki>(:<identifier>)+\n}}}\n\nThe link is composed by the targeted Wiki (or system) name,\nfollowed by a colon (e.g. `MeatBall:`),\nfollowed by a page specification in the target.\nNote that, as for InterTrac prefixes, \'\'\'InterWiki prefixes are case insensitive\'\'\'.\n\nThe target Wiki URL is looked up in the InterMapTxt wiki page, \nmodelled after MeatBall:InterMapTxt.\n\nIn addition to traditional InterWiki links, where the target\nis simply \'\'appended\'\' to the URL, \nTrac supports parametric InterWiki URLs:\nidentifiers `$1`, `$2`, ... in the URL\nwill be replaced by corresponding arguments.\nThe argument list is formed by splitting the page identifier\nusing the \":\" separator.\n\n== Examples ==\n\nIf the following is an excerpt of the InterMapTxt page:\n\n{{{\n= InterMapTxt =\n== This is the place for defining InterWiki prefixes ==\n\nCurrently active prefixes: [[InterWiki]]\n\nThis page is modelled after the MeatBall:InterMapTxt page.\nIn addition, an optional comment is allowed after the mapping.\n----\n{{{\nPEP      http://www.python.org/peps/pep-$1.html           # Python Enhancement Proposal $1 \nTrac-ML  http://thread.gmane.org/gmane.comp.version-control.subversion.trac.general/$1  # Message $1 in Trac Mailing List\n\ntsvn     tsvn:                                            # Interact with TortoiseSvn\n...\nMeatBall http://www.usemod.com/cgi-bin/mb.pl?\nMetaWiki http://sunir.org/apps/meta.pl?\nMetaWikiPedia http://meta.wikipedia.org/wiki/\nMoinMoin http://moinmoin.wikiwikiweb.de/\n...\n}}}\n}}}\n\nThen, \n * `MoinMoin:InterWikiMap` should be rendered as MoinMoin:InterWikiMap\n   and the \'\'title\'\' for that link would be \"!InterWikiMap in !MoinMoin\"\n * `Trac-ML:4346` should be rendered as Trac-ML:4346\n   and the \'\'title\'\' for that link would be \"Message 4346 in Trac Mailing List\"\n\n----\nSee also: InterTrac, InterMapTxt',NULL,NULL),('InterWiki',2,1397068026236921,'trac','127.0.0.1','= Support for InterWiki links =\n\n\'\'(since [trac:milestone:0.10 0.10])\'\'\n\n== Definition ==\n\nAn InterWiki link can be used for referring to a Wiki page\nlocated in another Wiki system, and by extension, to any object\nlocated in any other Web application, provided a simple URL \nmapping can be done.\n\nAt the extreme, InterWiki prefixes can even be used to simply introduce\nlinks to new protocols, such as `tsvn:` used by [trac:TortoiseSvn TortoiseSvn].\n\n== Link Syntax ==\n\n{{{\n<target_wiki>(:<identifier>)+\n}}}\n\nThe link is composed by the targeted Wiki (or system) name,\nfollowed by a colon (e.g. `MeatBall:`),\nfollowed by a page specification in the target.\nNote that, as for InterTrac prefixes, \'\'\'InterWiki prefixes are case insensitive\'\'\'.\n\nThe target Wiki URL is looked up in the `[interwiki]` section of TracIni or in the InterMapTxt wiki page, modeled after MeatBall:InterMapTxt. If a prefix is defined in both the `[interwiki]` section and InterMapTxt, the `[interwiki]` section takes precedence.\n\nIn addition to traditional InterWiki links, where the target\nis simply \'\'appended\'\' to the URL, \nTrac supports parametric InterWiki URLs:\nidentifiers `$1`, `$2`, ... in the URL\nwill be replaced by corresponding arguments.\nThe argument list is formed by splitting the page identifier\nusing the \":\" separator.\n\n=== [interwiki] ===\nEvery option in the `[interwiki]` section in TracIni defines one InterWiki prefix. The option name defines the prefix. The option value defines the URL, optionally followed by a description separated from the URL by whitespace. Parametric URLs are supported as well.\n\n\'\'\'Example:\'\'\'\n{{{\n[interwiki]\nMeatBall = http://www.usemod.com/cgi-bin/mb.pl?\nPEP = http://www.python.org/peps/pep-$1.html Python Enhancement Proposal $1\ntsvn = tsvn: Interact with TortoiseSvn\n}}}\n\n== Examples ==\n\nIf the following is an excerpt of the InterMapTxt page:\n\n{{{\n= InterMapTxt =\n== This is the place for defining InterWiki prefixes ==\n\nCurrently active prefixes: [[InterWiki]]\n\nThis page is modelled after the MeatBall:InterMapTxt page.\nIn addition, an optional comment is allowed after the mapping.\n----\n{{{\nPEP      http://www.python.org/peps/pep-$1.html           # Python Enhancement Proposal $1 \nTrac-ML  http://thread.gmane.org/gmane.comp.version-control.subversion.trac.general/$1  # Message $1 in Trac Mailing List\n\ntsvn     tsvn:                                            # Interact with TortoiseSvn\n...\nMeatBall http://www.usemod.com/cgi-bin/mb.pl?\nMetaWiki http://sunir.org/apps/meta.pl?\nMetaWikiPedia http://meta.wikipedia.org/wiki/\nMoinMoin http://moinmoin.wikiwikiweb.de/\n...\n}}}\n}}}\n\nThen, \n * `MoinMoin:InterWikiMap` should be rendered as MoinMoin:InterWikiMap\n   and the \'\'title\'\' for that link would be \"!InterWikiMap in !MoinMoin\"\n * `Trac-ML:4346` should be rendered as Trac-ML:4346\n   and the \'\'title\'\' for that link would be \"Message 4346 in Trac Mailing List\"\n\n----\nSee also: InterTrac, InterMapTxt\n',NULL,NULL),('Java',1,1402569982164748,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Java References</h2>\r\n}}}\r\n\r\n[http://docs.oracle.com/javase/tutorial/essential/environment/cmdLineArgs.html CLI Arguments in Java]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Java',2,1405347730120995,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Java References</h2>\r\n}}}\r\n\r\n[[Image(Java.jpg,220px,right)]]\r\n\r\n[http://docs.oracle.com/javase/tutorial/essential/environment/cmdLineArgs.html CLI Arguments in Java]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LDAP',1,1322765759000000,'akshat','158.144.16.12','= LDAP =\r\n\r\n== Openldap Installation and Configuration ==\r\n\'\'\'Required Dependencies\'\'\'\r\nBefore installing OpenLDAP on the system following softwares packages needs to be installed. These packages are used by the OpenLDAP during and after the installation.[[BR]]\r\n\r\nBase system (libraries and tools):[[BR]]\r\nStandard C compiler (required)[[BR]]\r\nCyrus SASL 2.1.21+ (recommended)[[BR]]\r\nOpenSSL 0.9.7+ (recommended)[[BR]]\r\nReentrant POSIX REGEX software (required)[[BR]]\r\nSLAPD[[BR]]\r\nBDB and HDB backends require Oracle Berkeley DB 4.4, 4.5, 4.6, or 4.7.[[BR]]\r\n\r\n----\r\n\r\n\'\'\'Installation\'\'\'\r\n\r\n[[BR]]\r\n\r\n1. First the software is downloaded from OpenLDAP download page:\r\nhttp://www.openldap.org/software/download/\r\n\r\n[[BR]]\r\n\r\n2. Unpack the distribution : The .tar file is extracted at the required\r\nplace.\r\n\r\n{{{\r\ngunzip -c openldap-VERSION.tgz — tar xvfB\r\n}}}\r\n\r\nthen change path to the distribution directory:\r\n\r\n{{{\r\ncd openldap-VERSION\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n3. Run configure : \r\n\r\n{{{\r\n./configure\r\n}}}\r\n\r\n[[BR]]\r\n\r\n4. Build the software : Now the software will be built. It has two parts,\r\nfirst the dependencies are constructed and then we compile the software:\r\n\r\n{{{\r\nmake depend\r\nmake\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n5.Test the build : For checking the build process was correct we need to\r\nrun the test suite.\r\n\r\n{{{\r\nmake test\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n6. Install the software : Now the software is installed with the super-user\r\nprivileges\r\n\r\n{{{\r\nsu root -c make install\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n7. Edit the configuration file : Now the slapd.conf is edited which\r\nis usually located at /usr/local/etc/openldap/slapd.conf to contain a BDB\r\ndatabase definition of the following form:\r\n\r\n{{{\r\ninclude/usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/cosineschema\r\ninclude/usr/local/openldap/etc/openldap/schema/interorgperson.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/pmi.schema\r\npidfile /usr/local/openldap/var/run/slapd.pid\r\nargsfile /usr/local/openldap/var/run/slapd.args\r\ndatabase bdb\r\nsuffix ” dc=ncra , dc=t i f r , dc=r e s , dc=i n ”\r\nrootdn ” cn=Manager , dc=ncra , dc=t i f r , dc=r e s , dc=i n ”\r\nrootpw topsecret\r\ndirectory /usr/local/openldap/var/openldap−data\r\nindex\r\nobjectClass\r\neq\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n8. Start slapd : The LDAP server is started by running the command:\r\n\r\n{{{\r\nsu root -c /usr/local/libexec/slapd\r\n}}}\r\n\r\nFor checking the server is running proprerly we will search the entries.\r\n\r\n{{{\r\nldapsearch -x -b ” -s base ’(objectclass=*)’\r\nThis should return:\r\ndn:namingContexts: dc=ncra,dc=tifr,dc=res,dc=in\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n9. Stopping Server : For stopping the server we need to kill the process id of slapd\r\n\r\n{{{\r\nkill -INT ‘cat /usr/local/openldap/var/run/slapd.pid‘\r\n}}}\r\n','',0),('LDAP',2,1322765884000000,'akshat','158.144.16.12','= LDAP =\r\n\r\n== Openldap Installation and Configuration ==\r\n\'\'\'Required Dependencies\'\'\'[[BR]]\r\nBefore installing OpenLDAP on the system following softwares packages needs to be installed. These packages are used by the OpenLDAP during and after the installation.[[BR]]\r\n\r\nBase system (libraries and tools):[[BR]]\r\nStandard C compiler (required)[[BR]]\r\nCyrus SASL 2.1.21+ (recommended)[[BR]]\r\nOpenSSL 0.9.7+ (recommended)[[BR]]\r\nReentrant POSIX REGEX software (required)[[BR]]\r\nSLAPD[[BR]]\r\nBDB and HDB backends require Oracle Berkeley DB 4.4, 4.5, 4.6, or 4.7.[[BR]]\r\n\r\n----\r\n\r\n\'\'\'Installation\'\'\'\r\n\r\n[[BR]]\r\n\r\n1. First the software is downloaded from OpenLDAP download page:\r\nhttp://www.openldap.org/software/download/\r\n\r\n[[BR]]\r\n\r\n2. Unpack the distribution : The .tar file is extracted at the required\r\nplace.\r\n\r\n{{{\r\ngunzip -c openldap-VERSION.tgz — tar xvfB\r\n}}}\r\n\r\nthen change path to the distribution directory:\r\n\r\n{{{\r\ncd openldap-VERSION\r\n}}}\r\n\r\n[[BR]]\r\n\r\n3. Run configure : \r\n\r\n{{{\r\n./configure\r\n}}}\r\n\r\n[[BR]]\r\n\r\n4. Build the software : Now the software will be built. It has two parts,\r\nfirst the dependencies are constructed and then we compile the software:\r\n\r\n{{{\r\nmake depend\r\nmake\r\n}}}\r\n\r\n[[BR]]\r\n\r\n5.Test the build : For checking the build process was correct we need to\r\nrun the test suite.\r\n\r\n{{{\r\nmake test\r\n}}}\r\n\r\n[[BR]]\r\n\r\n6. Install the software : Now the software is installed with the super-user\r\nprivileges\r\n\r\n{{{\r\nsu root -c make install\r\n}}}\r\n\r\n[[BR]]\r\n\r\n7. Edit the configuration file : Now the slapd.conf is edited which\r\nis usually located at /usr/local/etc/openldap/slapd.conf to contain a BDB\r\ndatabase definition of the following form:\r\n\r\n{{{\r\ninclude/usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/cosineschema\r\ninclude/usr/local/openldap/etc/openldap/schema/interorgperson.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/pmi.schema\r\npidfile /usr/local/openldap/var/run/slapd.pid\r\nargsfile /usr/local/openldap/var/run/slapd.args\r\ndatabase bdb\r\nsuffix ”dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootdn ”cn=Manager, dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootpw topsecret\r\ndirectory /usr/local/openldap/var/openldap−data\r\nindex\r\nobjectClass\r\neq\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n8. Start slapd : The LDAP server is started by running the command:\r\n\r\n{{{\r\nsu root -c /usr/local/libexec/slapd\r\n}}}\r\n\r\nFor checking the server is running proprerly we will search the entries.\r\n\r\n{{{\r\nldapsearch -x -b ” -s base ’(objectclass=*)’\r\nThis should return:\r\ndn:namingContexts: dc=ncra,dc=tifr,dc=res,dc=in\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n9. Stopping Server : For stopping the server we need to kill the process id of slapd\r\n\r\n{{{\r\nkill -INT ‘cat /usr/local/openldap/var/run/slapd.pid‘\r\n}}}\r\n','',0),('LDAP',3,1322766996000000,'akshat','158.144.16.12','= LDAP =\r\n\r\n== Openldap Installation and Configuration ==\r\n\'\'\'Required Dependencies\'\'\'[[BR]]\r\nBefore installing OpenLDAP on the system following softwares packages needs to be installed. These packages are used by the OpenLDAP during and after the installation.[[BR]]\r\n\r\nBase system (libraries and tools):[[BR]]\r\nStandard C compiler (required)[[BR]]\r\nCyrus SASL 2.1.21+ (recommended)[[BR]]\r\nOpenSSL 0.9.7+ (recommended)[[BR]]\r\nReentrant POSIX REGEX software (required)[[BR]]\r\nSLAPD[[BR]]\r\nBDB and HDB backends require Oracle Berkeley DB 4.4, 4.5, 4.6, or 4.7.[[BR]]\r\n\r\n----\r\n\r\n\'\'\'Installation\'\'\'\r\n\r\n[[BR]]\r\n\r\n1. First the software is downloaded from OpenLDAP download page:\r\nhttp://www.openldap.org/software/download/\r\n\r\n[[BR]]\r\n\r\n2. Unpack the distribution : The .tar file is extracted at the required place.\r\n\r\n{{{\r\n$ gunzip -c openldap-VERSION.tgz — tar xvfB\r\n}}}\r\n\r\nthen change path to the distribution directory:\r\n\r\n{{{\r\n$ cd openldap-VERSION\r\n}}}\r\n\r\n[[BR]]\r\n\r\n3. Run configure : \r\n\r\n{{{\r\n$ ./configure\r\n}}}\r\n\r\n[[BR]]\r\n\r\n4. Build the software : Now the software will be built. It has two parts,\r\nfirst the dependencies are constructed and then we compile the software:\r\n\r\n{{{\r\n$ make depend\r\n$ make\r\n}}}\r\n\r\n[[BR]]\r\n\r\n5.Test the build : For checking the build process was correct we need to\r\nrun the test suite.\r\n\r\n{{{\r\n$ make test\r\n}}}\r\n\r\n[[BR]]\r\n\r\n6. Install the software : Now the software is installed with the super-user\r\nprivileges\r\n\r\n{{{\r\n$ su root -c make install\r\n}}}\r\n\r\n[[BR]]\r\n\r\n7. Edit the configuration file : Now the slapd.conf is edited which\r\nis usually located at /usr/local/etc/openldap/slapd.conf to contain a BDB\r\ndatabase definition of the following form:\r\n\r\n{{{\r\ninclude/usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/cosineschema\r\ninclude/usr/local/openldap/etc/openldap/schema/interorgperson.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/pmi.schema\r\npidfile /usr/local/openldap/var/run/slapd.pid\r\nargsfile /usr/local/openldap/var/run/slapd.args\r\ndatabase bdb\r\nsuffix ”dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootdn ”cn=Manager, dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootpw topsecret\r\ndirectory /usr/local/openldap/var/openldap−data\r\nindex\r\nobjectClass\r\neq\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n8. Start slapd : The LDAP server is started by running the command:\r\n\r\n{{{\r\n$ su root -c /usr/local/libexec/slapd\r\n}}}\r\n\r\nFor checking the server is running proprerly we will search the entries.\r\n\r\n{{{\r\nldapsearch -x -b ” -s base ’(objectclass=*)’\r\nThis should return:\r\ndn:namingContexts: dc=ncra,dc=tifr,dc=res,dc=in\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n9. Stopping Server : For stopping the server we need to kill the process id of slapd\r\n\r\n{{{\r\n$ kill -INT ‘cat /usr/local/openldap/var/run/slapd.pid‘\r\n}}}\r\n\r\n----\r\n\r\n= BUILDING AND INSTALLING BERKLEY DATABASE =\r\n\r\n\r\n{{{\r\n$ tar -xvf Berkleydb\r\n\r\n// Make sure that Openldap is compitable with berklet database version upto 4.8 not 5.0 or above\r\n\r\n$ cd Berkleydb\r\n$ cd build_unix\r\n\r\n$ ../dist/configure --prefix=/usr/local/bdb\r\n\r\n$ make\r\n$ make install\r\n\r\n$ echo /usr/local/bdb/lib >> /etc/ld.so.conf\r\n$ ldconfig\r\n\r\n}}}\r\n','',0),('LDAP',4,1322768002000000,'akshat','158.144.16.12','= LDAP =\r\n\r\n== Openldap Installation and Configuration ==\r\n\'\'\'Required Dependencies\'\'\'[[BR]]\r\nBefore installing OpenLDAP on the system following softwares packages needs to be installed. These packages are used by the OpenLDAP during and after the installation.[[BR]]\r\n\r\nBase system (libraries and tools):[[BR]]\r\nStandard C compiler (required)[[BR]]\r\nCyrus SASL 2.1.21+ (recommended)[[BR]]\r\nOpenSSL 0.9.7+ (recommended)[[BR]]\r\nReentrant POSIX REGEX software (required)[[BR]]\r\nSLAPD[[BR]]\r\nBDB and HDB backends require Oracle Berkeley DB 4.4, 4.5, 4.6, or 4.7.[[BR]]\r\n\r\n----\r\n\r\n\'\'\'Installation\'\'\'\r\n\r\n[[BR]]\r\n\r\n1. First the software is downloaded from OpenLDAP download page:\r\nhttp://www.openldap.org/software/download/\r\n\r\n[[BR]]\r\n\r\n2. Unpack the distribution : The .tar file is extracted at the required place.\r\n\r\n{{{\r\n$ gunzip -c openldap-VERSION.tgz — tar xvfB\r\n}}}\r\n\r\nthen change path to the distribution directory:\r\n\r\n{{{\r\n$ cd openldap-VERSION\r\n}}}\r\n\r\n[[BR]]\r\n\r\n3. Run configure : \r\n\r\n{{{\r\n$ ./configure\r\n}}}\r\n\r\n[[BR]]\r\n\r\n4. Build the software : Now the software will be built. It has two parts,\r\nfirst the dependencies are constructed and then we compile the software:\r\n\r\n{{{\r\n$ make depend\r\n$ make\r\n}}}\r\n\r\n[[BR]]\r\n\r\n5.Test the build : For checking the build process was correct we need to\r\nrun the test suite.\r\n\r\n{{{\r\n$ make test\r\n}}}\r\n\r\n[[BR]]\r\n\r\n6. Install the software : Now the software is installed with the super-user\r\nprivileges\r\n\r\n{{{\r\n$ su root -c make install\r\n}}}\r\n\r\n[[BR]]\r\n\r\n7. Edit the configuration file : Now the slapd.conf is edited which\r\nis usually located at /usr/local/etc/openldap/slapd.conf to contain a BDB\r\ndatabase definition of the following form:\r\n\r\n{{{\r\ninclude/usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/cosineschema\r\ninclude/usr/local/openldap/etc/openldap/schema/interorgperson.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/pmi.schema\r\npidfile /usr/local/openldap/var/run/slapd.pid\r\nargsfile /usr/local/openldap/var/run/slapd.args\r\ndatabase bdb\r\nsuffix ”dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootdn ”cn=Manager, dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootpw topsecret\r\ndirectory /usr/local/openldap/var/openldap−data\r\nindex\r\nobjectClass\r\neq\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n8. Start slapd : The LDAP server is started by running the command:\r\n\r\n{{{\r\n$ su root -c /usr/local/libexec/slapd\r\n}}}\r\n\r\nFor checking the server is running proprerly we will search the entries.\r\n\r\n{{{\r\nldapsearch -x -b ” -s base ’(objectclass=*)’\r\nThis should return:\r\ndn:namingContexts: dc=ncra,dc=tifr,dc=res,dc=in\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n9. Stopping Server : For stopping the server we need to kill the process id of slapd\r\n\r\n{{{\r\n$ kill -INT ‘cat /usr/local/openldap/var/run/slapd.pid‘\r\n}}}\r\n\r\n----\r\n\r\n= BUILDING AND INSTALLING BERKLEY DATABASE =\r\n\r\n\r\n{{{\r\n$ tar -xvf Berkleydb\r\n\r\n// Make sure that Openldap is compitable with berklet database version upto 4.8 not 5.0 or above\r\n\r\n$ cd Berkleydb\r\n$ cd build_unix\r\n\r\n$ ../dist/configure --prefix=/usr/local/bdb\r\n\r\n$ make\r\n$ make install\r\n\r\n$ echo /usr/local/bdb/lib >> /etc/ld.so.conf\r\n$ ldconfig\r\n\r\n}}}\r\n\r\nLDAP config script can\'t find the BDB database header files and library. So we have to export two variables CPPFLAGS & LDFLAGS.\r\n\r\n{{{\r\n$export CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"\r\n$export LDFLAGS=\"-L/usr/local/BerkeleyDB.4.8/lib\"\r\n}}}\r\n\r\n','',0),('LDAP',5,1322770274000000,'akshat','158.144.16.12','= LDAP =\r\n\r\n== Openldap Installation and Configuration ==\r\n\'\'\'Required Dependencies\'\'\'[[BR]]\r\nBefore installing OpenLDAP on the system following softwares packages needs to be installed. These packages are used by the OpenLDAP during and after the installation.[[BR]]\r\n\r\nBase system (libraries and tools):[[BR]]\r\nStandard C compiler (required)[[BR]]\r\nCyrus SASL 2.1.21+ (recommended)[[BR]]\r\nOpenSSL 0.9.7+ (recommended)[[BR]]\r\nReentrant POSIX REGEX software (required)[[BR]]\r\nSLAPD[[BR]]\r\nBDB and HDB backends require Oracle Berkeley DB 4.4, 4.5, 4.6, or 4.7.[[BR]]\r\n\r\n----\r\n\r\n\'\'\'Installation\'\'\'\r\n\r\n[[BR]]\r\n\r\n1. First the software is downloaded from OpenLDAP download page:\r\nhttp://www.openldap.org/software/download/\r\n\r\n[[BR]]\r\n\r\n2. Unpack the distribution : The .tar file is extracted at the required place.\r\n\r\n{{{\r\n$ gunzip -c openldap-VERSION.tgz — tar xvfB\r\n}}}\r\n\r\nthen change path to the distribution directory:\r\n\r\n{{{\r\n$ cd openldap-VERSION\r\n}}}\r\n\r\n[[BR]]\r\n\r\n3. Run configure : \r\n\r\n{{{\r\n$ ./configure\r\n}}}\r\n\r\n[[BR]]\r\n\r\n4. Build the software : Now the software will be built. It has two parts,\r\nfirst the dependencies are constructed and then we compile the software:\r\n\r\n{{{\r\n$ make depend\r\n$ make\r\n}}}\r\n\r\n[[BR]]\r\n\r\n5.Test the build : For checking the build process was correct we need to\r\nrun the test suite.\r\n\r\n{{{\r\n$ make test\r\n}}}\r\n\r\n[[BR]]\r\n\r\n6. Install the software : Now the software is installed with the super-user\r\nprivileges\r\n\r\n{{{\r\n$ su root -c make install\r\n}}}\r\n\r\n[[BR]]\r\n\r\n7. Edit the configuration file : Now the slapd.conf is edited which\r\nis usually located at /usr/local/etc/openldap/slapd.conf to contain a BDB\r\ndatabase definition of the following form:\r\n\r\n{{{\r\ninclude/usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/cosineschema\r\ninclude/usr/local/openldap/etc/openldap/schema/interorgperson.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/pmi.schema\r\npidfile /usr/local/openldap/var/run/slapd.pid\r\nargsfile /usr/local/openldap/var/run/slapd.args\r\ndatabase bdb\r\nsuffix ”dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootdn ”cn=Manager, dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootpw topsecret\r\ndirectory /usr/local/openldap/var/openldap−data\r\nindex\r\nobjectClass\r\neq\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n8. Start slapd : The LDAP server is started by running the command:\r\n\r\n{{{\r\n$ su root -c /usr/local/libexec/slapd\r\n}}}\r\n\r\nFor checking the server is running proprerly we will search the entries.\r\n\r\n{{{\r\nldapsearch -x -b ” -s base ’(objectclass=*)’\r\nThis should return:\r\ndn:namingContexts: dc=ncra,dc=tifr,dc=res,dc=in\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n9. Stopping Server : For stopping the server we need to kill the process id of slapd\r\n\r\n{{{\r\n$ kill -INT ‘cat /usr/local/openldap/var/run/slapd.pid‘\r\n}}}\r\n\r\n----\r\n\r\n= BUILDING AND INSTALLING BERKLEY DATABASE =\r\n\r\n\r\n{{{\r\n$ tar -xvf Berkleydb\r\n\r\n// Make sure that Openldap is compitable with berklet database version upto 4.8 not 5.0 or above\r\n\r\n$ cd Berkleydb\r\n$ cd build_unix\r\n\r\n$ ../dist/configure --prefix=/usr/local/bdb\r\n\r\n$ make\r\n$ make install\r\n\r\n$ echo /usr/local/bdb/lib >> /etc/ld.so.conf\r\n$ ldconfig\r\n\r\n}}}\r\n\r\nLDAP config script can\'t find the BDB database header files and library. So we have to export two variables CPPFLAGS & LDFLAGS.\r\n\r\n{{{\r\n$export CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"\r\n$export LDFLAGS=\"-L/usr/local/BerkeleyDB.4.8/lib\"\r\n\r\nOR\r\n\r\n$ CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"  \r\n$ export CPPFLAGS  \r\n$ LDFLAGS=\"-L/usr/local/lib -L/usr/local/BerkeleyDB.4.8/lib  -R/usr/local/BerkeleyDB.4.8/lib\"  \r\n$ export LDFLAGS  \r\n$ LD_LIBRARY_PATH=\"/usr/local/BerkeleyDB.4.8/lib\"  \r\n$ export LD_LIBRARY_PATH  \r\n}}}\r\n\r\n','',0),('LDAP',6,1322814558000000,'akshat','158.144.16.12','= LDAP =\r\n\r\n== Openldap Installation and Configuration ==\r\n\'\'\'Required Dependencies\'\'\'[[BR]]\r\nBefore installing OpenLDAP on the system following softwares packages needs to be installed. These packages are used by the OpenLDAP during and after the installation.[[BR]]\r\n\r\nBase system (libraries and tools):[[BR]]\r\nStandard C compiler (required)[[BR]]\r\nCyrus SASL 2.1.21+ (recommended)[[BR]]\r\nOpenSSL 0.9.7+ (recommended)[[BR]]\r\nReentrant POSIX REGEX software (required)[[BR]]\r\nSLAPD[[BR]]\r\nBDB and HDB backends require Oracle Berkeley DB 4.4, 4.5, 4.6, or 4.7.[[BR]]\r\n\r\n----\r\n\r\n\'\'\'Installation\'\'\'\r\n\r\n[[BR]]\r\n\r\n1. First the software is downloaded from OpenLDAP [http://www.openldap.org/software/download download page]\r\n\r\n[[BR]]\r\n\r\n2. Unpack the distribution : The .tar file is extracted at the required place.\r\n\r\n{{{\r\n$ gunzip -c openldap-VERSION.tgz — tar xvfB\r\n}}}\r\n\r\nthen change path to the distribution directory:\r\n\r\n{{{\r\n$ cd openldap-VERSION\r\n}}}\r\n\r\n[[BR]]\r\n\r\n3. Run configure : \r\n\r\n{{{\r\n$ ./configure\r\n}}}\r\n\r\n[[BR]]\r\n\r\n4. Build the software : Now the software will be built. It has two parts, first the dependencies are constructed and then we compile the software:\r\n\r\n{{{\r\n$ make depend\r\n$ make\r\n}}}\r\n\r\n[[BR]]\r\n\r\n5.Test the build : For checking the build process was correct we need to\r\nrun the test suite.\r\n\r\n{{{\r\n$ make test\r\n}}}\r\n\r\n[[BR]]\r\n\r\n6. Install the software : Now the software is installed with the super-user\r\nprivileges\r\n\r\n{{{\r\n$ su root -c make install\r\n}}}\r\n\r\n[[BR]]\r\n\r\n7. Edit the configuration file : Now the slapd.conf is edited which\r\nis usually located at /usr/local/etc/openldap/slapd.conf to contain a BDB\r\ndatabase definition of the following form:\r\n\r\n{{{\r\ninclude/usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/cosineschema\r\ninclude/usr/local/openldap/etc/openldap/schema/interorgperson.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/pmi.schema\r\npidfile /usr/local/openldap/var/run/slapd.pid\r\nargsfile /usr/local/openldap/var/run/slapd.args\r\ndatabase bdb\r\nsuffix ”dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootdn ”cn=Manager, dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootpw topsecret\r\ndirectory /usr/local/openldap/var/openldap−data\r\nindex\r\nobjectClass\r\neq\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n8. Start slapd : The LDAP server is started by running the command:\r\n\r\n{{{\r\n$ su root -c /usr/local/libexec/slapd\r\n}}}\r\n\r\nFor checking the server is running proprerly we will search the entries.\r\n\r\n{{{\r\nldapsearch -x -b ” -s base ’(objectclass=*)’\r\nThis should return:\r\ndn:namingContexts: dc=ncra,dc=tifr,dc=res,dc=in\r\n}}}\r\n\r\n\r\n[[BR]]\r\n\r\n9. Stopping Server : For stopping the server we need to kill the process id of slapd\r\n\r\n{{{\r\n$ kill -INT ‘cat /usr/local/openldap/var/run/slapd.pid‘\r\n}}}\r\n\r\n----\r\n\r\n= BUILDING AND INSTALLING BERKLEY DATABASE =\r\n\r\n\r\n{{{\r\n$ tar -xvf Berkleydb\r\n\r\n// Make sure that Openldap is compitable with berklet database version upto 4.8 not 5.0 or above\r\n\r\n$ cd Berkleydb\r\n$ cd build_unix\r\n\r\n$ ../dist/configure --prefix=/usr/local/bdb\r\n\r\n$ make\r\n$ make install\r\n\r\n$ echo /usr/local/bdb/lib >> /etc/ld.so.conf\r\n$ ldconfig\r\n\r\n}}}\r\n\r\nLDAP config script can\'t find the BDB database header files and library. So we have to export two variables CPPFLAGS & LDFLAGS.\r\n\r\n{{{\r\n$export CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"\r\n$export LDFLAGS=\"-L/usr/local/BerkeleyDB.4.8/lib\"\r\n\r\nOR\r\n\r\n$ CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"  \r\n$ export CPPFLAGS  \r\n$ LDFLAGS=\"-L/usr/local/lib -L/usr/local/BerkeleyDB.4.8/lib  -R/usr/local/BerkeleyDB.4.8/lib\"  \r\n$ export LDFLAGS  \r\n$ LD_LIBRARY_PATH=\"/usr/local/BerkeleyDB.4.8/lib\"  \r\n$ export LD_LIBRARY_PATH  \r\n}}}\r\n\r\n','',0),('LDAP',7,1325068240000000,'akshat','158.144.16.12','= LDAP =\r\n\r\n== Openldap Installation and Configuration ==\r\n\'\'\'Required Dependencies\'\'\'[[BR]]\r\nBefore installing OpenLDAP on the system following softwares packages needs to be installed. These packages are used by the OpenLDAP during and after the installation.[[BR]]\r\n\r\nBase system (libraries and tools):[[BR]]\r\nStandard C compiler (required)[[BR]]\r\nCyrus SASL 2.1.21+ (recommended)[[BR]]\r\nOpenSSL 0.9.7+ (recommended)[[BR]]\r\nReentrant POSIX REGEX software (required)[[BR]]\r\nSLAPD[[BR]]\r\nBDB and HDB backends require Oracle Berkeley DB 4.4, 4.5, 4.6, or 4.7.[[BR]]\r\n\r\n----\r\n\r\n== Installation ==\r\n\r\n\r\n1. First the software is downloaded from OpenLDAP [http://www.openldap.org/software/download download page]\r\n\r\n\r\n2. Unpack the distribution : The .tar file is extracted at the required place.\r\n\r\n{{{\r\n$ gunzip -c openldap-VERSION.tgz — tar xvfB\r\n}}}\r\n\r\nthen change path to the distribution directory:\r\n\r\n{{{\r\n$ cd openldap-VERSION\r\n}}}\r\n\r\n\r\n3. Run configure : \r\n\r\n{{{\r\n$ ./configure\r\n}}}\r\n\r\n\r\n4. Build the software : Now the software will be built. It has two parts, first the dependencies are constructed and then we compile the software:\r\n\r\n{{{\r\n$ make depend\r\n$ make\r\n}}}\r\n\r\n\r\n5.Test the build : For checking the build process was correct we need to\r\nrun the test suite.\r\n\r\n{{{\r\n$ make test\r\n}}}\r\n\r\n\r\n6. Install the software : Now the software is installed with the super-user privileges\r\n\r\n{{{\r\n$ su root -c make install\r\n}}}\r\n\r\n\r\n7. Edit the configuration file : Now the slapd.conf is edited which is usually located at /usr/local/etc/openldap/slapd.conf to contain a BDB database definition of the following form:\r\n\r\n{{{\r\ninclude/usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/cosineschema\r\ninclude/usr/local/openldap/etc/openldap/schema/interorgperson.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/pmi.schema\r\npidfile /usr/local/openldap/var/run/slapd.pid\r\nargsfile /usr/local/openldap/var/run/slapd.args\r\ndatabase bdb\r\nsuffix ”dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootdn ”cn=Manager, dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootpw topsecret\r\ndirectory /usr/local/openldap/var/openldap−data\r\nindex\r\nobjectClass\r\neq\r\n}}}\r\n\r\n\r\n8. Start slapd : The LDAP server is started by running the command:\r\n\r\n{{{\r\n$ su root -c /usr/local/libexec/slapd\r\n}}}\r\n\r\nFor checking the server is running proprerly we will search the entries.\r\n\r\n{{{\r\nldapsearch -x -b ” -s base ’(objectclass=*)’\r\nThis should return:\r\ndn:namingContexts: dc=ncra,dc=tifr,dc=res,dc=in\r\n}}}\r\n\r\n\r\n9. Stopping Server : For stopping the server we need to kill the process id of slapd\r\n\r\n{{{\r\n$ kill -INT ‘cat /usr/local/openldap/var/run/slapd.pid‘\r\n}}}\r\n\r\n----\r\n\r\n= BUILDING AND INSTALLING BERKLEY DATABASE =\r\n\r\n\r\n{{{\r\n$ tar -xvf Berkleydb\r\n\r\n// Make sure that Openldap is compitable with berklet database version upto 4.8 not 5.0 or above\r\n\r\n$ cd Berkleydb\r\n$ cd build_unix\r\n\r\n$ ../dist/configure --prefix=/usr/local/bdb\r\n\r\n$ make\r\n$ make install\r\n\r\n$ echo /usr/local/bdb/lib >> /etc/ld.so.conf\r\n$ ldconfig\r\n\r\n}}}\r\n\r\nLDAP config script can\'t find the BDB database header files and library. So we have to export two variables CPPFLAGS & LDFLAGS.\r\n\r\n{{{\r\n$export CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"\r\n$export LDFLAGS=\"-L/usr/local/BerkeleyDB.4.8/lib\"\r\n\r\nOR\r\n\r\n$ CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"  \r\n$ export CPPFLAGS  \r\n$ LDFLAGS=\"-L/usr/local/lib -L/usr/local/BerkeleyDB.4.8/lib  -R/usr/local/BerkeleyDB.4.8/lib\"  \r\n$ export LDFLAGS  \r\n$ LD_LIBRARY_PATH=\"/usr/local/BerkeleyDB.4.8/lib\"  \r\n$ export LD_LIBRARY_PATH  \r\n}}}\r\n\r\n','',0),('LDAP',8,1397143516980667,'admin','192.168.0.13','= LDAP =\r\n\r\n== Openldap Installation and Configuration ==\r\n\'\'\'Required Dependencies\'\'\'[[BR]]\r\nBefore installing OpenLDAP on the system following softwares packages needs to be installed. These packages are used by the OpenLDAP during and after the installation.[[BR]]\r\n\r\nBase system (libraries and tools):[[BR]]\r\nStandard C compiler (required)[[BR]]\r\nCyrus SASL 2.1.21+ (recommended)[[BR]]\r\nOpenSSL 0.9.7+ (recommended)[[BR]]\r\nReentrant POSIX REGEX software (required)[[BR]]\r\nSLAPD[[BR]]\r\nBDB and HDB backends require Oracle Berkeley DB 4.4, 4.5, 4.6, or 4.7.[[BR]]\r\n\r\n----\r\n\r\n== Installation ==\r\n\r\n\r\n1. First the software is downloaded from OpenLDAP [http://www.openldap.org/software/download download page]\r\n\r\n\r\n2. Unpack the distribution : The .tar file is extracted at the required place.\r\n\r\n{{{\r\n$ gunzip -c openldap-VERSION.tgz — tar xvfB\r\n}}}\r\n\r\nthen change path to the distribution directory:\r\n\r\n{{{\r\n$ cd openldap-VERSION\r\n}}}\r\n\r\n\r\n3. Run configure : \r\n\r\n{{{\r\n$ ./configure\r\n}}}\r\n\r\n\r\n4. Build the software : Now the software will be built. It has two parts, first the dependencies are constructed and then we compile the software:\r\n\r\n{{{\r\n$ make depend\r\n$ make\r\n}}}\r\n\r\n\r\n5.Test the build : For checking the build process was correct we need to\r\nrun the test suite.\r\n\r\n{{{\r\n$ make test\r\n}}}\r\n\r\n\r\n6. Install the software : Now the software is installed with the super-user privileges\r\n\r\n{{{\r\n$ su root -c make install\r\n}}}\r\n\r\n\r\n7. Edit the configuration file : Now the slapd.conf is edited which is usually located at /usr/local/etc/openldap/slapd.conf to contain a BDB database definition of the following form:\r\n\r\n{{{\r\ninclude/usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/cosineschema\r\ninclude/usr/local/openldap/etc/openldap/schema/interorgperson.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude/usr/local/openldap/etc/openldap/schema/pmi.schema\r\npidfile /usr/local/openldap/var/run/slapd.pid\r\nargsfile /usr/local/openldap/var/run/slapd.args\r\ndatabase bdb\r\nsuffix ”dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootdn ”cn=Manager, dc=ncra, dc=tifr, dc=res, dc=in”\r\nrootpw topsecret\r\ndirectory /usr/local/openldap/var/openldap−data\r\nindex\r\nobjectClass\r\neq\r\n}}}\r\n\r\n\r\n8. Start slapd : The LDAP server is started by running the command:\r\n\r\n{{{\r\n$ su root -c /usr/local/libexec/slapd\r\n}}}\r\n\r\nFor checking the server is running proprerly we will search the entries.\r\n\r\n{{{\r\nldapsearch -x -b ” -s base ’(objectclass=*)’\r\nThis should return:\r\ndn:namingContexts: dc=ncra,dc=tifr,dc=res,dc=in\r\n}}}\r\n\r\n\r\n9. Stopping Server : For stopping the server we need to kill the process id of slapd\r\n\r\n{{{\r\n$ kill -INT ‘cat /usr/local/openldap/var/run/slapd.pid‘\r\n}}}\r\n\r\n----\r\n\r\n= BUILDING AND INSTALLING BERKLEY DATABASE =\r\n\r\n\r\n{{{\r\n$ tar -xvf Berkleydb\r\n\r\n// Make sure that Openldap is compitable with berklet database version upto 4.8 not 5.0 or above\r\n\r\n$ cd Berkleydb\r\n$ cd build_unix\r\n\r\n$ ../dist/configure --prefix=/usr/local/bdb\r\n\r\n$ make\r\n$ make install\r\n\r\n$ echo /usr/local/bdb/lib >> /etc/ld.so.conf\r\n$ ldconfig\r\n\r\n}}}\r\n\r\nLDAP config script can\'t find the BDB database header files and library. So we have to export two variables CPPFLAGS & LDFLAGS.\r\n\r\n{{{\r\n$export CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"\r\n$export LDFLAGS=\"-L/usr/local/BerkeleyDB.4.8/lib\"\r\n\r\nOR\r\n\r\n$ CPPFLAGS=\"-I/usr/local/BerkeleyDB.4.8/include\"  \r\n$ export CPPFLAGS  \r\n$ LDFLAGS=\"-L/usr/local/lib -L/usr/local/BerkeleyDB.4.8/lib  -R/usr/local/BerkeleyDB.4.8/lib\"  \r\n$ export LDFLAGS  \r\n$ LD_LIBRARY_PATH=\"/usr/local/BerkeleyDB.4.8/lib\"  \r\n$ export LD_LIBRARY_PATH  \r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n','',0),('LDAPClient',1,1325073662000000,'akshat','158.144.16.12','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">OpenLDAP Client Configuration</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working. Now, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\nNow opem /usr/bin/system-config-authentication and apply the following settings\r\n\r\n[[Image(authconfig.png,200px,left)]]\r\n[[Image(authconfig2.png,200px,right)]]','',0),('LDAPClient',2,1325076247000000,'akshat','158.144.16.12','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">Configuring OpenLDAP Client Authentication</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working. Now, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\nNow opem /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,center)]]\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\nWe have chosen Password Hashing Algorithm as SHA.','',0),('LDAPClient',3,1325091976000000,'akshat','158.144.16.12','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\nNow opem /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,center)]]\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\nWe have chosen Password Hashing Algorithm as SHA.','',0),('LDAPClient',4,1325092006000000,'akshat','158.144.16.12','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\nNow opem /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,center)]]\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',5,1325177720000000,'akshat','158.144.16.12','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\nNow opem /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,center)]]\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',6,1326108412715732,'akshat','158.144.12.178','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\nNow opem /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,left)]]\r\n\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',7,1326274908340277,'johri','158.144.16.22','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\n/etc/sysconfig/authconfig\r\n\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\nNow open /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,left)]]\r\n\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',8,1326277203821724,'johri','158.144.16.22','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\n/etc/sysconfig/authconfig\r\n\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nNow open /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,left)]]\r\n\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',9,1326281363694326,'johri','158.144.16.22','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\n/etc/sysconfig/authconfig\r\n\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nNow open /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,left)]]\r\n\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\nMake sure in the /etc/nslcd.conf file ssl entry is no.\r\n\r\n{{{\r\n/etc/init.d/nslcd restart\r\n}}}\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',10,1326283000880887,'johri','158.144.16.22','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\n/etc/sysconfig/authconfig\r\n\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nNow open /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,left)]]\r\n\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\nMake sure in the /etc/nslcd.conf file ssl entry is no.\r\n\r\n{{{\r\n/etc/init.d/nslcd restart\r\n}}}\r\n\r\nThe Settings in authconfig-tui should be like this\r\n\r\n[[Image(authconfig-tui.png,450px,center)]]\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',11,1326284060173314,'akshat','158.144.16.22','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\n/etc/sysconfig/authconfig\r\n\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nNow open /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(authconfig.png,345px,left)]]\r\n\r\n[[Image(authconfig2.png,345px,center)]]\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\nMake sure in the /etc/nslcd.conf file ssl entry is no.\r\n\r\n{{{\r\n/etc/init.d/nslcd restart\r\n}}}\r\n\r\nThe Settings in authconfig-tui should be like this\r\n\r\n[[Image(authconfig-tui.png,450px,center)]]\r\n\r\n\r\n{{{\r\nStarting nslcd:                                            [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\nStopping nscd:                                             [  OK  ]\r\n}}}\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',12,1397143438566976,'admin','192.168.0.13','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\n/etc/sysconfig/authconfig\r\n\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nNow open /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(/chrome/site/LDAPClient/authconfig.png,345px,left)]]\r\n\r\n[[Image(/chrome/site/LDAPClient/authconfig2.png,345px,center)]]\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\nMake sure in the /etc/nslcd.conf file ssl entry is no.\r\n\r\n{{{\r\n/etc/init.d/nslcd restart\r\n}}}\r\n\r\nThe Settings in authconfig-tui should be like this\r\n\r\n[[Image(/chrome/site/LDAPClient/authconfig-tui.png,450px,center)]]\r\n\r\n\r\n{{{\r\nStarting nslcd:                                            [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\nStopping nscd:                                             [  OK  ]\r\n}}}\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n','',0),('LDAPClient',13,1397143500388824,'admin','192.168.0.13','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\n/etc/sysconfig/authconfig\r\n\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nNow open /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(/chrome/site/LDAPClient/authconfig.png,345px,left)]]\r\n\r\n[[Image(/chrome/site/LDAPClient/authconfig2.png,345px,center)]]\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\nMake sure in the /etc/nslcd.conf file ssl entry is no.\r\n\r\n{{{\r\n/etc/init.d/nslcd restart\r\n}}}\r\n\r\nThe Settings in authconfig-tui should be like this\r\n\r\n[[Image(/chrome/site/LDAPClient/authconfig-tui.png,450px,center)]]\r\n\r\n\r\n{{{\r\nStarting nslcd:                                            [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\nStopping nscd:                                             [  OK  ]\r\n}}}\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('LDAPClient',14,1397144514079248,'admin','192.168.0.13','{{{\r\n#!html\r\n<h2 style=\"text-align: Center; color: #A52A2A\">CONFIGURING OpenLDAP CLIENT AUTHENTICATION</h2>\r\n<h2 style=\"text-align: left; color: #191970\">For RHEL 6</h2>\r\n}}}\r\n\r\nIn order to get user names, groups and other information that is usually stored in flat files in /etc or NIS from an LDAP server. This information is exposed through NSS (Name Services Switch) as configured in /etc/nsswitch.conf\r\n\r\n=== Install the Necessary LDAP Packages ===\r\n\r\nFirst, we must make sure that the appropriate packages are installed on both the LDAP server and the LDAP client machines. The LDAP server needs the openldap-servers package. The openldap, openldap-clients, and nss_ldap packages need to be installed on all LDAP client machines. For RHEL6 Install the following RPMs which are stored on the data area of the machine:\r\n\r\n1. nss-pam-ldapd-0.7.5-7.el6.x86_64.rpm\r\n\r\n\'\'\'Supporting Libraries needed\'\'\'\r\n\r\n1. nscd-2.12-1.25.el6.x86_64.rpm\r\n\r\n2. pam_ldap-185-8.el6.x86_64.rpm\r\n\r\nWhen these packages are successfully installed on the system we need to edit certain configuration files to make the LDAP Client working.\r\n\r\n== Nss_ldap ==\r\nIn the C library to control the location of the information to be searched Name Service Switch (NSS) is used by various functions. The configuration\r\nfile is stored at the location/etc/nsswitch.conf, and it is responsible for specifying the sources for databases and their lookup order. PADL’s nss ldap is needed for allowing these databases to use LDAP which provides a source to use in nsswitch.conf which queries for LDAP. Here the LDAP is queried first then to files and then finally to NIS/NIS+. For using user accounts and passwords from LDAP the nsswitch.conf is configured like this:\r\n\r\n{{{\r\npasswd:     files ldap\r\nshadow:     files ldap\r\ngroup:      files ldap\r\n}}}\r\n\r\nNow, edit the following file :\r\n\r\n{{{\r\nvim /etc/ldap.conf\r\n\r\nbase dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nuri ldap://mutha.ncra.tifr.res.in/\r\nrootbinddn cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nbind_policy soft\r\npam_password exop\r\n}}}\r\n\r\nIn the following file:\r\n\r\n{{{\r\n/etc/sysconfig/authconfig\r\n\r\nCHANGE \r\nFORCELEGACY=no TO FORCELEGACY=yes\r\n}}}\r\n\r\nNow edit the /usr/local/openldap/etc/openldap/ldap.conf file:\r\n\r\n{{{\r\nBASE    dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\r\nURI     ldap://mutha.ncra.tifr.res.in\r\n\r\nSIZELIMIT       0\r\nTIMELIMIT       0\r\nDEREF           never\r\n}}}\r\n\r\nNow issue the following command:\r\n\r\n{{{\r\nauthconfig --enableldap --enableldapauth --enablemkhomedir --ldapserver=mutha.ncra.tifr.res.in --ldapbasedn=\"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\" --update\r\n}}}\r\n\r\nNow open /usr/bin/system-config-authentication and apply the following settings:\r\n\r\n[[Image(htdocs:LDAPClient/authconfig.png,345px,left)]]\r\n\r\n[[Image(htdocs:LDAPClient/authconfig2.png,345px,center)]]\r\n\r\nYou can see the following output on its succesful execution of the command:\r\n\r\n{{{\r\nStarting sssd:                                             [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\n}}}\r\n\r\n----\r\nWe have chosen Password Hashing Algorithm as SHA.\r\n\r\nThe configuration of slapd.conf file should be:\r\n\r\n{{{\r\ninclude         /usr/local/openldap/etc/openldap/schema/core.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/cosine.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/inetorgperson.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/nis.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/ppolicy.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/java.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/opensso.schema\r\ninclude         /usr/local/openldap/etc/openldap/schema/pmi.schema\r\n\r\npidfile         /usr/local/openldap/var/run/slapd.pid\r\nargsfile        /usr/local/openldap/var/run/slapd.args\r\n\r\npassword-hash   {SSHA}password\r\naccess to attrs=userPassword\r\n       by self write\r\n       by anonymous auth\r\n       by * none\r\naccess to *\r\n       by self write\r\n       by * read\r\n#######################################################################\r\n# BDB database definitions\r\n#######################################################################\r\n\r\ndatabase        bdb\r\nsuffix          \"dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\nrootdn          \"cn=manager,dc=mutha,dc=ncra,dc=tifr,dc=res,dc=in\"\r\n\r\nrootpw          {SSHA}ptACJTv7VbnpgZDrznGykPtLM9rwS1JO\r\n\r\ndirectory       /usr/local/openldap/var/openldap-data\r\n# Indices to maintain\r\nindex   objectClass     eq\r\n\r\n}}}\r\n\r\nMake sure in the /etc/nslcd.conf file ssl entry is no.\r\n\r\n{{{\r\n/etc/init.d/nslcd restart\r\n}}}\r\n\r\nThe Settings in authconfig-tui should be like this\r\n\r\n[[Image(htdocs:LDAPClient/authconfig-tui.png,450px,center)]]\r\n\r\n\r\n{{{\r\nStarting nslcd:                                            [  OK  ]\r\nStarting oddjobd:                                          [  OK  ]\r\nStopping nscd:                                             [  OK  ]\r\n}}}\r\n\r\n\r\nNow, finally reboot the system!!\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('LinuxCommands',1,1402056565736021,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',2,1402477816690964,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',3,1402567112284966,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',4,1404885507852432,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print\r\n}}}\r\n\r\n\r\n=== 5. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',5,1404906604619032,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 5. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',6,1405347228727722,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 5. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',7,1406009971055999,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',8,1408432056409257,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n\r\n=== 7. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',9,1409035141320303,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',10,1409047612093917,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',11,1409118688564692,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',12,1410503721904700,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',13,1410505728450645,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',14,1411550282464622,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',15,1415705265542854,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n\r\n}}}\r\n\r\n\r\n=== 19. Tar Options ===\r\n\r\n{{{\r\nOnly include files no subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files .\r\n=> -C option will change the directory to that level \r\n\r\nInclude files from a list and do not include subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n\r\nExclude files from a list and do not include subdirectories and include files from a list\r\n$ tar -zcvf ~/Desktop/aks.tar -X /tmp/ExcludeList.txt -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',16,1416905565702402,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n\r\n}}}\r\n\r\n\r\n=== 19. Tar Options ===\r\n\r\n{{{\r\nOnly include files no subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files .\r\n=> -C option will change the directory to that level \r\n\r\nInclude files from a list and do not include subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n\r\nExclude files from a list and do not include subdirectories and include files from a list\r\n$ tar -zcvf ~/Desktop/aks.tar -X /tmp/ExcludeList.txt -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n}}}\r\n\r\n=== 20. ls command to show full path ===\r\n{{{\r\n$ ls -lrt -d -1 $PWD/{*,.*}\r\n\r\nOR\r\n\r\nls -lrt -d -1 $PWD/*\r\n\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',17,1416905585810373,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n\r\n}}}\r\n\r\n\r\n=== 19. Tar Options ===\r\n\r\n{{{\r\nOnly include files no subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files .\r\n=> -C option will change the directory to that level \r\n\r\nInclude files from a list and do not include subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n\r\nExclude files from a list and do not include subdirectories and include files from a list\r\n$ tar -zcvf ~/Desktop/aks.tar -X /tmp/ExcludeList.txt -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n}}}\r\n\r\n=== 20. ls command to show full path ===\r\n{{{\r\n$ ls -lrt -d -1 $PWD/{*,.*}\r\n\r\nOR\r\n\r\n$ ls -lrt -d -1 $PWD/*\r\n\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',18,1417103746352691,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk command to print from a specific column to last column ===\r\n\r\n{{{\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n\r\n}}}\r\n\r\n\r\n=== 19. Tar Options ===\r\n\r\n{{{\r\nOnly include files no subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files .\r\n=> -C option will change the directory to that level \r\n\r\nInclude files from a list and do not include subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n\r\nExclude files from a list and do not include subdirectories and include files from a list\r\n$ tar -zcvf ~/Desktop/aks.tar -X /tmp/ExcludeList.txt -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n}}}\r\n\r\n=== 20. ls command to show full path ===\r\n{{{\r\n$ ls -lrt -d -1 $PWD/{*,.*}\r\n\r\nOR\r\n\r\n$ ls -lrt -d -1 $PWD/*\r\n\r\n}}}\r\n\r\n=== 21. Remove all the blank lines from a file ===\r\n\r\n{{{\r\nRemove blank lines using sed\r\n$ sed \'/^$/d\' input.txt > output.txt\r\n\r\nRemove blank lines using grep\r\n$ grep -v \'^$\' input.txt > output.txt\r\n\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',19,1417104911160137,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk commands ===\r\n\r\n{{{\r\nTo print from a specific column to last column\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n\r\nTo insert a new column  before the 1st column and adding text after the 1st column.\r\n$ awk -F\" \" \'{$1=\"OnlineID=\" FS $1 \" OR \";}1\' OFS=\"\" c.txt > akshat.txt\r\n\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n\r\n}}}\r\n\r\n\r\n=== 19. Tar Options ===\r\n\r\n{{{\r\nOnly include files no subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files .\r\n=> -C option will change the directory to that level \r\n\r\nInclude files from a list and do not include subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n\r\nExclude files from a list and do not include subdirectories and include files from a list\r\n$ tar -zcvf ~/Desktop/aks.tar -X /tmp/ExcludeList.txt -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n}}}\r\n\r\n=== 20. ls command to show full path ===\r\n{{{\r\n$ ls -lrt -d -1 $PWD/{*,.*}\r\n\r\nOR\r\n\r\n$ ls -lrt -d -1 $PWD/*\r\n\r\n}}}\r\n\r\n=== 21. Remove all the blank lines from a file ===\r\n\r\n{{{\r\nRemove blank lines using sed\r\n$ sed \'/^$/d\' input.txt > output.txt\r\n\r\nRemove blank lines using grep\r\n$ grep -v \'^$\' input.txt > output.txt\r\n\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',20,1417185063469974,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk commands ===\r\n\r\n{{{\r\nTo print from a specific column to last column\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n\r\nTo insert a new column  before the 1st column and adding text after the 1st column.\r\n$ awk -F\" \" \'{$1=\"OnlineID=\" FS $1 \" OR \";}1\' OFS=\"\" c.txt > akshat.txt\r\n\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n\r\n}}}\r\n\r\n\r\n=== 19. Tar Options ===\r\n\r\n{{{\r\nOnly include files no subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files .\r\n=> -C option will change the directory to that level \r\n\r\nInclude files from a list and do not include subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n\r\nExclude files from a list and do not include subdirectories and include files from a list\r\n$ tar -zcvf ~/Desktop/aks.tar -X /tmp/ExcludeList.txt -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n}}}\r\n\r\n=== 20. ls command to show full path ===\r\n{{{\r\n$ ls -lrt -d -1 $PWD/{*,.*}\r\n\r\nOR\r\n\r\n$ ls -lrt -d -1 $PWD/*\r\n\r\n}}}\r\n\r\n=== 21. Remove all the blank lines from a file ===\r\n\r\n{{{\r\nRemove blank lines using sed\r\n$ sed \'/^$/d\' input.txt > output.txt\r\n\r\nRemove blank lines using grep\r\n$ grep -v \'^$\' input.txt > output.txt\r\n\r\n}}}\r\n\r\n\r\n=== 22. Command to convert multiple rows to a single row ===\r\n{{{\r\n$ paste -d\" \" -s file.txt\r\n}}}\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',21,1417185136772753,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. Command to exclude directories from listing on stdout and display only files ===\r\n\r\n{{{\r\n$ ls -l |egrep -v \'^d\'\r\n}}}\r\n\r\n=== 8. awk commands ===\r\n\r\n{{{\r\nTo print from a specific column to last column\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n\r\nTo insert a new column  before the 1st column and adding text after the 1st column.\r\n$ awk -F\" \" \'{$1=\"OnlineID=\" FS $1 \" OR \";}1\' OFS=\"\" c.txt > akshat.txt\r\n\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n\r\n}}}\r\n\r\n\r\n=== 19. Tar Options ===\r\n\r\n{{{\r\nOnly include files no subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files .\r\n=> -C option will change the directory to that level \r\n\r\nInclude files from a list and do not include subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n\r\nExclude files from a list and do not include subdirectories and include files from a list\r\n$ tar -zcvf ~/Desktop/aks.tar -X /tmp/ExcludeList.txt -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n}}}\r\n\r\n=== 20. ls command to show full path ===\r\n{{{\r\n$ ls -lrt -d -1 $PWD/{*,.*}\r\n\r\nOR\r\n\r\n$ ls -lrt -d -1 $PWD/*\r\n\r\n}}}\r\n\r\n=== 21. Remove all the blank lines from a file ===\r\n\r\n{{{\r\nRemove blank lines using sed\r\n$ sed \'/^$/d\' input.txt > output.txt\r\n\r\nRemove blank lines using grep\r\n$ grep -v \'^$\' input.txt > output.txt\r\n\r\n}}}\r\n\r\n\r\n=== 22. Command to convert multiple rows to a single row ===\r\n{{{\r\n$ paste -d\" \" -s file.txt\r\n\r\n-d  -> Delimiter\r\n-s  -> Concatenate all of the lines of each separate input file in command line order.\r\n\r\n}}}\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('LinuxCommands',22,1419663936025772,'akshat','192.168.0.18','== Linux Commands ==\r\n\r\n[[Image(Tux.png,180px,right)]]\r\n\r\n=== 1. SSH ===\r\nIf we are stucked in giving the passphrase again and again even we have have copied our public key to the remote host then check ssh-agent service is running or not.\r\n\r\n{{{\r\n$ eval `ssh-agent`\r\n\r\n$ ssh-add ~/.ssh/id_rsa\r\n\r\n}}}\r\n\r\n\r\n=== 2. Skipping FIRST n number of lines from output ===\r\nFor Skipping a particular number of lines from top, use\r\n\r\n{{{\r\n$ tail -n+<First line to Print> <filename>\r\n}}}\r\n\r\n\r\n=== 3. Skipping LAST n number of lines from output ===\r\nFor Skipping a particular number of lines from end, use\r\n\r\n{{{\r\n$ head -n-<First line to Print> <filename>\r\n\r\nOR\r\n\r\n# Delete the last 10 lines of a file\r\nsed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\nsed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n\r\n}}}\r\n\r\n=== 4. Command to find Public IP ===\r\n\r\n{{{\r\n$ curl ifconfig.me\r\n}}}\r\n\r\n=== 5. awk one liners ===\r\nFor printing the path by skipping the some n level of directory separated by the delimiter.\r\n\r\n{{{\r\n awk -F\"/\" \'{delim = \"/\"; for (i=n;i<=NF-1;i++) {printf delim \"%s\", $i\"/\"; delim = OFS}; printf \"\\n\"}\'  filename.txt\r\n}}}\r\n\r\nFor substituting something globally.\r\n\r\n{{{\r\nawk \'{gsub(\"/ \",\"/\",$0)\'; print filename.txt\r\n}}}\r\n\r\nFor filtering some files path based on their file extensions.\r\n\r\n{{{\r\nawk \'/\\.txt/ || /\\.avi/\' filename.txt\r\n}}}\r\n\r\n\r\n=== 6. Sed one liners ===\r\nFor substituting something globally.\r\n\r\n{{{\r\nsed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n=== 7. egrep commands ===\r\n\r\n{{{\r\nTo exclude directories from listing on stdout and display only files\r\n$ ls -l |egrep -v \'^d\'\r\n\r\n\r\nRemove comments & blank lines from a config file for ease of reading at the terminal\r\n$ egrep -v \"^#|^$\" file\r\n\r\n}}}\r\n\r\n=== 8. awk commands ===\r\n\r\n{{{\r\nTo print from a specific column to last column\r\n$ awk \'{print substr($0, index($0,$5))}\' filename.txt\r\n\r\nTo insert a new column  before the 1st column and adding text after the 1st column.\r\n$ awk -F\" \" \'{$1=\"OnlineID=\" FS $1 \" OR \";}1\' OFS=\"\" c.txt > akshat.txt\r\n\r\n}}}\r\n\r\n=== 9. Find total number of rows in file ===\r\n\r\n{{{\r\n$ wc -l filename\r\n\r\nOR\r\n\r\n$ grep -c ^ filename\r\n\r\nOR\r\n\r\n$ cat -n filename\r\n\r\n}}}\r\n\r\n=== 10. Mounting a Host Directory on Virtual Machine ===\r\nIn order to use shared folder functionality few prerequisites need to be met:\r\n\r\n1. Make sure that Guest Additions are properly installed on the guest OS.\r\n\r\n2. Users in a guest Ubuntu must be in the group vboxsf to be able to access shares.\r\n\r\n3. Define a directory on the host that will be used in the virtual machine using the settings dialogue of Virtual Box.\r\n\r\n4. Avoid special characters or empty spaces in the path to the shared folder\r\n\r\n5. Use different names for share and mountpoint\r\n\r\n6. Create a mountpoint on the guest OS (best in your HOME directory).\r\n\r\n{{{\r\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 Desktop /home/akshat/Mac/\r\n\r\nHere Desktop of Mac is mounted in the virtual Machine\'s home directory\'s Mac folder.\r\n\r\n}}}\r\n\r\n=== 11. Display coloured man pages ===\r\n{{{\r\n$ sudo apt-get install most\r\n\r\nAfter that set the PAGER variable\r\n$ export PAGER=\"most\"\r\n\r\n}}}\r\n\r\n\r\n=== 12. Recording and playing back the terminal session ===\r\nIt is done by using the command \'\'\'script\'\'\' and \'\'\'scriptreplay\'\'\'\r\n\r\nTo start recording a terminal session use the following command:\r\n{{{\r\n$ script -t 2> timing.log -a output.session\r\n}}}\r\n\r\nHere the script command takes two files as the argument timing.log (which stores information on the time at which command is run) and output.session (which stores output of the commands).\r\n\r\nThen type in command what you want to record:\r\n{{{\r\n$ ls\r\n$ touch test\r\n.......\r\n.............\r\n..................\r\n\r\n$ exit\r\n\r\n}}}\r\n\r\nNow, playback the recorded session using \'\'\'scriptreplay\'\'\' command:\r\n{{{\r\n$ scriptreplay timing.log output.session\r\n}}}\r\n\r\n\r\n=== 13. Start your job at a specific time [at command] ===\r\n\r\n{{{\r\n$ at 2015\r\n\r\n>>> vlc /home/akshat/music/akshat.mp3\r\n\r\n}}}\r\n\r\nThis command will start playing akshat.mp3 using vlc at 2015 hours.\r\n\r\nFor checking pending jobs option -l is used.\r\n{{{\r\n$ at -l\r\n}}}\r\n\r\n\r\n=== 14. Update .bashrc without restarting terminal ===\r\n\r\n{{{\r\n$ source .bashrc\r\n}}}\r\n\r\n=== 15. Convert WSDL to java classes ===\r\n\r\n{{{\r\n$ wsimport /path/to/wsdl/\r\n}}}\r\n\r\n\r\n=== 16. Mounting virtualbox shared folder in the guest OS ===\r\n\r\n{{{\r\n$ sudo mount -t vboxsf Desktop /home/akshat/Mac/\r\n}}}\r\n\r\n\r\n=== 17. Check the last executed command exited with error or success===\r\n\r\n{{{\r\n$ $?\r\n\r\n0       - Success\r\n1 or >1 - Failed\r\n\r\n}}}\r\n\r\n\r\n=== 18. Mounting a filesystem===\r\n\r\n{{{\r\nSyntax:\r\n[$ mount -t filesystem partition mountpoint]\r\n\r\nExample: For mounting a btrfs filesystem at /mnt/btrfs mountpoint having partition on /dev/sda2\r\n$ mount -t btrfs /dev/sda2 /mnt/btrfs\r\n\r\n}}}\r\n\r\n\r\n=== 19. Tar Options ===\r\n\r\n{{{\r\nOnly include files no subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files .\r\n=> -C option will change the directory to that level \r\n\r\nInclude files from a list and do not include subdirectories\r\n$ tar -zcvf ~/Desktop/aks.tar -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n\r\nExclude files from a list and do not include subdirectories and include files from a list\r\n$ tar -zcvf ~/Desktop/aks.tar -X /tmp/ExcludeList.txt -C /home/akshat/Dir1/Dir2/files -T ~/Desktop/File.txt\r\n\r\n}}}\r\n\r\n=== 20. ls command to show full path ===\r\n{{{\r\n$ ls -lrt -d -1 $PWD/{*,.*}\r\n\r\nOR\r\n\r\n$ ls -lrt -d -1 $PWD/*\r\n\r\n}}}\r\n\r\n=== 21. Remove all the blank lines from a file ===\r\n\r\n{{{\r\nRemove blank lines using sed\r\n$ sed \'/^$/d\' input.txt > output.txt\r\n\r\nRemove blank lines using grep\r\n$ grep -v \'^$\' input.txt > output.txt\r\n\r\n}}}\r\n\r\n\r\n=== 22. Command to convert multiple rows to a single row ===\r\n{{{\r\n$ paste -d\" \" -s file.txt\r\n\r\n-d  -> Delimiter\r\n-s  -> Concatenate all of the lines of each separate input file in command line order.\r\n\r\n}}}\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Lucene',1,1418887548948759,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Lucene References</h2>\r\n}}}\r\n\r\n[[Image(Lucene.png,360px,right)]]\r\n\r\n== Lucene New Features ==\r\n=== Grouping ===\r\n\r\n\r\n\r\n\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Lucene',2,1418893620558681,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Apache Lucene</h2>\r\n}}}\r\n\r\n[[Image(Lucene.png,360px,right)]]\r\n\r\nLucene is an open source java based search library. Lucene is very popular and fast search library used in java based application to add document search capability to any kind of application in a very simple and efficient way.\r\n\r\n== Lucene New Features ==\r\n=== Grouping ===\r\n[Released with Lucene 3.2] It allows to group search results by specified field. For example, if we group by the author field, then all documents with the same value in the author field fall into a single group. It will have a kind of tree as output.\r\n\r\n=== Faceting ===\r\n[Released with Lucene 3.4] This feature doesn\'t group documents, it just tells you how many documents fall in a specific value of a facet. For example, if we have a facet based on the author field, we will receive a list of all authors, and for each author we will know how many documents belong to that specific author. After that if we want to see those documents, we have to query one more time adding a specific filter (author=whatever). The faceted search is in fact based on browsing documents applying multiple filters to progressively reach the documents we are really interested in.\r\n\r\n\r\n=== Highlighter ===\r\n[Released with Lucene 2.4] A highlighter outputs a text fragment of the document containing search terms in bold. For example of what the Lucene Highlighter can do, when we search for ‘queue’ in an index of PDF documents.\r\n\r\n\r\ne14510.pdf[[BR]]\r\nOracle Coherence Getting Started Guide[[BR]]\r\nof the ways that Coherence can eliminate bottlenecks is to \'\'\'queue\'\'\' up transactions that have occurred…[[BR]]\r\nduration of an item within the \'\'\'queue\'\'\' is configurable, and is referred to as the Write-Behind Delay. When data changes, it is added to the write-behind \'\'\'queue\'\'\' (if it is not already in the \'\'\'queue\'\'\'), and the \'\'\'queue\'\'\' entry is set to ripen after the configured Write-Behind Delay has passed…\r\n\r\n\r\n=== Codecs ===\r\n[Released with Lucene 4.2] \r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Lucene',3,1418907620411088,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Apache Lucene</h2>\r\n}}}\r\n\r\n[[Image(Lucene.png,360px,right)]]\r\n\r\nLucene is an open source java based search library. Lucene is very popular and fast search library used in java based application to add document search capability to any kind of application in a very simple and efficient way.\r\n\r\n== Lucene New Features ==\r\n=== Grouping ===\r\n[Released with Lucene 3.2] It allows to group search results by specified field. For example, if we group by the author field, then all documents with the same value in the author field fall into a single group. It will have a kind of tree as output.\r\n\r\n[[BR]]\r\n=== Faceting ===\r\n[Released with Lucene 3.4] This feature doesn\'t group documents, it just tells you how many documents fall in a specific value of a facet. For example, if we have a facet based on the author field, we will receive a list of all authors, and for each author we will know how many documents belong to that specific author. After that if we want to see those documents, we have to query one more time adding a specific filter (author=whatever). The faceted search is in fact based on browsing documents applying multiple filters to progressively reach the documents we are really interested in.\r\n[http://lucene.apache.org/core/4_2_0/facet/org/apache/lucene/facet/doc-files/userguide.html Reference]\r\n\r\n\r\n[[BR]]\r\n=== Highlighter ===\r\n[Released with Lucene 2.4] A highlighter outputs a text fragment of the document containing search terms in bold. For example of what the Lucene Highlighter can do, when we search for ‘queue’ in an index of PDF documents.\r\n[http://hrycan.com/2009/10/25/lucene-highlighter-howto/ Reference]\r\n\r\ne14510.pdf[[BR]]\r\nOracle Coherence Getting Started Guide[[BR]]\r\nof the ways that Coherence can eliminate bottlenecks is to \'\'\'queue\'\'\' up transactions that have occurred…[[BR]]\r\nduration of an item within the \'\'\'queue\'\'\' is configurable, and is referred to as the Write-Behind Delay. When data changes, it is added to the write-behind \'\'\'queue\'\'\' (if it is not already in the \'\'\'queue\'\'\'), and the \'\'\'queue\'\'\' entry is set to ripen after the configured Write-Behind Delay has passed…\r\n\r\n[[BR]]\r\n=== Queries ===\r\nFilters and Queries that add to core Lucene.\r\n\r\nExample : \'\'\'!DocValues\'\'\'\r\n[Released with Lucene 4.0] They are the means to associate a value for each document. We can have multiple !DocValues per document. Later on, we can retrieve the value associated with a specific document. All stored fields of a single document are meant to be loaded together (for example, when we need to display the document as a search result), !DocValues are meant to be loaded at once for all documents.\r\n[http://www.norconex.com/facets-with-lucene/ Reference]\r\n\r\n[[BR]]\r\n=== Query Parser ===\r\nQuery parsers and parsing framework. This module provides a number of queryparsers:\r\n\r\n\'\'\'Classic\'\'\' : A Simple Lucene !QueryParser implemented with JavaCC.\r\n\r\n\'\'\'Analyzing\'\'\' : !QueryParser that passes Fuzzy-, Prefix-, Range-, and !WildcardQuerys through the given analyzer.\r\n\r\n\'\'\'Complex Phrase\'\'\' : !QueryParser which permits complex phrase query syntax eg \"(john jon jonathan~) peters*\"\r\n\r\n\'\'\'Extendable\'\'\' : Extendable !QueryParser provides a simple and flexible extension mechanism by overloading query field names.\r\n\r\n\'\'\'Flexible\'\'\' : This project contains the new Lucene query parser implementation, which matches the syntax of the core !QueryParser but offers a more modular architecture to enable customization.\r\n\r\n\'\'\'Surround\'\'\' : A !QueryParser that supports the Span family of queries as well as pre and infix notation.\r\n\r\n\'\'\'XML\'\'\' : A !QueryParser that produces Lucene Query objects from XML streams.\r\n\r\n[http://lucene.apache.org/core/4_0_0/queryparser/index.html Reference]\r\n\r\n\r\n[[BR]]\r\n=== Codecs ===\r\n[Released with Lucene 4.0] It allows for the modification of Lucene’s underlying storage engine. The centerpiece of a Lucene codec is it’s postings format. Postings are a commonly thrown around word in the Lucene space. A Postings format is the representation of the inverted search index – the core data structure used to lookup documents that contain a term. Example:\r\n\r\n{{{\r\n[Sample Document]\r\n\r\ndoc0:\r\nauthor: Doug Turnbull\r\ntext: where oh where are my Unicorns!\r\ndoc1:\r\nauthor: Scott Stults\r\ntext: Unicorns! Unicorns! \r\n\r\n[After running whitespace analyzer]\r\nfield author\r\n  term Doug\r\n    doc 0\r\n      freq 1\r\n      pos 0\r\n  term Scott\r\n    doc 1\r\n      freq 1\r\n      pos 0\r\n  term Stults\r\n    doc 1\r\n      freq 1\r\n      pos 1\r\n  term Turnbull\r\n    doc 0\r\n      freq 1\r\n      pos 1\r\nfield text\r\n  term Unicorns!\r\n    doc 0\r\n      freq 1\r\n      pos 5\r\n    doc 1\r\n      freq 2\r\n      pos 0\r\n      pos 1\r\n  term are\r\n    doc 0\r\n      freq 1\r\n      pos 3\r\n  term my\r\n    doc 0\r\n      freq 1\r\n      pos 4\r\n  term oh\r\n    doc 0\r\n      freq 1\r\n      pos 1\r\n  term where\r\n    doc 0\r\n      freq 2\r\n      pos 0\r\n      pos 2\r\nEND\r\n\r\n}}}\r\nThe text of our documents reorganized into something like an an index in the back of a book which is refered to as an “inverted index”. After our text gets tokenized into terms, the resulting terms form the key to the inverted index data structure. Instead of the document pointing to a series of terms, a term points to a list of the documents that contain it. This is what makes the index “inverted”. Now when we search a field, we can simply take a search term, look in the inverted index for that term, and retrieve a list of documents that contain that term.\r\n\r\n[http://opensourceconnections.com/blog/2013/05/20/how-does-a-search-engine-work-an-educational-trek-through-a-lucene-postings-format/ Reference]\r\n\r\n[[BR]]\r\n=== Join ===\r\nThis modules support index-time and query-time joins.\r\n[http://lucene.apache.org/core/4_0_0/join/index.html Reference]\r\n\r\n[[BR]]\r\n=== Spatial ===\r\nThis is a general purpose geospatial library largely centered around a set of shapes and related input/output and distance calculations.\r\n\r\n\r\n[[BR]]\r\n=== Sandbox ===\r\nVarious third party contributions and new ideas like regular expression query, Filter to remove duplicate values from search results etc.\r\n\r\n[[BR]]\r\n=== Memory ===\r\nHigh-performance single-document main memory Apache Lucene fulltext search index.\r\n\r\n[[BR]]\r\n=== Suggest ===\r\nSuggest alternate spellings for words, autocomplete, Ternary Search Tree based autosuggest.\r\n\r\n----\r\n=== References ===\r\n[http://oak.cs.ucla.edu/cs144/projects/lucene/ Introduction to Lucene][[BR]]\r\n[http://www.tutorialspoint.com/lucene/lucene_indexing_classes.htm Tutorials Point][[BR]]\r\n[http://lucene.apache.org/core/4_2_0/facet/org/apache/lucene/facet/doc-files/userguide.html Facet Queries][[BR]]\r\n[http://www.norconex.com/facets-with-lucene/ DocValues Query][[BR]]\r\n[http://hrycan.com/2009/10/25/lucene-highlighter-howto/ Highlighter][[BR]]\r\n[http://lucene.apache.org/core/4_0_0/ Java Docs][[BR]]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('MacCommands',1,1410501980530450,'akshat','192.168.0.18','== Mac Commands ==\r\n\r\n[[Image(Mac.png,180px,right)]]\r\n\r\n=== 1. Taking Screenshot ===\r\n\r\n{{{\r\n$ Command + Shift + 3\r\n}}}\r\n\r\n\r\n=== 2. Restart Virtualbox ===\r\n\r\n{{{\r\n$ sudo /Library/StartupItems/VirtualBox/VirtualBox restart\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('MacCommands',2,1410502322806780,'akshat','192.168.0.18','== Mac Commands ==\r\n\r\n[[Image(apple.jpg,125px,right)]]\r\n\r\n=== 1. Taking Screenshot ===\r\n\r\n{{{\r\n$ Command + Shift + 3\r\n}}}\r\n\r\n\r\n=== 2. Restart Virtualbox ===\r\n\r\n{{{\r\n$ sudo /Library/StartupItems/VirtualBox/VirtualBox restart\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Mailman',1,1297333831000000,'akshat','158.144.16.12','==Mailman==','',0),('Mailman',2,1297333847000000,'akshat','158.144.16.12','\'\'\'Mailman\'\'\'','',0),('Mailman',3,1297334036000000,'akshat','158.144.16.12','== Mailman ==','',0),('Mailman',4,1297336380000000,'akshat','158.144.16.12','[[Image()]]== Mailman ==\r\n\r\n__TOC__\r\n\r\n== About Me ==','',0),('Mailman',5,1297337341000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.jpg,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n','',0),('Mailman',6,1297337441000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n','',0),('Mailman',7,1297337982000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n','',0),('Mailman',8,1297338350000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\nsudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.','',0),('Mailman',9,1297410030000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\nsudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\nIt copies the installation files in \'\'\'/var/lib/mailman\'\'\'. It installs the cgi scripts in \'\'\'/usr/lib/cgi-bin/mailman\'\'\' directory. The package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. We can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\nsudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\nsudo /etc/init.d/apache2 restart\r\n}}}\r\n','',0),('Mailman',10,1297410119000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\nsudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nIt copies the installation files in \'\'\'/var/lib/mailman\'\'\'. It installs the cgi scripts in \'\'\'/usr/lib/cgi-bin/mailman\'\'\' directory. The package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\nsudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\nsudo /etc/init.d/apache2 restart\r\n}}}\r\n','',0),('Mailman',11,1297410413000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\nsudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\nsudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\nsudo /etc/init.d/apache2 restart\r\n}}}\r\n','',0),('Mailman',12,1297423456000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\nsudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\nsudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\nsudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\nPostfix was chosen as a MTA at NCRA.\r\n\r\n\'\'\'Step 1\'\'\'\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n','',0),('Mailman',13,1297424109000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\nsudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\nsudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\nsudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Make the Mailing List ===\r\nNow make the mailing list by the following command:\r\n\r\n{{{\r\nnewlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial akshat password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail with an initial default postfix configuration to the admin mail with password and the link like below providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/mailman\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\nPostfix was chosen as a MTA at NCRA.\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n\'\'\'Step 2\'\'\'[[BR]]\r\n','',0),('Mailman',14,1297424207000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Make the Mailing List ===\r\nNow make the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial akshat password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail with an initial default postfix configuration to the admin mail with password and the link like below providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/mailman\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\nPostfix was chosen as a MTA at NCRA.\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n\'\'\'Step 2\'\'\'[[BR]]\r\n','',0),('Mailman',15,1297424273000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial akshat password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail with an initial default postfix configuration to the admin mail with password and the link like below providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/mailman\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\nPostfix was chosen as a MTA at NCRA.\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n\'\'\'Step 2\'\'\'[[BR]]\r\n','',0),('Mailman',16,1297432131000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail with an initial default postfix configuration to the admin mail with password and the link like below providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/mailman\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\nPostfix was chosen as a MTA at NCRA.\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n\'\'\'Step 2\'\'\'[[BR]]\r\n','',0),('Mailman',17,1297432430000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\n{{{\r\nThe hostname at NCRA is :\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\nPostfix was chosen as a MTA at NCRA.\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n\'\'\'Step 2\'\'\'[[BR]]\r\n','',0),('Mailman',18,1297432527000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n\'\'\'Step 2\'\'\'[[BR]]\r\n','',0),('Mailman',19,1297433427000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nlists.example.com      mailman:\r\n}}}\r\n\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n','',0),('Mailman',20,1297433568000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n','',0),('Mailman',21,1297434893000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.','',0),('Mailman',22,1297435009000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n','',0),('Mailman',23,1297435622000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n','',0),('Mailman',24,1297435685000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n','',0),('Mailman',25,1297501314000000,'akshat','158.144.16.12','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n','',0),('Mailman',26,1297772558000000,'akshat','158.144.16.2','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n[[BR]]\r\n','',0),('Mailman',27,1297772585000000,'akshat','158.144.16.2','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n[[BR]]\r\n[[BR]]\r\n','',0),('Mailman',28,1297772601000000,'akshat','158.144.16.2','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n[[BR]]\r\n','',0),('Mailman',29,1298748735000000,'akshat','158.144.16.2','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n','',0),('Mailman',30,1298748757000000,'akshat','158.144.16.2','== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n\r\n----\r\n','',0),('Mailman',31,1313660003000000,'akshat','158.144.16.12','[[TOC]]\r\n\r\n== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n\r\n----\r\n','',0),('Mailman',32,1326131532872511,'akshat','158.144.12.166','[[TOC]]\r\n\r\n== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nIn Debian base systems the location of auto-generated aliases are at /var/lib/mailman/data/aliases\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n\r\nIn RHEL Systems the location of auto-generated aliases are at /etc/mailman/aliases\r\n\r\n# STANZA START: ska-mandc\r\n# CREATED: Mon Jan  9 22:44:45 2012\r\nska-mandc:             \"|/usr/lib/mailman/mail/mailman post ska-mandc\"\r\nska-mandc-admin:       \"|/usr/lib/mailman/mail/mailman admin ska-mandc\"\r\nska-mandc-bounces:     \"|/usr/lib/mailman/mail/mailman bounces ska-mandc\"\r\nska-mandc-confirm:     \"|/usr/lib/mailman/mail/mailman confirm ska-mandc\"\r\nska-mandc-join:        \"|/usr/lib/mailman/mail/mailman join ska-mandc\"\r\nska-mandc-leave:       \"|/usr/lib/mailman/mail/mailman leave ska-mandc\"\r\nska-mandc-owner:       \"|/usr/lib/mailman/mail/mailman owner ska-mandc\"\r\nska-mandc-request:     \"|/usr/lib/mailman/mail/mailman request ska-mandc\"\r\nska-mandc-subscribe:   \"|/usr/lib/mailman/mail/mailman subscribe ska-mandc\"\r\nska-mandc-unsubscribe: \"|/usr/lib/mailman/mail/mailman unsubscribe ska-mandc\"\r\n# STANZA END: ska-mandc\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n\r\n----\r\n','',0),('Mailman',33,1326131596440496,'akshat','158.144.12.166','[[TOC]]\r\n\r\n== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user.\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nIn Debian based systems the location of auto-generated aliases are at /var/lib/mailman/data/aliases\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n\r\nIn RHEL based Systems the location of auto-generated aliases are at /etc/mailman/aliases\r\n\r\n# STANZA START: ska-mandc\r\n# CREATED: Mon Jan  9 22:44:45 2012\r\nska-mandc:             \"|/usr/lib/mailman/mail/mailman post ska-mandc\"\r\nska-mandc-admin:       \"|/usr/lib/mailman/mail/mailman admin ska-mandc\"\r\nska-mandc-bounces:     \"|/usr/lib/mailman/mail/mailman bounces ska-mandc\"\r\nska-mandc-confirm:     \"|/usr/lib/mailman/mail/mailman confirm ska-mandc\"\r\nska-mandc-join:        \"|/usr/lib/mailman/mail/mailman join ska-mandc\"\r\nska-mandc-leave:       \"|/usr/lib/mailman/mail/mailman leave ska-mandc\"\r\nska-mandc-owner:       \"|/usr/lib/mailman/mail/mailman owner ska-mandc\"\r\nska-mandc-request:     \"|/usr/lib/mailman/mail/mailman request ska-mandc\"\r\nska-mandc-subscribe:   \"|/usr/lib/mailman/mail/mailman subscribe ska-mandc\"\r\nska-mandc-unsubscribe: \"|/usr/lib/mailman/mail/mailman unsubscribe ska-mandc\"\r\n# STANZA END: ska-mandc\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n\r\n----\r\n','',0),('Mailman',34,1326299675120405,'akshat','158.144.16.22','[[TOC]]\r\n\r\n== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n\r\nFor Red Hat Installation\r\n$ sudo yum install mailman.x86_64\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\nArchives                    : /var/lib/mailman\r\n}}}\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user. In Red Hat package creates a \'mailman\' user and a \'mailman\' group. The mailman process is be owned by this user\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache in Ubuntu Server based system is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\nIn Red Hat based systems the default configuration is kept in \'\'\'/etc/httpd/conf.d/mailman.conf\'\'\'. The file configuration should be like this:\r\n\r\n\r\n{{{\r\nScriptAlias /mailman/ /usr/lib/mailman/cgi-bin/\r\n<Directory /usr/lib/mailman/cgi-bin/>\r\n    AllowOverride None\r\n    Options ExecCGI\r\n    Order allow,deny\r\n    Allow from all\r\n</Directory>\r\n\r\n\r\nAlias /pipermail/ /var/lib/mailman/archives/public/\r\n<Directory /var/lib/mailman/archives/public>\r\n    Options Indexes MultiViews FollowSymLinks\r\n    AllowOverride None\r\n    Order allow,deny\r\n    Allow from all\r\n    AddDefaultCharset Off\r\n</Directory>\r\n\r\nRedirectMatch /mailman[/]*$ http://mutha.ncra.tifr.res.in/mailman/listinfo\r\n\r\n}}}\r\n \r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n\r\nIn Red Hat the above command is executed like this:\r\n$ cd /usr/lib/mailman/bin\r\n$ ./newlist\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nFor Ubuntu:\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n\r\nFor Red Hat:\r\nhttp://mutha.ncra.tifr.res.in/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nIn Debian based systems the location of auto-generated aliases are at /var/lib/mailman/data/aliases\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n\r\nIn RHEL based Systems the location of auto-generated aliases are at /etc/mailman/aliases\r\n\r\n# STANZA START: ska-mandc\r\n# CREATED: Mon Jan  9 22:44:45 2012\r\nska-mandc:             \"|/usr/lib/mailman/mail/mailman post ska-mandc\"\r\nska-mandc-admin:       \"|/usr/lib/mailman/mail/mailman admin ska-mandc\"\r\nska-mandc-bounces:     \"|/usr/lib/mailman/mail/mailman bounces ska-mandc\"\r\nska-mandc-confirm:     \"|/usr/lib/mailman/mail/mailman confirm ska-mandc\"\r\nska-mandc-join:        \"|/usr/lib/mailman/mail/mailman join ska-mandc\"\r\nska-mandc-leave:       \"|/usr/lib/mailman/mail/mailman leave ska-mandc\"\r\nska-mandc-owner:       \"|/usr/lib/mailman/mail/mailman owner ska-mandc\"\r\nska-mandc-request:     \"|/usr/lib/mailman/mail/mailman request ska-mandc\"\r\nska-mandc-subscribe:   \"|/usr/lib/mailman/mail/mailman subscribe ska-mandc\"\r\nska-mandc-unsubscribe: \"|/usr/lib/mailman/mail/mailman unsubscribe ska-mandc\"\r\n# STANZA END: ska-mandc\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n== BACKING UP AND RESTORING THE MAILING LIST ==\r\n\r\nFirst of all we have to find all the mailing list present in the system. From command line issue the following command:\r\n\r\n\r\n{{{\r\n$ cd /usr/lib/mailman/bin\r\n\r\n$ ./list_list\r\n\r\nThe output will be something like this depending upon your mailing lists in the server.\r\n4 matching mailing lists found:\r\n            Mailman - [no description available]\r\n               Ncra - Testing Mailing List\r\n          SKA-MandC - SKA Monitoring and Control mailing list\r\n    SKA-MandC-India - SKA Monitoring and Control mailing list - India\r\n\r\n}}}\r\n\r\n=== BACKING UP THE MAILING LIST ===\r\nTo move a list, it must be deleted and recreated. We will save three things from the original list and restore to the new one: [[BR]]\r\n1. list configuration [[BR]]\r\n2. list membership [[BR]]\r\n3. list archive. [[BR]]\r\n\r\nTo do so we’ll be using the command line on the server.\r\n\r\n\'\'\'1. Save list settings\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n# ./config_list -o /tmp/Name_of_the_List.conf Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'2. Save list memberships\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./list_members -o /tmp/Name_of_the_List-regular.txt -r Name_of_the_List\r\n# ./list_members -o /tmp/Name_of_the_List-digest.txt -d Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'3. Save list archive\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /var/lib/mailman/archives/private\r\n\r\n# tar czf /tmp/Name_of_the_List-archive.tgz Name_of_the_List\r\n# tar czf /tmp/Name_of_the_List-mbox-archive.tgz Name_of_the_List.mbox\r\n}}}\r\n\r\n\r\n=== RESTORING THE MAILING LIST ===\r\nFor restoring we should first creste the mailing lists on the new server with the \'\'\'./newlist\'\'\' command and finally take these backups to the new server and restore with the following commands:\r\n\r\n\r\n\'\'\'1. Restore list settings\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n# ./config_list -i /tmp/Name_of_the_List.conf Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'2. Restore list memberships\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./add_members -r /tmp/Name_of_the_List-regular.txt Name_of_the_List\r\n# ./add_members -d /tmp/Name_of_the_List-digest.txt Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'3. Restore list archive\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /var/lib/mailman/archives/private\r\n\r\n# tar xzf /tmp/Name_of_the_List-archive.tgz\r\n# tar xzf /tmp/Name_of_the_List-mbox-archive.tgz\r\n}}}\r\n\r\nNow finally fix the permissions of the restored mailing list withe the following command:\r\n\r\n\r\n{{{\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./check_perms -f\r\n\r\nThe permissions should appear like this:\r\ndrwxrwsr-x  2 root mailman 4096 Jan 11 19:56 mailman\r\ndrwxrwsr-x  2 root mailman 4096 Jan 11 19:56 mailman.mbox\r\n\r\nOtherwise fix by using the following command line:\r\n#  chown -R root:mailman Name_of_the_List Name_of_the_List.mbox\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n\r\n----\r\n','',0),('Mailman',35,1326448624046063,'akshat','158.144.16.22','[[TOC]]\r\n\r\n== Mailman ==\r\n\r\n[[Image(Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n\r\nFor Red Hat Installation\r\n$ sudo yum install mailman.x86_64\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\nArchives                    : /var/lib/mailman\r\n}}}\r\n\r\n\r\nIn RHEL Systems edit /var/mailman/Mailman/mm_cfg.py and fix these lines:\r\n\r\n{{{\r\nDEFAULT_URL_HOST   = \'www.domain.com\'\r\nDEFAULT_EMAIL_HOST = \'domain.com\'\r\n}}}\r\n\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user. In Red Hat package creates a \'mailman\' user and a \'mailman\' group. The mailman process is be owned by this user\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache in Ubuntu Server based system is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\nIn Red Hat based systems the default configuration is kept in \'\'\'/etc/httpd/conf.d/mailman.conf\'\'\'. The file configuration should be like this:\r\n\r\n\r\n{{{\r\nScriptAlias /mailman/ /usr/lib/mailman/cgi-bin/\r\n<Directory /usr/lib/mailman/cgi-bin/>\r\n    AllowOverride None\r\n    Options ExecCGI\r\n    Order allow,deny\r\n    Allow from all\r\n</Directory>\r\n\r\n\r\nAlias /pipermail/ /var/lib/mailman/archives/public/\r\n<Directory /var/lib/mailman/archives/public>\r\n    Options Indexes MultiViews FollowSymLinks\r\n    AllowOverride None\r\n    Order allow,deny\r\n    Allow from all\r\n    AddDefaultCharset Off\r\n</Directory>\r\n\r\nRedirectMatch /mailman[/]*$ http://mutha.ncra.tifr.res.in/mailman/listinfo\r\n\r\n}}}\r\n \r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n\r\nIn Red Hat the above command is executed like this:\r\n$ cd /usr/lib/mailman/bin\r\n$ ./newlist\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nFor Ubuntu:\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n\r\nFor Red Hat:\r\nhttp://mutha.ncra.tifr.res.in/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nIn Debian based systems the location of auto-generated aliases are at /var/lib/mailman/data/aliases\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n\r\nIn RHEL based Systems the location of auto-generated aliases are at /etc/mailman/aliases\r\n\r\n# STANZA START: ska-mandc\r\n# CREATED: Mon Jan  9 22:44:45 2012\r\nska-mandc:             \"|/usr/lib/mailman/mail/mailman post ska-mandc\"\r\nska-mandc-admin:       \"|/usr/lib/mailman/mail/mailman admin ska-mandc\"\r\nska-mandc-bounces:     \"|/usr/lib/mailman/mail/mailman bounces ska-mandc\"\r\nska-mandc-confirm:     \"|/usr/lib/mailman/mail/mailman confirm ska-mandc\"\r\nska-mandc-join:        \"|/usr/lib/mailman/mail/mailman join ska-mandc\"\r\nska-mandc-leave:       \"|/usr/lib/mailman/mail/mailman leave ska-mandc\"\r\nska-mandc-owner:       \"|/usr/lib/mailman/mail/mailman owner ska-mandc\"\r\nska-mandc-request:     \"|/usr/lib/mailman/mail/mailman request ska-mandc\"\r\nska-mandc-subscribe:   \"|/usr/lib/mailman/mail/mailman subscribe ska-mandc\"\r\nska-mandc-unsubscribe: \"|/usr/lib/mailman/mail/mailman unsubscribe ska-mandc\"\r\n# STANZA END: ska-mandc\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n== BACKING UP AND RESTORING THE MAILING LIST ==\r\n\r\nFirst of all we have to find all the mailing list present in the system. From command line issue the following command:\r\n\r\n\r\n{{{\r\n$ cd /usr/lib/mailman/bin\r\n\r\n$ ./list_list\r\n\r\nThe output will be something like this depending upon your mailing lists in the server.\r\n4 matching mailing lists found:\r\n            Mailman - [no description available]\r\n               Ncra - Testing Mailing List\r\n          SKA-MandC - SKA Monitoring and Control mailing list\r\n    SKA-MandC-India - SKA Monitoring and Control mailing list - India\r\n\r\n}}}\r\n\r\n=== BACKING UP THE MAILING LIST ===\r\nTo move a list, it must be deleted and recreated. We will save three things from the original list and restore to the new one: [[BR]]\r\n1. list configuration [[BR]]\r\n2. list membership [[BR]]\r\n3. list archive. [[BR]]\r\n\r\nTo do so we’ll be using the command line on the server.\r\n\r\n\'\'\'1. Save list settings\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n# ./config_list -o /tmp/Name_of_the_List.conf Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'2. Save list memberships\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./list_members -o /tmp/Name_of_the_List-regular.txt -r Name_of_the_List\r\n# ./list_members -o /tmp/Name_of_the_List-digest.txt -d Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'3. Save list archive\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /var/lib/mailman/archives/private\r\n\r\n# tar czf /tmp/Name_of_the_List-archive.tgz Name_of_the_List\r\n# tar czf /tmp/Name_of_the_List-mbox-archive.tgz Name_of_the_List.mbox\r\n}}}\r\n\r\n\r\n=== RESTORING THE MAILING LIST ===\r\nFor restoring we should first creste the mailing lists on the new server with the \'\'\'./newlist\'\'\' command and finally take these backups to the new server and restore with the following commands:\r\n\r\n\r\n\'\'\'1. Restore list settings\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n# ./config_list -i /tmp/Name_of_the_List.conf Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'2. Restore list memberships\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./add_members -r /tmp/Name_of_the_List-regular.txt Name_of_the_List\r\n# ./add_members -d /tmp/Name_of_the_List-digest.txt Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'3. Restore list archive\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /var/lib/mailman/archives/private\r\n\r\n# tar xzf /tmp/Name_of_the_List-archive.tgz\r\n# tar xzf /tmp/Name_of_the_List-mbox-archive.tgz\r\n}}}\r\n\r\nNow finally fix the permissions of the restored mailing list withe the following command:\r\n\r\n\r\n{{{\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./check_perms -f\r\n\r\nThe permissions should appear like this:\r\ndrwxrwsr-x  2 root mailman 4096 Jan 11 19:56 mailman\r\ndrwxrwsr-x  2 root mailman 4096 Jan 11 19:56 mailman.mbox\r\n\r\nOtherwise fix by using the following command line:\r\n#  chown -R root:mailman Name_of_the_List Name_of_the_List.mbox\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n\r\n----\r\n','',0),('Mailman',36,1397143249974091,'admin','192.168.0.13','[[TOC]]\r\n\r\n== Mailman ==\r\n\r\n[[Image(/chrome/site/Mailman/Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n\r\nFor Red Hat Installation\r\n$ sudo yum install mailman.x86_64\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\nArchives                    : /var/lib/mailman\r\n}}}\r\n\r\n\r\nIn RHEL Systems edit /var/mailman/Mailman/mm_cfg.py and fix these lines:\r\n\r\n{{{\r\nDEFAULT_URL_HOST   = \'www.domain.com\'\r\nDEFAULT_EMAIL_HOST = \'domain.com\'\r\n}}}\r\n\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user. In Red Hat package creates a \'mailman\' user and a \'mailman\' group. The mailman process is be owned by this user\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache in Ubuntu Server based system is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\nIn Red Hat based systems the default configuration is kept in \'\'\'/etc/httpd/conf.d/mailman.conf\'\'\'. The file configuration should be like this:\r\n\r\n\r\n{{{\r\nScriptAlias /mailman/ /usr/lib/mailman/cgi-bin/\r\n<Directory /usr/lib/mailman/cgi-bin/>\r\n    AllowOverride None\r\n    Options ExecCGI\r\n    Order allow,deny\r\n    Allow from all\r\n</Directory>\r\n\r\n\r\nAlias /pipermail/ /var/lib/mailman/archives/public/\r\n<Directory /var/lib/mailman/archives/public>\r\n    Options Indexes MultiViews FollowSymLinks\r\n    AllowOverride None\r\n    Order allow,deny\r\n    Allow from all\r\n    AddDefaultCharset Off\r\n</Directory>\r\n\r\nRedirectMatch /mailman[/]*$ http://mutha.ncra.tifr.res.in/mailman/listinfo\r\n\r\n}}}\r\n \r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n\r\nIn Red Hat the above command is executed like this:\r\n$ cd /usr/lib/mailman/bin\r\n$ ./newlist\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nFor Ubuntu:\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n\r\nFor Red Hat:\r\nhttp://mutha.ncra.tifr.res.in/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nIn Debian based systems the location of auto-generated aliases are at /var/lib/mailman/data/aliases\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n\r\nIn RHEL based Systems the location of auto-generated aliases are at /etc/mailman/aliases\r\n\r\n# STANZA START: ska-mandc\r\n# CREATED: Mon Jan  9 22:44:45 2012\r\nska-mandc:             \"|/usr/lib/mailman/mail/mailman post ska-mandc\"\r\nska-mandc-admin:       \"|/usr/lib/mailman/mail/mailman admin ska-mandc\"\r\nska-mandc-bounces:     \"|/usr/lib/mailman/mail/mailman bounces ska-mandc\"\r\nska-mandc-confirm:     \"|/usr/lib/mailman/mail/mailman confirm ska-mandc\"\r\nska-mandc-join:        \"|/usr/lib/mailman/mail/mailman join ska-mandc\"\r\nska-mandc-leave:       \"|/usr/lib/mailman/mail/mailman leave ska-mandc\"\r\nska-mandc-owner:       \"|/usr/lib/mailman/mail/mailman owner ska-mandc\"\r\nska-mandc-request:     \"|/usr/lib/mailman/mail/mailman request ska-mandc\"\r\nska-mandc-subscribe:   \"|/usr/lib/mailman/mail/mailman subscribe ska-mandc\"\r\nska-mandc-unsubscribe: \"|/usr/lib/mailman/mail/mailman unsubscribe ska-mandc\"\r\n# STANZA END: ska-mandc\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n== BACKING UP AND RESTORING THE MAILING LIST ==\r\n\r\nFirst of all we have to find all the mailing list present in the system. From command line issue the following command:\r\n\r\n\r\n{{{\r\n$ cd /usr/lib/mailman/bin\r\n\r\n$ ./list_list\r\n\r\nThe output will be something like this depending upon your mailing lists in the server.\r\n4 matching mailing lists found:\r\n            Mailman - [no description available]\r\n               Ncra - Testing Mailing List\r\n          SKA-MandC - SKA Monitoring and Control mailing list\r\n    SKA-MandC-India - SKA Monitoring and Control mailing list - India\r\n\r\n}}}\r\n\r\n=== BACKING UP THE MAILING LIST ===\r\nTo move a list, it must be deleted and recreated. We will save three things from the original list and restore to the new one: [[BR]]\r\n1. list configuration [[BR]]\r\n2. list membership [[BR]]\r\n3. list archive. [[BR]]\r\n\r\nTo do so we’ll be using the command line on the server.\r\n\r\n\'\'\'1. Save list settings\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n# ./config_list -o /tmp/Name_of_the_List.conf Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'2. Save list memberships\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./list_members -o /tmp/Name_of_the_List-regular.txt -r Name_of_the_List\r\n# ./list_members -o /tmp/Name_of_the_List-digest.txt -d Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'3. Save list archive\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /var/lib/mailman/archives/private\r\n\r\n# tar czf /tmp/Name_of_the_List-archive.tgz Name_of_the_List\r\n# tar czf /tmp/Name_of_the_List-mbox-archive.tgz Name_of_the_List.mbox\r\n}}}\r\n\r\n\r\n=== RESTORING THE MAILING LIST ===\r\nFor restoring we should first creste the mailing lists on the new server with the \'\'\'./newlist\'\'\' command and finally take these backups to the new server and restore with the following commands:\r\n\r\n\r\n\'\'\'1. Restore list settings\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n# ./config_list -i /tmp/Name_of_the_List.conf Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'2. Restore list memberships\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./add_members -r /tmp/Name_of_the_List-regular.txt Name_of_the_List\r\n# ./add_members -d /tmp/Name_of_the_List-digest.txt Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'3. Restore list archive\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /var/lib/mailman/archives/private\r\n\r\n# tar xzf /tmp/Name_of_the_List-archive.tgz\r\n# tar xzf /tmp/Name_of_the_List-mbox-archive.tgz\r\n}}}\r\n\r\nNow finally fix the permissions of the restored mailing list withe the following command:\r\n\r\n\r\n{{{\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./check_perms -f\r\n\r\nThe permissions should appear like this:\r\ndrwxrwsr-x  2 root mailman 4096 Jan 11 19:56 mailman\r\ndrwxrwsr-x  2 root mailman 4096 Jan 11 19:56 mailman.mbox\r\n\r\nOtherwise fix by using the following command line:\r\n#  chown -R root:mailman Name_of_the_List Name_of_the_List.mbox\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n\r\n----\r\n','',0),('Mailman',37,1397144443593918,'admin','192.168.0.13','[[TOC]]\r\n\r\n== Mailman ==\r\n\r\n[[Image(htdocs:Mailman/Mailman.png,right)]]\r\n\r\nMailman is free software for managing electronic mail discussion and e-newsletter lists. Mailman is integrated with the web, making it easy for users to manage their accounts and for list owners to administer their lists and also available as a command line. Mailman supports built-in archiving, automatic bounce processing, content filtering, digest delivery, spam filters, and more. \r\n\r\nMailman is free software, distributed under the GNU General Public License. Mailman is coded primarily in Python and uses a bit of C codes.\r\n\r\n----\r\n== Mailman at NCRA ==\r\n=== Installation Requirements ===\r\n1. GNU Mailman works on most POSIX-based systems such as UNIX, MacOSX, or GNU/Linux.[[BR]]\r\n2. Mail server to send messages : Postfix or Exim or Sendmail or qmail \'\'\'[Postfix is used at NCRA]\'\'\'[[BR]]\r\n3. Web server that supports the CGI/1.1 API. : \'\'\'Apache is used at NCRA\'\'\'.[[BR]]\r\n4. To install Mailman from source, ANSI C or GNU compiler gcc is needed to build Mailman’s security wrappers.[[BR]]\r\n5. Python interpreter installed.[[BR]]\r\n\r\n----\r\n\r\n=== Installation ===\r\nMailman can be installed either from the source or either from the repositories. At NCRA Mailman was chosen to install from the repositories through the following command line:\r\n\r\n{{{\r\n$ sudo aptitude install mailman\r\n\r\nFor Red Hat Installation\r\n$ sudo yum install mailman.x86_64\r\n}}}\r\nThe installed version is 2.1.13 of mailman running on mutha server.[[BR]]\r\n\r\nBy default Ubuntu Installs the Mailman to the following directories:\r\n\r\n{{{\r\nInstalled software package  : /usr/lib/mailman/\r\nCGI                         : /usr/lib/cgi-bin/mailman/\r\nConfiguration documentation : /usr/share/doc/mailman/\r\nLog files                   : /usr/log/mailman/\r\nUser data                   : /var/lib/mailman/\r\nRuntime lock file           : /var/lock/mailman/\r\nLocation of process id file : /var/run/mailman/\r\nConfiguration files         : /etc/mailman/\r\nStart script                : /etc/init.d/mailman\r\nAdmin commands              : /usr/sbin/\r\nArchives                    : /var/lib/mailman\r\n}}}\r\n\r\n\r\nIn RHEL Systems edit /var/mailman/Mailman/mm_cfg.py and fix these lines:\r\n\r\n{{{\r\nDEFAULT_URL_HOST   = \'www.domain.com\'\r\nDEFAULT_EMAIL_HOST = \'domain.com\'\r\n}}}\r\n\r\n\r\nThe package creates a \'list\' user and a \'list\' group. The mailman process is be owned by this user. In Red Hat package creates a \'mailman\' user and a \'mailman\' group. The mailman process is be owned by this user\r\n\r\nOnce the Mailman is successfully installed on the machine now we have to tell the webserver about the mailman. The default configuration for Apache in Ubuntu Server based system is kept in \'\'\'/etc/mailman/apache.conf\'\'\'. For enabling the Mailman we need to copy this configuration file to \'\'\'/etc/apache2/sites-enabled\'\'\'. \r\n\r\nWe can give the symbolic link to this file:\r\n\r\n\r\n{{{\r\n$ sudo ln -s /etc/mailman/apache.conf /etc/apache2/sites-enabled/mailman\r\n}}}\r\n\r\nNow restart the Apache webserver:\r\n\r\n{{{\r\n$ sudo /etc/init.d/apache2 restart\r\n}}}\r\n\r\nIn Red Hat based systems the default configuration is kept in \'\'\'/etc/httpd/conf.d/mailman.conf\'\'\'. The file configuration should be like this:\r\n\r\n\r\n{{{\r\nScriptAlias /mailman/ /usr/lib/mailman/cgi-bin/\r\n<Directory /usr/lib/mailman/cgi-bin/>\r\n    AllowOverride None\r\n    Options ExecCGI\r\n    Order allow,deny\r\n    Allow from all\r\n</Directory>\r\n\r\n\r\nAlias /pipermail/ /var/lib/mailman/archives/public/\r\n<Directory /var/lib/mailman/archives/public>\r\n    Options Indexes MultiViews FollowSymLinks\r\n    AllowOverride None\r\n    Order allow,deny\r\n    Allow from all\r\n    AddDefaultCharset Off\r\n</Directory>\r\n\r\nRedirectMatch /mailman[/]*$ http://mutha.ncra.tifr.res.in/mailman/listinfo\r\n\r\n}}}\r\n \r\n\r\n----\r\n=== Creating the Mailing List ===\r\nNow create the mailing list by the following command:\r\n\r\n{{{\r\n$ sudo newlist Name_of_the_List\r\n\r\nin return it will ask for the following details:\r\n\r\nEnter the email of the person running the list: username@ncra.tifr.res.in\r\nInitial Name_of_the_List password: *****\r\nHit enter to notify akshat owner...\r\n\r\n\r\nIn Red Hat the above command is executed like this:\r\n$ cd /usr/lib/mailman/bin\r\n$ ./newlist\r\n}}}\r\n\r\nIt will send a welcome mail to admin with an initial default postfix configuration with password, providing the administrative web interface. But the main part of Postfix configuration is described below for sending and receiving the email smoothly. The Link will be something like this.\r\n\r\n{{{\r\nFor Ubuntu:\r\nhttp://mutha.ncra.tifr.res.in/cgi-bin/mailman/admin/Name_of_the_List\r\n\r\nFor Red Hat:\r\nhttp://mutha.ncra.tifr.res.in/mailman/admin/Name_of_the_List\r\n}}}\r\n\r\n\r\n----\r\n\r\n=== Postfix Configuration ===\r\n\r\nPostfix was chosen as a MTA at NCRA and the hostname where Mailman is is installed at NCRA is :\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in\r\n}}}\r\n\r\n\r\n\'\'\'Step 1\'\'\'[[BR]]\r\n\r\nActivate the MTA option on the mailman config file \'\'\'/etc/mailman/mm_cfg.py\'\'\'. Write or uncomment this line:\r\n\r\n{{{\r\nMTA = \'Postfix\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 2\'\'\'[[BR]]\r\nRun the script to generate aliases.\r\n\r\n{{{\r\n$ sudo /usr/lib/mailman/bin/genaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 3\'\'\'[[BR]]\r\nUsing postconf command or manually add the following configuration to \'\'\'/etc/postfix/main.cf\'\'\' file of Postfix:\r\n\r\n{{{\r\n$ sudo postconf -e \'transport_maps = hash:/etc/postfix/transport\'\r\n$ sudo postconf -e \'mailman_destination_recipient_limit = 1\'\r\n$ sudo postconf -e \'alias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\'\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 4\'\'\'[[BR]]\r\nIn /etc/postfix/master.cf check that following transport are there, which calls the postfix-to-mailman.py script when a mail is delivered to a list.\r\n\r\n{{{\r\nmailman   unix  -       n       n       -       -       pipe\r\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\r\n  ${nexthop} ${user}\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 5\'\'\'[[BR]]\r\nNow, the domain mutha.ncra.tifr.res.in is associated to the mailman transport with the transport map by editing the file \'\'\'/etc/postfix/transport\'\'\':\r\n\r\n{{{\r\nmutha.ncra.tifr.res.in      mailman:\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 6\'\'\'[[BR]]\r\nNow have Postfix build the transport map by entering the following from a terminal prompt:\r\n\r\n{{{\r\nsudo postmap -v /etc/postfix/transport\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 7\'\'\'[[BR]]\r\nAdd all the mailman lists aliases in /etc/aliases, here the example is given for the one list, but all the lists aliases needed to be included.\r\n\r\n{{{\r\nIn Debian based systems the location of auto-generated aliases are at /var/lib/mailman/data/aliases\r\nmailman:              \"|/var/lib/mailman/mail/mailman post mailman\"\r\nmailman-admin:        \"|/var/lib/mailman/mail/mailman admin mailman\"\r\nmailman-bounces:      \"|/var/lib/mailman/mail/mailman bounces mailman\"\r\nmailman-confirm:      \"|/var/lib/mailman/mail/mailman confirm mailman\"\r\nmailman-join:         \"|/var/lib/mailman/mail/mailman join mailman\"\r\nmailman-leave:        \"|/var/lib/mailman/mail/mailman leave mailman\"\r\nmailman-owner:        \"|/var/lib/mailman/mail/mailman owner mailman\"\r\nmailman-request:      \"|/var/lib/mailman/mail/mailman request mailman\"\r\nmailman-subscribe:    \"|/var/lib/mailman/mail/mailman subscribe mailman\"\r\nmailman-unsubscribe:  \"|/var/lib/mailman/mail/mailman unsubscribe mailman\"\r\n\r\nWhere Name_of_the_List = mailman\r\n\r\nIn RHEL based Systems the location of auto-generated aliases are at /etc/mailman/aliases\r\n\r\n# STANZA START: ska-mandc\r\n# CREATED: Mon Jan  9 22:44:45 2012\r\nska-mandc:             \"|/usr/lib/mailman/mail/mailman post ska-mandc\"\r\nska-mandc-admin:       \"|/usr/lib/mailman/mail/mailman admin ska-mandc\"\r\nska-mandc-bounces:     \"|/usr/lib/mailman/mail/mailman bounces ska-mandc\"\r\nska-mandc-confirm:     \"|/usr/lib/mailman/mail/mailman confirm ska-mandc\"\r\nska-mandc-join:        \"|/usr/lib/mailman/mail/mailman join ska-mandc\"\r\nska-mandc-leave:       \"|/usr/lib/mailman/mail/mailman leave ska-mandc\"\r\nska-mandc-owner:       \"|/usr/lib/mailman/mail/mailman owner ska-mandc\"\r\nska-mandc-request:     \"|/usr/lib/mailman/mail/mailman request ska-mandc\"\r\nska-mandc-subscribe:   \"|/usr/lib/mailman/mail/mailman subscribe ska-mandc\"\r\nska-mandc-unsubscribe: \"|/usr/lib/mailman/mail/mailman unsubscribe ska-mandc\"\r\n# STANZA END: ska-mandc\r\n}}}\r\n\r\nThis build of mailman runs as list. It must have permission to read /etc/aliases and read and write /var/lib/mailman/data/aliases. Do this with these commands:\r\n\r\n{{{\r\n$ sudo chown root:list /var/lib/mailman/data/aliases\r\n$ sudo chown root:list /etc/aliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 8\'\'\'[[BR]]\r\nSave and run:\r\n\r\n{{{\r\nsudo newaliases\r\n}}}\r\n\r\n[[BR]]\r\n\'\'\'Step 9\'\'\'[[BR]]\r\nFinally restart Postfix to enable the new configurations:\r\n\r\n{{{\r\nsudo /etc/init.d/postfix restart\r\n}}}\r\n\r\n----\r\n\r\n=== Postfix Configuration file [main.cf] ===\r\n\r\nThe Final /etc/postfix/main.cf configuration file should look like this:\r\n\r\n{{{\r\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\r\nbiff = no\r\n\r\n# appending .domain is the MUA\'s job.\r\nappend_dot_mydomain = no\r\n\r\n# Uncomment the next line to generate \"delayed mail\" warnings\r\n#delay_warning_time = 4h\r\n\r\nreadme_directory = no\r\n\r\n# TLS parameters\r\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\r\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\r\nsmtpd_use_tls=yes\r\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\r\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\r\n\r\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\r\n# information on enabling SSL in the smtp client.\r\n\r\nmyhostname = mutha.ncra.tifr.res.in\r\nalias_maps = hash:/etc/aliases, hash:/var/lib/mailman/data/aliases\r\nalias_database = hash:/etc/aliases\r\nmyorigin = /etc/mailname\r\nmydestination = mutha.ncra.tifr.res.in\r\nrelayhost = wm.ncra.tifr.res.in\r\nmynetworks = 127.0.0.0/8\r\nmailbox_size_limit = 0\r\nrecipient_delimiter = +\r\ninet_interfaces = all\r\ntransport_maps = hash:/etc/postfix/transport\r\nmailman_destination_recipient_limit = 1\r\n\r\n}}}\r\n\r\n\'\'\'Relayhost\'\'\'[[BR]]\r\n\r\nWhen the mail is passed to another mail server to route to internet the hostname of mail server in the configuration file should be defined as Relayhost.\r\nHere, in the above configuraton file the relayhost is defined as \'\'\' wm.ncra.tifr.res.in\'\'\' so all the incoming and outgoing mails from mutha server are diverted through wm machine at NCRA.\r\n\r\n----\r\n=== Checking Permissions ===\r\nThe mailman provides the facility to check the permission of all of its directories and fixes if the permissions are invalid with the following command:\r\n\r\n{{{\r\n$ sudo check_perms -f\r\n\r\n-f -> for fixing the permissions.\r\n}}}\r\n\r\n[[BR]]\r\nAnd also if the permissions are not right then the Archiving feature will not work. Since, by default the directories were owned by user \'root\' and group \r\n\'www-data\', so user \'list\' could not write into them. So, we need to change the permissions of the archiving directory. This can be done with the above command for changing the group from \'www-data\' to \'list\' and change the permission by the following command:\r\n\r\n{{{\r\n$ sudo chmod o-r /var/lib/mailman/archives/private/\r\n\r\nThe permissions should look like this: \r\n\r\ndrwxrwsr-x 9 root list 4.0K 2011-02-11 03:27 mailman\r\ndrwxrwsr-x 2 root list 4.0K 2011-02-05 00:04 mailman.mbox\r\n}}}\r\n\r\n----\r\n=== Command line interface ===\r\n\r\n{{{\r\nnewlist                                       : add a new list\r\nrmlist \'\'list\'\'                               : delete a list\r\nlist_lists                                    : list all the lists\r\nlist_members \'\'list\'\'                         : list all the members of the list\r\nadd_members \'\'user@example.com\'\' \'\'list\'\'     : add e-mail user@example.com to the list list.\r\nremove_members \'\'user@example.com\'\' \'\'list\'\'  : remove e-mail user@example.com to the list list\r\nmmsitepass                                    : define a site password to access administration web interfaces\r\n}}}\r\n\r\n\r\n----\r\n== BACKING UP AND RESTORING THE MAILING LIST ==\r\n\r\nFirst of all we have to find all the mailing list present in the system. From command line issue the following command:\r\n\r\n\r\n{{{\r\n$ cd /usr/lib/mailman/bin\r\n\r\n$ ./list_list\r\n\r\nThe output will be something like this depending upon your mailing lists in the server.\r\n4 matching mailing lists found:\r\n            Mailman - [no description available]\r\n               Ncra - Testing Mailing List\r\n          SKA-MandC - SKA Monitoring and Control mailing list\r\n    SKA-MandC-India - SKA Monitoring and Control mailing list - India\r\n\r\n}}}\r\n\r\n=== BACKING UP THE MAILING LIST ===\r\nTo move a list, it must be deleted and recreated. We will save three things from the original list and restore to the new one: [[BR]]\r\n1. list configuration [[BR]]\r\n2. list membership [[BR]]\r\n3. list archive. [[BR]]\r\n\r\nTo do so we’ll be using the command line on the server.\r\n\r\n\'\'\'1. Save list settings\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n# ./config_list -o /tmp/Name_of_the_List.conf Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'2. Save list memberships\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./list_members -o /tmp/Name_of_the_List-regular.txt -r Name_of_the_List\r\n# ./list_members -o /tmp/Name_of_the_List-digest.txt -d Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'3. Save list archive\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /var/lib/mailman/archives/private\r\n\r\n# tar czf /tmp/Name_of_the_List-archive.tgz Name_of_the_List\r\n# tar czf /tmp/Name_of_the_List-mbox-archive.tgz Name_of_the_List.mbox\r\n}}}\r\n\r\n\r\n=== RESTORING THE MAILING LIST ===\r\nFor restoring we should first creste the mailing lists on the new server with the \'\'\'./newlist\'\'\' command and finally take these backups to the new server and restore with the following commands:\r\n\r\n\r\n\'\'\'1. Restore list settings\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n# ./config_list -i /tmp/Name_of_the_List.conf Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'2. Restore list memberships\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./add_members -r /tmp/Name_of_the_List-regular.txt Name_of_the_List\r\n# ./add_members -d /tmp/Name_of_the_List-digest.txt Name_of_the_List\r\n}}}\r\n\r\n\r\n\'\'\'3. Restore list archive\'\'\'\r\n\r\nPerform all the actions as root:\r\n\r\n{{{\r\n\r\n# cd /var/lib/mailman/archives/private\r\n\r\n# tar xzf /tmp/Name_of_the_List-archive.tgz\r\n# tar xzf /tmp/Name_of_the_List-mbox-archive.tgz\r\n}}}\r\n\r\nNow finally fix the permissions of the restored mailing list withe the following command:\r\n\r\n\r\n{{{\r\n# cd /usr/lib/mailman/bin\r\n\r\n# ./check_perms -f\r\n\r\nThe permissions should appear like this:\r\ndrwxrwsr-x  2 root mailman 4096 Jan 11 19:56 mailman\r\ndrwxrwsr-x  2 root mailman 4096 Jan 11 19:56 mailman.mbox\r\n\r\nOtherwise fix by using the following command line:\r\n#  chown -R root:mailman Name_of_the_List Name_of_the_List.mbox\r\n}}}\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n[[BR]]\r\n\r\n\r\n----\r\n','',0),('MySQL',1,1299231039000000,'akshat','158.144.16.2','== RECOVER MySQL ROOT PASSWORD ==\r\n\r\nStep # 1 : Stop mysql service\r\n\r\n# /etc/init.d/mysql stop\r\n\r\nOutput:\r\n\r\nStopping MySQL database server: mysqld.\r\nStep # 2: Start to MySQL server w/o password:\r\n\r\n# mysqld_safe --skip-grant-tables &\r\n\r\nOutput:\r\n\r\n[1] 5988\r\nStarting mysqld daemon with databases from /var/lib/mysql\r\nmysqld_safe[6025]: started\r\nStep # 3: Connect to mysql server using mysql client:\r\n\r\n# mysql -u root\r\n\r\nOutput:\r\n\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 1 to server version: 4.1.15-Debian_1-log\r\n\r\nType \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the buffer.\r\n\r\nmysql>\r\nStep # 4: Setup new MySQL root user password\r\n\r\nmysql> use mysql;\r\nmysql> update user set password=PASSWORD(\"NEW-ROOT-PASSWORD\") where User=\'root\';\r\nmysql> flush privileges;\r\nmysql> quit\r\n\r\nStep # 5: Stop MySQL Server:\r\n\r\n# /etc/init.d/mysql stop\r\n\r\nOutput:\r\n\r\nStopping MySQL database server: mysqld\r\nSTOPPING server from pid file /var/run/mysqld/mysqld.pid\r\nmysqld_safe[6186]: ended\r\n\r\n[1]+  Done                    mysqld_safe --skip-grant-tables\r\nStep # 6: Start MySQL server and test it\r\n\r\n# /etc/init.d/mysql start\r\n# mysql -u root -p','',0),('MySQL',2,1299231093000000,'akshat','158.144.16.2','== RECOVER MySQL ROOT PASSWORD ==\r\n\r\nStep # 1 : Stop mysql service\r\n\r\n# /etc/init.d/mysql stop\r\n\r\nOutput:\r\n\r\nStopping MySQL database server: mysqld.\r\n----\r\n\r\nStep # 2: Start to MySQL server w/o password:\r\n\r\n# mysqld_safe --skip-grant-tables &\r\n\r\nOutput:\r\n\r\n[1] 5988\r\nStarting mysqld daemon with databases from /var/lib/mysql\r\nmysqld_safe[6025]: started\r\n\r\n----\r\n\r\nStep # 3: Connect to mysql server using mysql client:\r\n\r\n# mysql -u root\r\n\r\nOutput:\r\n\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 1 to server version: 4.1.15-Debian_1-log\r\n\r\nType \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the buffer.\r\n\r\nmysql>\r\n\r\n----\r\n\r\nStep # 4: Setup new MySQL root user password\r\n\r\nmysql> use mysql;\r\nmysql> update user set password=PASSWORD(\"NEW-ROOT-PASSWORD\") where User=\'root\';\r\nmysql> flush privileges;\r\nmysql> quit\r\n\r\n----\r\n\r\nStep # 5: Stop MySQL Server:\r\n\r\n# /etc/init.d/mysql stop\r\n\r\nOutput:\r\n\r\nStopping MySQL database server: mysqld\r\nSTOPPING server from pid file /var/run/mysqld/mysqld.pid\r\nmysqld_safe[6186]: ended\r\n\r\n[1]+  Done                    mysqld_safe --skip-grant-tables\r\n\r\n----\r\n\r\nStep # 6: Start MySQL server and test it\r\n\r\n# /etc/init.d/mysql start\r\n# mysql -u root -p','',0),('MySQL',3,1302003901000000,'akshat','59.163.79.36','== RECOVER MySQL ROOT PASSWORD ==\r\n\r\nStep # 1 : Stop mysql service\r\n\r\n# /etc/init.d/mysql stop\r\n\r\nOutput:\r\n\r\nStopping MySQL database server: mysqld.\r\n----\r\n\r\nStep # 2: Start to MySQL server w/o password:\r\n\r\n# mysqld_safe --skip-grant-tables &\r\n\r\nOutput:\r\n\r\n[1] 5988\r\nStarting mysqld daemon with databases from /var/lib/mysql\r\nmysqld_safe[6025]: started\r\n\r\n----\r\n\r\nStep # 3: Connect to mysql server using mysql client:\r\n\r\n# mysql -u root\r\n\r\nOutput:\r\n\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 1 to server version: 4.1.15-Debian_1-log\r\n\r\nType \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the buffer.\r\n\r\nmysql>\r\n\r\n----\r\n\r\nStep # 4: Setup new MySQL root user password\r\n\r\nmysql> use mysql;\r\nmysql> update user set password=PASSWORD(\"NEW-ROOT-PASSWORD\") where User=\'root\';\r\nmysql> flush privileges;\r\nmysql> quit\r\n\r\n----\r\n\r\nStep # 5: Stop MySQL Server:\r\n\r\n# /etc/init.d/mysql stop\r\n\r\nOutput:\r\n\r\nStopping MySQL database server: mysqld\r\nSTOPPING server from pid file /var/run/mysqld/mysqld.pid\r\nmysqld_safe[6186]: ended\r\n\r\n[1]+  Done                    mysqld_safe --skip-grant-tables\r\n\r\n----\r\n\r\nStep # 6: Start MySQL server and test it\r\n\r\n# /etc/init.d/mysql start\r\n# mysql -u root -p\r\n\r\n----\r\n[wiki:Contents List all Pages]','',0),('MySQL',4,1405347095088091,'akshat','192.168.0.18','[[Image(MySQL.jpg,200px,right)]]\r\n\r\n== RECOVER MySQL ROOT PASSWORD ==\r\n\r\nStep # 1 : Stop mysql service\r\n\r\n# /etc/init.d/mysql stop\r\n\r\nOutput:\r\n\r\nStopping MySQL database server: mysqld.\r\n----\r\n\r\nStep # 2: Start to MySQL server w/o password:\r\n\r\n# mysqld_safe --skip-grant-tables &\r\n\r\nOutput:\r\n\r\n[1] 5988\r\nStarting mysqld daemon with databases from /var/lib/mysql\r\nmysqld_safe[6025]: started\r\n\r\n----\r\n\r\nStep # 3: Connect to mysql server using mysql client:\r\n\r\n# mysql -u root\r\n\r\nOutput:\r\n\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 1 to server version: 4.1.15-Debian_1-log\r\n\r\nType \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the buffer.\r\n\r\nmysql>\r\n\r\n----\r\n\r\nStep # 4: Setup new MySQL root user password\r\n\r\nmysql> use mysql;\r\nmysql> update user set password=PASSWORD(\"NEW-ROOT-PASSWORD\") where User=\'root\';\r\nmysql> flush privileges;\r\nmysql> quit\r\n\r\n----\r\n\r\nStep # 5: Stop MySQL Server:\r\n\r\n# /etc/init.d/mysql stop\r\n\r\nOutput:\r\n\r\nStopping MySQL database server: mysqld\r\nSTOPPING server from pid file /var/run/mysqld/mysqld.pid\r\nmysqld_safe[6186]: ended\r\n\r\n[1]+  Done                    mysqld_safe --skip-grant-tables\r\n\r\n----\r\n\r\nStep # 6: Start MySQL server and test it\r\n\r\n# /etc/init.d/mysql start\r\n# mysql -u root -p\r\n\r\n----\r\n[wiki:Contents List all Pages]','',0),('MySQLConfiguration',1,1302003282000000,'akshat','59.163.79.36','== MySQL Configuration in Zope / Plone ==\r\n\r\n=== WHAT IS ZOPE ===\r\n\r\nZope Click here to access its official Website (Z Object Publishing Environment) is an open source web application server written Python on which well known CMS Plone runs. Everything in the Zope is Objects the URL is used for connecting from one Object to another. As the question arises for making dynamic pages we need one database that can talk to Zope for fetching the information from from the Zope and rendering into the HTML Page. For Presentation point of view Zope uses DTML (Dynamic Template Markup Language) which consist of DTML Documents (having identity of their own) and DTML Method (having no identity of their own) but our theme is to connect it by MySQL without further going into details of other topic I will now explain how can we connect to MySQL to the Zope.\r\n\r\n----\r\n\r\n=== WHAT IS ZODB/GADFLY ===\r\n\r\nZope also has its own Database called ZODB (Z Object Database) which is a full featured Object database and has Gadfly which is a Relational Database which has limited capability. If you are using Object Database than ZODB works fine but in case of Relational database if you are having a high traffic site or mission critical project than this database is not recommended at all.\r\n\r\n----\r\n\r\n=== YOUR RDBMS ALREADY EXISTED ===\r\n\r\nThe other case may be that your database already existed in some other Database and you don\'t want to migrate to other database, here I will use MySQL Database to make a connection with Zope. The other database supported are Oracle, MySQL, SQL Server, PostgreSQL...\r\nTo set up a connection between the Database and the Zope you need:[[BR]]\r\nA. Database Connection and[[BR]]\r\nB. Z SQL Method which is used for making queries to the database.\r\n\r\n----\r\n\r\n=== VERY 1ST STEP ===\r\n\r\nBut 1st and the foremost thing you have to install the MySQL from the source package, doing it so you will get know the path and various other configuration files, if you prefer installing it directly it will only trouble you. So, download the .tar file from MySQL site and follow the Instruction to install, once you have done with installing now its time to move further.\r\n\r\n\'\'\'Installing MySQL from Source File....\'\'\'[[BR]]\r\nThe basic commands that you must execute to install a MySQL source distribution are:\r\n\r\n\r\n{{{\r\nshell> groupadd mysql\r\nshell> useradd -g mysql mysql\r\nshell> gunzip <>\r\nshell> cd mysql-VERSION\r\nshell> ./configure --prefix=/usr/local/mysql\r\nshell> make\r\nshell> make install\r\nshell> cp support-files/my-medium.cnf /etc/my.cnf\r\nshell> cd /usr/local/mysql\r\nshell> chown -R mysql .\r\nshell> chgrp -R mysql .\r\nshell> bin/mysql_install_db --user=mysql\r\n\r\n========================================\r\nFATAL ERROR: Could not find mysqld\r\n\r\nThe following directories were searched:\r\n\r\n/usr/libexec\r\n/usr/sbin\r\n/usr/bin\r\n========================================\r\nIF THIS ERROR COMES THEN SIMPLY JUST DELETE THE /etc/mysql FOLDER\r\n\r\nFrom the source directory run:\r\ncp support-files/mysql.server /etc/init.d/mysql\r\nchmod 755 /etc/init.d/mysql\r\nchkconfig mysql on\r\nservice mysql start\r\n\r\n\r\nshell> chown -R root .\r\nshell> chown -R mysql var\r\nshell> bin/mysqld_safe --user=mysql &\r\n\r\nRESTART SYSTEM!!!!!!!!!!\r\n}}}\r\n\r\n----\r\n\r\n=== KEY CONCEPT ===\r\n\r\n* Remember as in case of JDBC we have to download the driver for MySQL Connection and place in the Apache Tomcat\'s lib directory and set the path in the .bashrc file, the concept is same here...[[BR]]\r\n\r\n* But 1 more extra step is needed here. The concept is that let the Python talk to MySQL using the driver for it and allow the Zope to talk to the MySQL by using ZMySQLDA adapter.\r\n\r\n----\r\n\r\n=== STEP BY STEP PROCEDURE ===\r\n\r\nIts Time to Start Congiguration....[[BR]]\r\n\r\n1. Download the Python MySQL Database Interface (MySQLdb),[http://www.zope.org/Members/adustman/Products/MySQLdb Download Here]\r\n\r\n2. Download Zope MySQL Database Adapter (ZMySQLDA),[http://www.zope.org/Members/adustman/Products/ZMySQLDA Download Here]\r\n\r\n3. Extract the MySQLdb .tar file and simply copy the extracted Directory in Zope add-on Products\r\n\r\n{{{\r\nDirectory Location which typically may be /usr/local/Plone/Zope-2.2******/lib/python/Products\r\n}}}\r\n\r\n\r\n4. Simillary Extract the ZMySQLDA .tar file and simply copy the extracted Directory in Zope add-on\r\nProducts.\r\n\r\n{{{\r\nDirectory Location which typically may be /usr/local/Plone/Zope-2.2*******/lib/python/Products\r\n}}}\r\n\r\n\r\n5. Now, see which version of python Zope is using so you have to use the python executable only bundled with the Zope otherwise MySQLdb will not be able to install or it will be installed in the wrong location which results that Zope will not be able to detect the ZMySQLDA Adapter.\r\n\r\n6.Typically if you have installed the Zope through Plone pacakge it may typically goes to the the location \'\'\'/usr/local/Plone/Python-2.4/bin/python\'\'\', once you have detected this then give the commands as written in the instruction in that package, like this....\r\n\r\n{{{\r\nexport ZOPEBIN=\"/usr/local/Plone/Python-2.4/bin/\"\r\n$ZOPEBIN/python setup.py build\r\n(If you have not installed the MySQL by source it will retun error like \'mysql_config\' file not found)\r\n$ZOPEBIN/python setup.py install\r\n}}}\r\n\r\n\r\n\'\'\'NOTE:\'\'\'\r\nIf you are getting the following Error :\r\n\r\n{{{\r\nerror: command \'gcc\' failed with exit status 1\r\n}}}\r\n\r\nYou need to install the following package according to your machine configuration:\r\n\r\n{{{\r\nmysql-devel.i386 : Files for development of MySQL applications\r\nmysql-devel.x86_64 : Files for development of MySQL applications\r\n}}}\r\n\r\n\r\n7. After the installation is successful you can check the MySQLdb in the python interface like this:\r\n\r\n{{{\r\nroot@akshat-desktop:/home/akshat# $ZOPEBIN/python\r\nroot@akshat-desktop:/home/akshat# $ZOPEBIN/python\r\nPython 2.4.6 (#1, Jan 7 2010, 10:23:05)\r\n[GCC 4.3.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import MySQLdb;\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in\r\nImportError: No module named MySQLdb\r\n>>>\r\n}}}\r\n\r\nMeans something wrong happened during the installation..[[BR]]\r\nSo, check all the steps and again try unless you got no error...\r\n\r\nOne another error that can give you headache is like this...\r\n\r\n{{{\r\nPython 2.4.6 (#1, Jan 7 2010, 10:23:05)\r\n[GCC 4.3.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import MySQLdb;\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in ?\r\nFile \"/usr/local/Plone/Python-2.4/lib/python2.4/site-packages/MySQLdb/__init__.py\", line 27, in ?\r\nimport _mysql\r\nImportError: libmysqlclient_r.so.16: cannot open shared object file: No such file or directory\r\n}}}\r\n\r\nSo, remember while installing the MySQL export the path like this...\r\n\r\n{{{\r\nexport LD_LIBRARY_PATH=/usr/local/mysql/lib:$LD_LIBRARY_PATH\r\n(Assuming it is installed in /usr/local)\r\n}}}\r\n\r\n8. Finally Restart the Zope/Plone.\r\n\r\n9. Now go to the \'\'\'http://localhost:8080/manage\'\'\' at the dropdown you will found the Z MySQL Database Connection which you will add and later it will display a textbox where you have to pass string like this...\r\n\r\n{{{\r\nEnter a Database Connection String : ncra@localhost:8080 root secret where\r\nncra = Database Name in MySQL\r\n@localhost:8080 = host and Port Number which it is using\r\nroot = Username\r\nsecret = Password\r\n}}}\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('MySQLConfiguration',2,1302003355000000,'akshat','59.163.79.36','== MySQL Configuration in Zope / Plone ==\r\n\r\n=== WHAT IS ZOPE ===\r\n\r\nZope Click here to access its official Website (Z Object Publishing Environment) is an open source web application server written Python on which well known CMS Plone runs. Everything in the Zope is Objects the URL is used for connecting from one Object to another. As the question arises for making dynamic pages we need one database that can talk to Zope for fetching the information from from the Zope and rendering into the HTML Page. For Presentation point of view Zope uses DTML (Dynamic Template Markup Language) which consist of DTML Documents (having identity of their own) and DTML Method (having no identity of their own) but our theme is to connect it by MySQL without further going into details of other topic I will now explain how can we connect to MySQL to the Zope.\r\n\r\n----\r\n\r\n=== WHAT IS ZODB/GADFLY ===\r\n\r\nZope also has its own Database called ZODB (Z Object Database) which is a full featured Object database and has Gadfly which is a Relational Database which has limited capability. If you are using Object Database than ZODB works fine but in case of Relational database if you are having a high traffic site or mission critical project than this database is not recommended at all.\r\n\r\n----\r\n\r\n=== YOUR RDBMS ALREADY EXISTED ===\r\n\r\nThe other case may be that your database already existed in some other Database and you don\'t want to migrate to other database, here I will use MySQL Database to make a connection with Zope. The other database supported are Oracle, MySQL, SQL Server, PostgreSQL...\r\nTo set up a connection between the Database and the Zope you need:[[BR]]\r\nA. Database Connection and[[BR]]\r\nB. Z SQL Method which is used for making queries to the database.\r\n\r\n----\r\n\r\n=== VERY 1ST STEP ===\r\n\r\nBut 1st and the foremost thing you have to install the MySQL from the source package, doing it so you will get know the path and various other configuration files, if you prefer installing it directly it will only trouble you. So, download the .tar file from MySQL site and follow the Instruction to install, once you have done with installing now its time to move further.\r\n\r\n\'\'\'Installing MySQL from Source File....\'\'\'[[BR]]\r\nThe basic commands that you must execute to install a MySQL source distribution are:\r\n\r\n\r\n{{{\r\nshell> groupadd mysql\r\nshell> useradd -g mysql mysql\r\nshell> gunzip <>\r\nshell> cd mysql-VERSION\r\nshell> ./configure --prefix=/usr/local/mysql\r\nshell> make\r\nshell> make install\r\nshell> cp support-files/my-medium.cnf /etc/my.cnf\r\nshell> cd /usr/local/mysql\r\nshell> chown -R mysql .\r\nshell> chgrp -R mysql .\r\nshell> bin/mysql_install_db --user=mysql\r\n\r\n========================================\r\nFATAL ERROR: Could not find mysqld\r\n\r\nThe following directories were searched:\r\n\r\n/usr/libexec\r\n/usr/sbin\r\n/usr/bin\r\n========================================\r\nIF THIS ERROR COMES THEN SIMPLY JUST DELETE THE /etc/mysql FOLDER\r\n\r\nFrom the source directory run:\r\ncp support-files/mysql.server /etc/init.d/mysql\r\nchmod 755 /etc/init.d/mysql\r\nchkconfig mysql on\r\nservice mysql start\r\n\r\n\r\nshell> chown -R root .\r\nshell> chown -R mysql var\r\nshell> bin/mysqld_safe --user=mysql &\r\n\r\nRESTART SYSTEM!!!!!!!!!!\r\n}}}\r\n\r\n----\r\n\r\n=== KEY CONCEPT ===\r\n\r\n* Remember as in case of JDBC we have to download the driver for MySQL Connection and place in the Apache Tomcat\'s lib directory and set the path in the .bashrc file, the concept is same here...[[BR]]\r\n\r\n* But 1 more extra step is needed here. The concept is that let the Python talk to MySQL using the driver for it and allow the Zope to talk to the MySQL by using ZMySQLDA adapter.\r\n\r\n----\r\n\r\n=== STEP BY STEP PROCEDURE ===\r\n\r\nIts Time to Start Congiguration....[[BR]]\r\n\r\n1. Download the Python MySQL Database Interface (MySQLdb),[http://www.zope.org/Members/adustman/Products/MySQLdb Download Here]\r\n\r\n2. Download Zope MySQL Database Adapter (ZMySQLDA),[http://www.zope.org/Members/adustman/Products/ZMySQLDA Download Here]\r\n\r\n3. Extract the MySQLdb .tar file and simply copy the extracted Directory in Zope add-on Products\r\n\r\n{{{\r\nDirectory Location which typically may be /usr/local/Plone/Zope-2.2******/lib/python/Products\r\n}}}\r\n\r\n\r\n4. Simillary Extract the ZMySQLDA .tar file and simply copy the extracted Directory in Zope add-on\r\nProducts.\r\n\r\n{{{\r\nDirectory Location which typically may be /usr/local/Plone/Zope-2.2*******/lib/python/Products\r\n}}}\r\n\r\n\r\n5. Now, see which version of python Zope is using so you have to use the python executable only bundled with the Zope otherwise MySQLdb will not be able to install or it will be installed in the wrong location which results that Zope will not be able to detect the ZMySQLDA Adapter.\r\n\r\n6.Typically if you have installed the Zope through Plone pacakge it may typically goes to the the location \'\'\'/usr/local/Plone/Python-2.4/bin/python\'\'\', once you have detected this then give the commands as written in the instruction in that package, like this....\r\n\r\n{{{\r\nexport ZOPEBIN=\"/usr/local/Plone/Python-2.4/bin/\"\r\n$ZOPEBIN/python setup.py build\r\n(If you have not installed the MySQL by source it will retun error like \'mysql_config\' file not found)\r\n$ZOPEBIN/python setup.py install\r\n}}}\r\n\r\n\r\n\'\'\'NOTE:\'\'\'\r\nIf you are getting the following Error :\r\n\r\n{{{\r\nerror: command \'gcc\' failed with exit status 1\r\n}}}\r\n\r\nYou need to install the following package according to your machine configuration:\r\n\r\n{{{\r\nmysql-devel.i386 : Files for development of MySQL applications\r\nmysql-devel.x86_64 : Files for development of MySQL applications\r\n}}}\r\n\r\n\r\n7. After the installation is successful you can check the MySQLdb in the python interface like this:\r\n\r\n{{{\r\nroot@akshat-desktop:/home/akshat# $ZOPEBIN/python\r\nroot@akshat-desktop:/home/akshat# $ZOPEBIN/python\r\nPython 2.4.6 (#1, Jan 7 2010, 10:23:05)\r\n[GCC 4.3.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import MySQLdb;\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in\r\nImportError: No module named MySQLdb\r\n>>>\r\n}}}\r\n\r\nMeans something wrong happened during the installation..[[BR]]\r\nSo, check all the steps and again try unless you got no error...\r\n\r\nOne another error that can give you headache is like this...\r\n\r\n{{{\r\nPython 2.4.6 (#1, Jan 7 2010, 10:23:05)\r\n[GCC 4.3.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import MySQLdb;\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in ?\r\nFile \"/usr/local/Plone/Python-2.4/lib/python2.4/site-packages/MySQLdb/__init__.py\", line 27, in ?\r\nimport _mysql\r\nImportError: libmysqlclient_r.so.16: cannot open shared object file: No such file or directory\r\n}}}\r\n\r\nSo, remember while installing the MySQL export the path like this...\r\n\r\n{{{\r\nexport LD_LIBRARY_PATH=/usr/local/mysql/lib:$LD_LIBRARY_PATH\r\n(Assuming it is installed in /usr/local)\r\n}}}\r\n\r\n8. Finally Restart the Zope / Plone.\r\n\r\n9. Now go to the \'\'\'http://localhost:8080/manage\'\'\' at the dropdown you will found the Z MySQL Database Connection which you will add and later it will display a textbox where you have to pass string like this...\r\n\r\n{{{\r\nEnter a Database Connection String : ncra@localhost:8080 root secret where\r\nncra = Database Name in MySQL\r\n@localhost:8080 = host and Port Number which it is using\r\nroot = Username\r\nsecret = Password\r\n}}}\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('MySQLConfiguration',3,1302080859000000,'akshat','158.144.16.5','== MySQL CONFIGURATION IN ZOPE / PLONE ==\r\n\r\n=== WHAT IS ZOPE ===\r\n\r\nZope Click here to access its official Website (Z Object Publishing Environment) is an open source web application server written Python on which well known CMS Plone runs. Everything in the Zope is Objects the URL is used for connecting from one Object to another. As the question arises for making dynamic pages we need one database that can talk to Zope for fetching the information from from the Zope and rendering into the HTML Page. For Presentation point of view Zope uses DTML (Dynamic Template Markup Language) which consist of DTML Documents (having identity of their own) and DTML Method (having no identity of their own) but our theme is to connect it by MySQL without further going into details of other topic I will now explain how can we connect to MySQL to the Zope.\r\n\r\n----\r\n\r\n=== WHAT IS ZODB/GADFLY ===\r\n\r\nZope also has its own Database called ZODB (Z Object Database) which is a full featured Object database and has Gadfly which is a Relational Database which has limited capability. If you are using Object Database than ZODB works fine but in case of Relational database if you are having a high traffic site or mission critical project than this database is not recommended at all.\r\n\r\n----\r\n\r\n=== YOUR RDBMS ALREADY EXISTED ===\r\n\r\nThe other case may be that your database already existed in some other Database and you don\'t want to migrate to other database, here I will use MySQL Database to make a connection with Zope. The other database supported are Oracle, MySQL, SQL Server, PostgreSQL...\r\nTo set up a connection between the Database and the Zope you need:[[BR]]\r\nA. Database Connection and[[BR]]\r\nB. Z SQL Method which is used for making queries to the database.\r\n\r\n----\r\n\r\n=== VERY 1ST STEP ===\r\n\r\nBut 1st and the foremost thing you have to install the MySQL from the source package, doing it so you will get know the path and various other configuration files, if you prefer installing it directly it will only trouble you. So, download the .tar file from MySQL site and follow the Instruction to install, once you have done with installing now its time to move further.\r\n\r\n\'\'\'Installing MySQL from Source File....\'\'\'[[BR]]\r\nThe basic commands that you must execute to install a MySQL source distribution are:\r\n\r\n\r\n{{{\r\nshell> groupadd mysql\r\nshell> useradd -g mysql mysql\r\nshell> gunzip <>\r\nshell> cd mysql-VERSION\r\nshell> ./configure --prefix=/usr/local/mysql\r\nshell> make\r\nshell> make install\r\nshell> cp support-files/my-medium.cnf /etc/my.cnf\r\nshell> cd /usr/local/mysql\r\nshell> chown -R mysql .\r\nshell> chgrp -R mysql .\r\nshell> bin/mysql_install_db --user=mysql\r\n\r\n========================================\r\nFATAL ERROR: Could not find mysqld\r\n\r\nThe following directories were searched:\r\n\r\n/usr/libexec\r\n/usr/sbin\r\n/usr/bin\r\n========================================\r\nIF THIS ERROR COMES THEN SIMPLY JUST DELETE THE /etc/mysql FOLDER\r\n\r\nFrom the source directory run:\r\ncp support-files/mysql.server /etc/init.d/mysql\r\nchmod 755 /etc/init.d/mysql\r\nchkconfig mysql on\r\nservice mysql start\r\n\r\n\r\nshell> chown -R root .\r\nshell> chown -R mysql var\r\nshell> bin/mysqld_safe --user=mysql &\r\n\r\nRESTART SYSTEM!!!!!!!!!!\r\n}}}\r\n\r\n----\r\n\r\n=== KEY CONCEPT ===\r\n\r\n* Remember as in case of JDBC we have to download the driver for MySQL Connection and place in the Apache Tomcat\'s lib directory and set the path in the .bashrc file, the concept is same here...[[BR]]\r\n\r\n* But 1 more extra step is needed here. The concept is that let the Python talk to MySQL using the driver for it and allow the Zope to talk to the MySQL by using ZMySQLDA adapter.\r\n\r\n----\r\n\r\n=== STEP BY STEP PROCEDURE ===\r\n\r\nIts Time to Start Congiguration....[[BR]]\r\n\r\n1. Download the Python MySQL Database Interface (MySQLdb),[http://www.zope.org/Members/adustman/Products/MySQLdb Download Here]\r\n\r\n2. Download Zope MySQL Database Adapter (ZMySQLDA),[http://www.zope.org/Members/adustman/Products/ZMySQLDA Download Here]\r\n\r\n3. Extract the MySQLdb .tar file and simply copy the extracted Directory in Zope add-on Products\r\n\r\n{{{\r\nDirectory Location which typically may be /usr/local/Plone/Zope-2.2******/lib/python/Products\r\n}}}\r\n\r\n\r\n4. Simillary Extract the ZMySQLDA .tar file and simply copy the extracted Directory in Zope add-on\r\nProducts.\r\n\r\n{{{\r\nDirectory Location which typically may be /usr/local/Plone/Zope-2.2*******/lib/python/Products\r\n}}}\r\n\r\n\r\n5. Now, see which version of python Zope is using so you have to use the python executable only bundled with the Zope otherwise MySQLdb will not be able to install or it will be installed in the wrong location which results that Zope will not be able to detect the ZMySQLDA Adapter.\r\n\r\n6.Typically if you have installed the Zope through Plone pacakge it may typically goes to the the location \'\'\'/usr/local/Plone/Python-2.4/bin/python\'\'\', once you have detected this then give the commands as written in the instruction in that package, like this....\r\n\r\n{{{\r\nexport ZOPEBIN=\"/usr/local/Plone/Python-2.4/bin/\"\r\n$ZOPEBIN/python setup.py build\r\n(If you have not installed the MySQL by source it will retun error like \'mysql_config\' file not found)\r\n$ZOPEBIN/python setup.py install\r\n}}}\r\n\r\n\r\n\'\'\'NOTE:\'\'\'\r\nIf you are getting the following Error :\r\n\r\n{{{\r\nerror: command \'gcc\' failed with exit status 1\r\n}}}\r\n\r\nYou need to install the following package according to your machine configuration:\r\n\r\n{{{\r\nmysql-devel.i386 : Files for development of MySQL applications\r\nmysql-devel.x86_64 : Files for development of MySQL applications\r\n}}}\r\n\r\n\r\n7. After the installation is successful you can check the MySQLdb in the python interface like this:\r\n\r\n{{{\r\nroot@akshat-desktop:/home/akshat# $ZOPEBIN/python\r\nroot@akshat-desktop:/home/akshat# $ZOPEBIN/python\r\nPython 2.4.6 (#1, Jan 7 2010, 10:23:05)\r\n[GCC 4.3.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import MySQLdb;\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in\r\nImportError: No module named MySQLdb\r\n>>>\r\n}}}\r\n\r\nMeans something wrong happened during the installation..[[BR]]\r\nSo, check all the steps and again try unless you got no error...\r\n\r\nOne another error that can give you headache is like this...\r\n\r\n{{{\r\nPython 2.4.6 (#1, Jan 7 2010, 10:23:05)\r\n[GCC 4.3.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import MySQLdb;\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in ?\r\nFile \"/usr/local/Plone/Python-2.4/lib/python2.4/site-packages/MySQLdb/__init__.py\", line 27, in ?\r\nimport _mysql\r\nImportError: libmysqlclient_r.so.16: cannot open shared object file: No such file or directory\r\n}}}\r\n\r\nSo, remember while installing the MySQL export the path like this...\r\n\r\n{{{\r\nexport LD_LIBRARY_PATH=/usr/local/mysql/lib:$LD_LIBRARY_PATH\r\n(Assuming it is installed in /usr/local)\r\n}}}\r\n\r\n8. Finally Restart the Zope / Plone.\r\n\r\n9. Now go to the \'\'\'http://localhost:8080/manage\'\'\' at the dropdown you will found the Z MySQL Database Connection which you will add and later it will display a textbox where you have to pass string like this...\r\n\r\n{{{\r\nEnter a Database Connection String : ncra@localhost:8080 root secret\r\nwhere....\r\nncra = Name of the Database in MySQL\r\n@localhost:8080 = host and Port Number it is using\r\nroot = Username\r\nsecret = Password\r\n}}}\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('MySQLConfiguration',4,1397143708989908,'admin','192.168.0.13','== MySQL CONFIGURATION IN ZOPE / PLONE ==\r\n\r\n=== WHAT IS ZOPE ===\r\n\r\nZope Click here to access its official Website (Z Object Publishing Environment) is an open source web application server written Python on which well known CMS Plone runs. Everything in the Zope is Objects the URL is used for connecting from one Object to another. As the question arises for making dynamic pages we need one database that can talk to Zope for fetching the information from from the Zope and rendering into the HTML Page. For Presentation point of view Zope uses DTML (Dynamic Template Markup Language) which consist of DTML Documents (having identity of their own) and DTML Method (having no identity of their own) but our theme is to connect it by MySQL without further going into details of other topic I will now explain how can we connect to MySQL to the Zope.\r\n\r\n----\r\n\r\n=== WHAT IS ZODB/GADFLY ===\r\n\r\nZope also has its own Database called ZODB (Z Object Database) which is a full featured Object database and has Gadfly which is a Relational Database which has limited capability. If you are using Object Database than ZODB works fine but in case of Relational database if you are having a high traffic site or mission critical project than this database is not recommended at all.\r\n\r\n----\r\n\r\n=== YOUR RDBMS ALREADY EXISTED ===\r\n\r\nThe other case may be that your database already existed in some other Database and you don\'t want to migrate to other database, here I will use MySQL Database to make a connection with Zope. The other database supported are Oracle, MySQL, SQL Server, PostgreSQL...\r\nTo set up a connection between the Database and the Zope you need:[[BR]]\r\nA. Database Connection and[[BR]]\r\nB. Z SQL Method which is used for making queries to the database.\r\n\r\n----\r\n\r\n=== VERY 1ST STEP ===\r\n\r\nBut 1st and the foremost thing you have to install the MySQL from the source package, doing it so you will get know the path and various other configuration files, if you prefer installing it directly it will only trouble you. So, download the .tar file from MySQL site and follow the Instruction to install, once you have done with installing now its time to move further.\r\n\r\n\'\'\'Installing MySQL from Source File....\'\'\'[[BR]]\r\nThe basic commands that you must execute to install a MySQL source distribution are:\r\n\r\n\r\n{{{\r\nshell> groupadd mysql\r\nshell> useradd -g mysql mysql\r\nshell> gunzip <>\r\nshell> cd mysql-VERSION\r\nshell> ./configure --prefix=/usr/local/mysql\r\nshell> make\r\nshell> make install\r\nshell> cp support-files/my-medium.cnf /etc/my.cnf\r\nshell> cd /usr/local/mysql\r\nshell> chown -R mysql .\r\nshell> chgrp -R mysql .\r\nshell> bin/mysql_install_db --user=mysql\r\n\r\n========================================\r\nFATAL ERROR: Could not find mysqld\r\n\r\nThe following directories were searched:\r\n\r\n/usr/libexec\r\n/usr/sbin\r\n/usr/bin\r\n========================================\r\nIF THIS ERROR COMES THEN SIMPLY JUST DELETE THE /etc/mysql FOLDER\r\n\r\nFrom the source directory run:\r\ncp support-files/mysql.server /etc/init.d/mysql\r\nchmod 755 /etc/init.d/mysql\r\nchkconfig mysql on\r\nservice mysql start\r\n\r\n\r\nshell> chown -R root .\r\nshell> chown -R mysql var\r\nshell> bin/mysqld_safe --user=mysql &\r\n\r\nRESTART SYSTEM!!!!!!!!!!\r\n}}}\r\n\r\n----\r\n\r\n=== KEY CONCEPT ===\r\n\r\n* Remember as in case of JDBC we have to download the driver for MySQL Connection and place in the Apache Tomcat\'s lib directory and set the path in the .bashrc file, the concept is same here...[[BR]]\r\n\r\n* But 1 more extra step is needed here. The concept is that let the Python talk to MySQL using the driver for it and allow the Zope to talk to the MySQL by using ZMySQLDA adapter.\r\n\r\n----\r\n\r\n=== STEP BY STEP PROCEDURE ===\r\n\r\nIts Time to Start Congiguration....[[BR]]\r\n\r\n1. Download the Python MySQL Database Interface (MySQLdb),[http://www.zope.org/Members/adustman/Products/MySQLdb Download Here]\r\n\r\n2. Download Zope MySQL Database Adapter (ZMySQLDA),[http://www.zope.org/Members/adustman/Products/ZMySQLDA Download Here]\r\n\r\n3. Extract the MySQLdb .tar file and simply copy the extracted Directory in Zope add-on Products\r\n\r\n{{{\r\nDirectory Location which typically may be /usr/local/Plone/Zope-2.2******/lib/python/Products\r\n}}}\r\n\r\n\r\n4. Simillary Extract the ZMySQLDA .tar file and simply copy the extracted Directory in Zope add-on\r\nProducts.\r\n\r\n{{{\r\nDirectory Location which typically may be /usr/local/Plone/Zope-2.2*******/lib/python/Products\r\n}}}\r\n\r\n\r\n5. Now, see which version of python Zope is using so you have to use the python executable only bundled with the Zope otherwise MySQLdb will not be able to install or it will be installed in the wrong location which results that Zope will not be able to detect the ZMySQLDA Adapter.\r\n\r\n6.Typically if you have installed the Zope through Plone pacakge it may typically goes to the the location \'\'\'/usr/local/Plone/Python-2.4/bin/python\'\'\', once you have detected this then give the commands as written in the instruction in that package, like this....\r\n\r\n{{{\r\nexport ZOPEBIN=\"/usr/local/Plone/Python-2.4/bin/\"\r\n$ZOPEBIN/python setup.py build\r\n(If you have not installed the MySQL by source it will retun error like \'mysql_config\' file not found)\r\n$ZOPEBIN/python setup.py install\r\n}}}\r\n\r\n\r\n\'\'\'NOTE:\'\'\'\r\nIf you are getting the following Error :\r\n\r\n{{{\r\nerror: command \'gcc\' failed with exit status 1\r\n}}}\r\n\r\nYou need to install the following package according to your machine configuration:\r\n\r\n{{{\r\nmysql-devel.i386 : Files for development of MySQL applications\r\nmysql-devel.x86_64 : Files for development of MySQL applications\r\n}}}\r\n\r\n\r\n7. After the installation is successful you can check the MySQLdb in the python interface like this:\r\n\r\n{{{\r\nroot@akshat-desktop:/home/akshat# $ZOPEBIN/python\r\nroot@akshat-desktop:/home/akshat# $ZOPEBIN/python\r\nPython 2.4.6 (#1, Jan 7 2010, 10:23:05)\r\n[GCC 4.3.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import MySQLdb;\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in\r\nImportError: No module named MySQLdb\r\n>>>\r\n}}}\r\n\r\nMeans something wrong happened during the installation..[[BR]]\r\nSo, check all the steps and again try unless you got no error...\r\n\r\nOne another error that can give you headache is like this...\r\n\r\n{{{\r\nPython 2.4.6 (#1, Jan 7 2010, 10:23:05)\r\n[GCC 4.3.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import MySQLdb;\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in ?\r\nFile \"/usr/local/Plone/Python-2.4/lib/python2.4/site-packages/MySQLdb/__init__.py\", line 27, in ?\r\nimport _mysql\r\nImportError: libmysqlclient_r.so.16: cannot open shared object file: No such file or directory\r\n}}}\r\n\r\nSo, remember while installing the MySQL export the path like this...\r\n\r\n{{{\r\nexport LD_LIBRARY_PATH=/usr/local/mysql/lib:$LD_LIBRARY_PATH\r\n(Assuming it is installed in /usr/local)\r\n}}}\r\n\r\n8. Finally Restart the Zope / Plone.\r\n\r\n9. Now go to the \'\'\'http://localhost:8080/manage\'\'\' at the dropdown you will found the Z MySQL Database Connection which you will add and later it will display a textbox where you have to pass string like this...\r\n\r\n{{{\r\nEnter a Database Connection String : ncra@localhost:8080 root secret\r\nwhere....\r\nncra = Name of the Database in MySQL\r\n@localhost:8080 = host and Port Number it is using\r\nroot = Username\r\nsecret = Password\r\n}}}\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]\r\n----','',0),('NewPackagesInstallation',1,1302002197000000,'akshat','59.163.79.36','== How to install new Packages in Plone ==\r\n\r\nTo install an egg-based product, first unpack your theme product (if in a .tgz, .tar.gz or zip archive).[[BR]]\r\nNow, Copy the package to the src/ folder of your buildout. Then, edit your buildout.cfg and add the following information into the buildout, instance, and zcml sections. The actual buildout.cfg file will be much longer than the snippets below:\r\n\r\n\r\n{{{\r\n[buildout]\r\n...\r\ndevelop =\r\nsrc/plonetheme.yourtheme (where yourtheme is the name of the theme you downloaded)\r\n\r\n[instance]\r\neggs =\r\n...\r\nplonetheme.yourtheme\r\n\r\nzcml =\r\n...\r\nplonetheme.yourtheme\r\n}}}\r\n\r\n\r\nThe last line tells buildout to generate a ZCML snippet (slug) that tells Zope to recognize your theme product, prefixed by the namespace (plonetheme is the default). The dots [...] indicate that you may have additional lines of ZCML code here. If another package depends on the theme egg or includes its ZCML directly, you do not need to specify anything in the buildout configuration; buildout will detect this automatically. This is considered a more advanced topic.\r\n\r\nAfter updating the configuration you need to run the \'\'bin/buildout\'\', which will refresh your buildout.\r\n\r\nThen, restart your site and go to the \'Site Setup\' page in the Plone interface and click on the \'Add/Remove Products\' link. The \'Site Setup\' area is also known as plone_control_panel, as this is the URL used to get to \'Site Setup\'.\r\n\r\nChoose the product by selecting the checkbox next to it and click the \'Install\' button.\r\n\r\n\r\nTo install older version of product simply copy the package after extracting into products directory....\r\n\r\ntypical location may be...\r\n\r\n{{{\r\n/usr/local/Plone/zinstance/products\r\n}}}\r\n\r\nThen, restart your site and go to the \'Site Setup\' page in the Plone interface and click on the \'Add/Remove Products\' link.\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('NewPackagesInstallation',2,1302002232000000,'akshat','59.163.79.36','== How to install new Packages in Plone ==\r\n\r\nTo install an egg-based product, first unpack your theme product (if in a .tgz, .tar.gz or zip archive).[[BR]]\r\n\r\nNow, Copy the package to the src/ folder of your buildout. Then, edit your buildout.cfg and add the following information into the buildout, instance, and zcml sections. The actual buildout.cfg file will be much longer than the snippets below:\r\n\r\n\r\n{{{\r\n[buildout]\r\n...\r\ndevelop =\r\nsrc/plonetheme.yourtheme (where yourtheme is the name of the theme you downloaded)\r\n\r\n[instance]\r\neggs =\r\n...\r\nplonetheme.yourtheme\r\n\r\nzcml =\r\n...\r\nplonetheme.yourtheme\r\n}}}\r\n\r\n\r\nThe last line tells buildout to generate a ZCML snippet (slug) that tells Zope to recognize your theme product, prefixed by the namespace (plonetheme is the default). The dots [...] indicate that you may have additional lines of ZCML code here. If another package depends on the theme egg or includes its ZCML directly, you do not need to specify anything in the buildout configuration; buildout will detect this automatically. This is considered a more advanced topic.\r\n\r\nAfter updating the configuration you need to run the \'\'bin/buildout\'\', which will refresh your buildout.\r\n\r\nThen, restart your site and go to the \'Site Setup\' page in the Plone interface and click on the \'Add/Remove Products\' link. The \'Site Setup\' area is also known as plone_control_panel, as this is the URL used to get to \'Site Setup\'.\r\n\r\nChoose the product by selecting the checkbox next to it and click the \'Install\' button.\r\n\r\n\r\nTo install older version of product simply copy the package after extracting into products directory....\r\n\r\ntypical location may be...\r\n\r\n{{{\r\n/usr/local/Plone/zinstance/products\r\n}}}\r\n\r\nThen, restart your site and go to the \'Site Setup\' page in the Plone interface and click on the \'Add/Remove Products\' link.\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('NewPackagesInstallation',3,1302002442000000,'akshat','59.163.79.36','== How to install new Packages in Plone ==\r\n\r\nTo install an egg-based product, first unpack your theme product (if in a .tgz, .tar.gz or zip archive).[[BR]]\r\n\r\nNow, Copy the package to the src/ folder of your buildout. Then, edit your buildout.cfg and add the following information into the buildout, instance, and zcml sections. The actual buildout.cfg file will be much longer than the snippets below:\r\n\r\n\r\n{{{\r\n[buildout]\r\n...\r\ndevelop =\r\nsrc/plone_package.package (where plone_package.package is the name of the package you downloaded)\r\n\r\n[instance]\r\neggs =\r\n...\r\nplone_package.package\r\n\r\nzcml =\r\n...\r\nplone_package.package\r\n}}}\r\n\r\n\r\nThe last line tells buildout to generate a ZCML snippet (slug) that tells Zope to recognize your theme product, prefixed by the namespace (plone_package is the default). The dots [...] indicate that you may have additional lines of ZCML code here. If another package depends on the theme egg or includes its ZCML directly, you do not need to specify anything in the buildout configuration; buildout will detect this automatically.\r\n\r\nAfter updating the configuration you need to run the \'\'\'bin/buildout\'\'\', which will refresh your buildout.\r\n\r\nThen, restart your site and go to the \'Site Setup\' page in the Plone interface and click on the \'Add/Remove Products\' link. The \'Site Setup\' area is also known as plone_control_panel, as this is the URL used to get to \'Site Setup\'.\r\n\r\nChoose the product by selecting the checkbox next to it and click the \'\'\'Install\'\'\' button.\r\n\r\n\r\nTo install older version of product simply copy the package after extracting into products directory....\r\n\r\ntypical location may be...\r\n\r\n{{{\r\n/usr/local/Plone/zinstance/products\r\n}}}\r\n\r\nThen, restart your site and go to the \'\'\'Site Setup\'\'\' page in the Plone interface and click on the \'\'\'Add/Remove Products\'\'\' link.\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('NewPackagesInstallation',4,1302080948000000,'akshat','158.144.16.5','== How to install new Packages in Plone ==\r\n\r\nTo install an egg-based product, first unpack your theme product (if in a .tgz, .tar.gz or zip archive).[[BR]]\r\n\r\nNow, Copy the package to the src/ folder of your buildout. Then, edit your buildout.cfg and add the following information into the buildout, instance, and zcml sections. The actual buildout.cfg file will be much longer than the snippets below:\r\n\r\n\r\n{{{\r\n[buildout]\r\n...\r\ndevelop =\r\nsrc/plone_package.package (where plone_package.package is the name of the package you downloaded)\r\n\r\n[instance]\r\neggs =\r\n...\r\nplone_package.package\r\n\r\nzcml =\r\n...\r\nplone_package.package\r\n}}}\r\n\r\n\r\nThe last line tells buildout to generate a ZCML snippet (slug) that tells Zope to recognize your theme product, prefixed by the namespace (plone_package is the default). The dots [...] indicate that you may have additional lines of ZCML code here. If another package depends on the theme egg or includes its ZCML directly, you do not need to specify anything in the buildout configuration; buildout will detect this automatically.\r\n\r\nAfter updating the configuration you need to run the \'\'\'bin/buildout\'\'\', which will refresh your buildout.\r\n\r\nThen, restart your site and go to the \'Site Setup\' page in the Plone interface and click on the \'Add / Remove Products\' link. The \'Site Setup\' area is also known as plone_control_panel, as this is the URL used to get to \'Site Setup\'.\r\n\r\nChoose the product by selecting the checkbox next to it and click the \'\'\'Install\'\'\' button.\r\n\r\n\r\nTo install older version of product simply copy the package after extracting into products directory....\r\n\r\ntypical location may be...\r\n\r\n{{{\r\n/usr/local/Plone/zinstance/products\r\n}}}\r\n\r\nThen, restart your site and go to the \'\'\'Site Setup\'\'\' page in the Plone interface and click on the \'\'\'Add/Remove Products\'\'\' link.\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('NewPackagesInstallation',5,1397143752871687,'admin','192.168.0.13','== How to install new Packages in Plone ==\r\n\r\nTo install an egg-based product, first unpack your theme product (if in a .tgz, .tar.gz or zip archive).[[BR]]\r\n\r\nNow, Copy the package to the src/ folder of your buildout. Then, edit your buildout.cfg and add the following information into the buildout, instance, and zcml sections. The actual buildout.cfg file will be much longer than the snippets below:\r\n\r\n\r\n{{{\r\n[buildout]\r\n...\r\ndevelop =\r\nsrc/plone_package.package (where plone_package.package is the name of the package you downloaded)\r\n\r\n[instance]\r\neggs =\r\n...\r\nplone_package.package\r\n\r\nzcml =\r\n...\r\nplone_package.package\r\n}}}\r\n\r\n\r\nThe last line tells buildout to generate a ZCML snippet (slug) that tells Zope to recognize your theme product, prefixed by the namespace (plone_package is the default). The dots [...] indicate that you may have additional lines of ZCML code here. If another package depends on the theme egg or includes its ZCML directly, you do not need to specify anything in the buildout configuration; buildout will detect this automatically.\r\n\r\nAfter updating the configuration you need to run the \'\'\'bin/buildout\'\'\', which will refresh your buildout.\r\n\r\nThen, restart your site and go to the \'Site Setup\' page in the Plone interface and click on the \'Add / Remove Products\' link. The \'Site Setup\' area is also known as plone_control_panel, as this is the URL used to get to \'Site Setup\'.\r\n\r\nChoose the product by selecting the checkbox next to it and click the \'\'\'Install\'\'\' button.\r\n\r\n\r\nTo install older version of product simply copy the package after extracting into products directory....\r\n\r\ntypical location may be...\r\n\r\n{{{\r\n/usr/local/Plone/zinstance/products\r\n}}}\r\n\r\nThen, restart your site and go to the \'\'\'Site Setup\'\'\' page in the Plone interface and click on the \'\'\'Add/Remove Products\'\'\' link.\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]\r\n----','',0),('OpenSSL',1,1398091771294245,'akshat','192.168.0.18','[[Image(htdocs:OpenSSL/Heartbleed.png,150px,right)]]\r\n\r\n== OpenSSL ==\r\n\r\nOpenSSL is an open-source implementation of the SSL and TLS protocols. The core library, written in the C programming language, implements the basic cryptographic functions and provides various utility functions.\r\n\r\n=== Known Bug ===\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">Heartbleed</h1>\r\n}}}\r\n\r\nThe recent detection of heartbleed vulnerability in openssl is dangerous as most of us are making use of online transaction.\r\n\r\nThe Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. This weakness allows stealing the information protected, under normal conditions, by the SSL/TLS encryption used to secure the Internet. SSL/TLS provides communication security and privacy over the Internet for applications such as web, email, instant messaging (IM) and some virtual private networks (VPNs).\r\n\r\nThe Heartbleed bug allows anyone on the Internet to read the memory of the systems protected by the vulnerable versions of the OpenSSL software. This compromises the secret keys used to identify the service providers and to encrypt the traffic, the names and passwords of the users and the actual content. This allows attackers to eavesdrop on communications, steal data directly from the services and users and to impersonate services and users.\r\n\r\nSo, update the openssl library as soon as possible because this is the library responsible for providing encryption for our sensitive security information compromising with this is compromising with the our security as these days we are doing most of the banking transaction online.\r\n\r\n=== Help ===\r\nThe openssl 1.0.1(a-f) has this vulnerability, openssl 1.0.1g does not have this bug. Many old OS (Cent OS 5, RHEL 5) has older version of openssl which does not have this vulnerability. For checking version you have to type the following command on your Linux/ Unix /Mac systems.\r\n\r\n{{{\r\n$ openssl version -a\r\n}}}\r\n\r\n\r\nIf it is built on or after \'\'\' 7 April 2014\'\'\', then this bug is fixed. In Redhat / CentOS / Fedora, this bug is fixed using back porting. The version may not be openssl 1.0.1g through normal update procedure. It is advised not to update using tar ball as future updates will be affected.\r\n\r\nFor upgrading please refer :\r\n[https://www.digitalocean.com/community/articles/how-to-protect-your-server-against-the-heartbleed-openssl-vulnerability Upgrade OpenSSL] and make sure the latest built is of 07th April 2014 or after that.\r\n\r\n\r\n=== How it attacks ===\r\n[[Image(htdocs:OpenSSL/HeartbleedDescription.png,360px,center)]]\r\n\r\nHeartbeat provides a way to test and keep alive secure communication links without the need to renegotiate the connection each time. \r\n\r\nHeartbleed is exploited by sending a malformed heartbeat request with a small payload and large length field to the server in order to elicit the server\'s response, permitting attackers to read up to 64 kilobytes of server memory that was likely to have been used previously by OpenSSL. Where a Heartbeat Request might ask the server to \"send back the four-letter word \'bird\'\", resulting in a server response of \"bird\", a malicious Heartbleed Request of \"send back the 500-letter word \'hat\'\" would cause the server to return \"hat\" followed by whatever 497 characters the server happened to have in active memory. Attackers in this way could receive sensitive data, compromising the security of the server and its users. Vulnerable data include the server\'s private master key, which would enable attackers to decrypt current or stored traffic via passive eavesdropping (if perfect forward secrecy is not used by the server and client), or active man-in-the-middle attacks if perfect forward secrecy is used. The attacker cannot control which data are returned, as OpenSSL typically responds with the chunks of memory it has most recently discarded.\r\n\r\nThe affected versions of OpenSSL allocate a memory buffer for the message to be returned based on the length field in the requesting message, without regard to the size of actual payload in that message. Because of this failure to do proper bounds checking, the message returned consists of the requested payload followed by whatever else happened to be in the allocated memory buffer. The problem was compounded by OpenSSL\'s decision to write its own version of the C dynamic memory allocation (malloc and free) routines. As a result, the oversized memory buffer returned to the requestor was likely to contain data from memory blocks that had been previously requested and freed by OpenSSL. Such memory blocks may contain sensitive data sent by users or even the private keys used by OpenSSL. In addition, by using its own memory management routines OpenSSL bypassed mitigation measures in some operating systems that might have detected or neutralized the bug.\r\n\r\nThe bug might also reveal unencrypted parts of users\' requests and responses, including any form post data in users\' requests, session cookies and passwords, which might allow attackers to hijack the identity of another user of the service.\r\n\r\nFor more info please refer...[[BR]]\r\n[http://en.wikipedia.org/wiki/Heartbleed Wiki][[BR]]\r\n[http://heartbleed.com hearbleed]','',0),('OpenSSL',2,1398092721921612,'akshat','192.168.0.18','[[Image(Heartbleed.svg,150px,right)]]\r\n\r\n== OpenSSL ==\r\n\r\nOpenSSL is an open-source implementation of the SSL and TLS protocols. The core library, written in the C programming language, implements the basic cryptographic functions and provides various utility functions.\r\n\r\n=== Known Bug ===\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">Heartbleed</h1>\r\n}}}\r\n\r\nThe recent detection of heartbleed vulnerability in openssl is dangerous as most of us are making use of online transaction.\r\n\r\nThe Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. This weakness allows stealing the information protected, under normal conditions, by the SSL/TLS encryption used to secure the Internet. SSL/TLS provides communication security and privacy over the Internet for applications such as web, email, instant messaging (IM) and some virtual private networks (VPNs).\r\n\r\nThe Heartbleed bug allows anyone on the Internet to read the memory of the systems protected by the vulnerable versions of the OpenSSL software. This compromises the secret keys used to identify the service providers and to encrypt the traffic, the names and passwords of the users and the actual content. This allows attackers to eavesdrop on communications, steal data directly from the services and users and to impersonate services and users.\r\n\r\nSo, update the openssl library as soon as possible because this is the library responsible for providing encryption for our sensitive security information compromising with this is compromising with the our security as these days we are doing most of the banking transaction online.\r\n\r\n=== Help ===\r\nThe openssl 1.0.1(a-f) has this vulnerability, openssl 1.0.1g does not have this bug. Many old OS (Cent OS 5, RHEL 5) has older version of openssl which does not have this vulnerability. For checking version you have to type the following command on your Linux/ Unix /Mac systems.\r\n\r\n{{{\r\n$ openssl version -a\r\n}}}\r\n\r\n\r\nIf it is built on or after \'\'\' 7 April 2014\'\'\', then this bug is fixed. In Redhat / CentOS / Fedora, this bug is fixed using back porting. The version may not be openssl 1.0.1g through normal update procedure. It is advised not to update using tar ball as future updates will be affected.\r\n\r\nFor upgrading please refer :\r\n[https://www.digitalocean.com/community/articles/how-to-protect-your-server-against-the-heartbleed-openssl-vulnerability Upgrade OpenSSL] and make sure the latest built is of 07th April 2014 or after that.\r\n\r\n=== Discovery ===\r\nAccording to Mark J. Cox of OpenSSL, Neel Mehta of Google\'s security team reported Heartbleed on April 1, 2014. The bug entailed a severe memory handling error in the implementation of the Transport Layer Security Heartbeat Extension. This defect could be used to reveal up to 64 kilobytes of the application\'s memory with every heartbeat.  According to Codenomicon, Neel Mehta first reported the bug to OpenSSL, but both Google and Codenomicon discovered it independently. Codenomicon reports April 3 as their date of discovery of the bug and as their date of notification of NCSC-FI (formerly known as CERT-FI) for vulnerability coordination.\r\n\r\n=== How it attacks ===\r\n[[Image(Simplified_Heartbleed_explanation.png,360px,center)]]\r\n\r\nHeartbeat provides a way to test and keep alive secure communication links without the need to renegotiate the connection each time. \r\n\r\nHeartbleed is exploited by sending a malformed heartbeat request with a small payload and large length field to the server in order to elicit the server\'s response, permitting attackers to read up to 64 kilobytes of server memory that was likely to have been used previously by OpenSSL. Where a Heartbeat Request might ask the server to \"send back the four-letter word \'bird\'\", resulting in a server response of \"bird\", a malicious Heartbleed Request of \"send back the 500-letter word \'hat\'\" would cause the server to return \"hat\" followed by whatever 497 characters the server happened to have in active memory. Attackers in this way could receive sensitive data, compromising the security of the server and its users. Vulnerable data include the server\'s private master key, which would enable attackers to decrypt current or stored traffic via passive eavesdropping (if perfect forward secrecy is not used by the server and client), or active man-in-the-middle attacks if perfect forward secrecy is used. The attacker cannot control which data are returned, as OpenSSL typically responds with the chunks of memory it has most recently discarded.\r\n\r\nThe affected versions of OpenSSL allocate a memory buffer for the message to be returned based on the length field in the requesting message, without regard to the size of actual payload in that message. Because of this failure to do proper bounds checking, the message returned consists of the requested payload followed by whatever else happened to be in the allocated memory buffer. The problem was compounded by OpenSSL\'s decision to write its own version of the C dynamic memory allocation (malloc and free) routines. As a result, the oversized memory buffer returned to the requestor was likely to contain data from memory blocks that had been previously requested and freed by OpenSSL. Such memory blocks may contain sensitive data sent by users or even the private keys used by OpenSSL. In addition, by using its own memory management routines OpenSSL bypassed mitigation measures in some operating systems that might have detected or neutralized the bug.\r\n\r\nThe bug might also reveal unencrypted parts of users\' requests and responses, including any form post data in users\' requests, session cookies and passwords, which might allow attackers to hijack the identity of another user of the service.\r\n\r\n[Source: NCRA, Wiki and Codenomicon]\r\n\r\n\r\nFor more info please refer...[[BR]]\r\n[http://en.wikipedia.org/wiki/Heartbleed Wiki][[BR]]\r\n[http://heartbleed.com Heartbleed]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('PageTemplates',1,1291894092000000,'trac','127.0.0.1','= Wiki Page Templates = \n\n  \'\'(since [http://trac.edgewall.org/milestone/0.11 0.11])\'\'\n\nThe default content for a new wiki page can be chosen from a list of page templates. \n\nThat list is made up from all the existing wiki pages having a name starting with \'\'PageTemplates/\'\'.\nThe initial content of a new page will simply be the content of the chosen template page, or a blank page if the special \'\'(blank page)\'\' entry is selected. When there\'s actually no wiki pages matching that prefix, the initial content will always be the blank page and the list selector will not be shown (i.e. this matches the behavior we had up to now).\n\nTo create a new template, simply create a new page having a name starting with \'\'PageTemplates/\'\'.\n\n(Hint: one could even create a \'\'!PageTemplates/Template\'\' for facilitating the creation of new templates!)\n\nAfter you have created your new template, a drop-down selection box will automatically appear on any new wiki pages that are created.  By default it is located on the right side of the \'Create this page\' button.\n\nAvailable templates: \n[[TitleIndex(PageTemplates/)]]\n----\nSee also: TracWiki',NULL,NULL),('PageTemplates',2,1397068026230852,'trac','127.0.0.1','= Wiki Page Templates = \n\n  \'\'(since [http://trac.edgewall.org/milestone/0.11 0.11])\'\'\n\nThe default content for a new wiki page can be chosen from a list of page templates. \n\nThat list is generated from all the wiki pages having a name starting with \'\'PageTemplates/\'\'.\nThe initial content of a new page will simply be the content of the chosen template page, or a blank page if the special \'\'(blank page)\'\' entry is selected. When there are no wiki pages with the \'\'PageTemplates/\'\' prefix, the initial content will always be the blank page and the list selector will not be shown (i.e. this matches the behavior we had up to now).\n\nTo create a new template, simply create a new page having a name starting with \'\'PageTemplates/\'\'.\n\n(Hint: one could even create a \'\'!PageTemplates/Template\'\' for facilitating the creation of new templates!)\n\nAfter the first template has been created, a drop-down selection box will automatically appear on any new wiki pages that are created.  By default it is located on the right side of the \'Create this page\' button. The default selection will be \'\'blank page\'\', or \'\'!DefaultPage\'\' if \'\'!PageTemplates/DefaultPage\'\' exists.\n\nAvailable templates: \n[[TitleIndex(PageTemplates/)]]\n----\nSee also: TracWiki\n',NULL,NULL),('Plone',1,1301997549000000,'akshat','59.163.79.36','== Plone ==','',0),('Plone',2,1301997952000000,'akshat','59.163.79.36','== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n== Plone Architecture==\r\n\r\n[[Image(PloneArchitecture.png,500px,right)]]\r\n','',0),('Plone',3,1301998713000000,'akshat','59.163.79.36','== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n','',0),('Plone',4,1301999853000000,'akshat','59.163.79.36','== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n[wiki:Contents Contents]\r\n','',0),('Plone',5,1302003408000000,'akshat','59.163.79.36','== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n----\r\n[wiki:Contents Contents]\r\n\r\n----\r\n','',0),('Plone',6,1302003428000000,'akshat','59.163.79.36','== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n----\r\n[wiki:Contents Back to Contents]\r\n\r\n----\r\n','',0),('Plone',7,1302003953000000,'akshat','59.163.79.36','== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n----\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n','',0),('Plone',8,1302003995000000,'akshat','59.163.79.36','== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n----\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n----\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n----\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n----\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n','',0),('Plone',9,1302004040000000,'akshat','59.163.79.36','== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n----\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n----\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n----\r\n== Plone Installation and Configurations ==\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n----\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n','',0),('Plone',10,1313659923000000,'akshat','158.144.16.12','[[TOC]]\r\n== Plone ==\r\n\r\n[[Image(Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n----\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n----\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n----\r\n== Plone Installation and Configurations ==\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n----\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n','',0),('Plone',11,1397143595496665,'admin','192.168.0.13','[[TOC]]\r\n== Plone ==\r\n\r\n[[Image(/chrome/site/Plone/Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n----\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(/chrome/site/Plone/PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n----\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n----\r\n== Plone Installation and Configurations ==\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n----\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n','',0),('Plone',12,1397144412689433,'admin','192.168.0.13','[[TOC]]\r\n== Plone ==\r\n\r\n[[Image(htdocs:Plone/Plone.png,200px,right)]]\r\n\r\nPlone is basically a content management system (CMS) used for building websites so that ordinary people can also contribute contents to a website without being computer programmer. Plone basically needs a webserver on which it can run for this it uses Zope (Z Object Publishing Environment) application server which is written in Python.\r\n\r\n----\r\n\r\n== Plone Architecture ==\r\n\r\n[[Image(htdocs:Plone/PloneArchitecture.png,280px,right)]]\r\n\r\nThe Architecture of the Plone is shown in the Figure Plone is built on top of the Zope application server which serves as a default webserver for it. The major services which are provided by the Plone are:[[BR]]\r\n\r\nA. Content Types[[BR]]\r\nB. Membership Service[[BR]]\r\nC. Workflow[[BR]]\r\nD. Catalog Tools[[BR]]\r\n\r\nThese services are accessible to the Plone by its Plone User Interface which is a very user friendly web based interface running inside the web browser.[[BR]]\r\n\r\nThere are various types of contents in Plone which has their individual importance and characteristics. It has built in content items like Pages, News events, events, Links and favorites, Folders and collections. Plone also provides metadata which is basically describes the data about the data in order\r\nto keep things organized within large amounts of items which provides cataloging and able to locate single item within a large archive. Membership service provides the facility of user registration and their managements of their accounts later providing authentication for logging in and authorizing\r\nfor accessing various contents.[[BR]]\r\n\r\nBasically Workflow is a procedure of events that occurs to achieve the objective and this service controls the logic of processing content through the site. It can be configured through web based interface so that the administrator can make sites as needed like adding notification tools such as sending e-mails or instant messages to the users. In Plone various workflows are available like publishing of the contents private, pending, published, web configurable etc.[[BR]]\r\n\r\nSearching and cataloging is done by the cataloging service the first part of it is to build indexes of the content. In a Plone site when a search is done\r\nit search the indexes and the catalog will return matching results for that query.\r\n\r\n----\r\n\r\n== Working of Plone ==\r\nThe Plone websites works after installation of the Plone software on the webserver of the organization. This webserver can be anywhere like it can\r\nbe a rack webserver dedicated to the Plone or it can be a workstation. The Plone website for the organization is just a software and database software installed on one of the individual server. When we are adding, editing or managing the contents on the Plone software data is sent up and down the networking cables to interact with the Plone software installed on the server.\r\n\r\n----\r\n== Plone Installation and Configurations ==\r\n\r\n[wiki:PloneInstallation Plone Installation]\r\n\r\n[wiki:VariousPloneConfiguarion Various Plone Configuarion]\r\n\r\n----\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n','',0),('PloneInstallation',1,1301998998000000,'akshat','59.163.79.36','== Installation of Plone ==\r\n\r\nAmong the various open source content management system (CMS) available Plone was chosen for building the NCRA new website and managing web materials. Plone comes up with the easy installers for the various platform. Here at NCRA the platform that was chosen is Linux. The name of the Plone installer is Plone Unified Installer which is a source installation bundle that installs Plone and its dependencies from source on most Unix like platforms. The kit includes Plone, Zope and Python. The Python is installed in such a way that the Python which is used to be Plone will not change or interfere with the system’s default Python.\r\n\r\n[wiki:InstallationDetails Installation Details]\r\n\r\n[wiki:LibrariesNeeded Libraries Needed]\r\n\r\n[wiki:InstallationMethods Installation Methods]\r\n\r\n[wiki:InstallationOptions Installation Options]','',0),('PloneInstallation',2,1301999893000000,'akshat','59.163.79.36','== Installation of Plone ==\r\n\r\nAmong the various open source content management system (CMS) available Plone was chosen for building the NCRA new website and managing web materials. Plone comes up with the easy installers for the various platform. Here at NCRA the platform that was chosen is Linux. The name of the Plone installer is Plone Unified Installer which is a source installation bundle that installs Plone and its dependencies from source on most Unix like platforms. The kit includes Plone, Zope and Python. The Python is installed in such a way that the Python which is used to be Plone will not change or interfere with the system’s default Python.\r\n\r\n[wiki:InstallationDetails Installation Details]\r\n\r\n[wiki:InstallationMethods Installation Methods]\r\n\r\n[wiki:InstallationOptions Installation Options]\r\n\r\n[wiki:Plone Plone]','',0),('PloneInstallation',3,1301999912000000,'akshat','59.163.79.36','== Installation of Plone ==\r\n\r\nAmong the various open source content management system (CMS) available Plone was chosen for building the NCRA new website and managing web materials. Plone comes up with the easy installers for the various platform. Here at NCRA the platform that was chosen is Linux. The name of the Plone installer is Plone Unified Installer which is a source installation bundle that installs Plone and its dependencies from source on most Unix like platforms. The kit includes Plone, Zope and Python. The Python is installed in such a way that the Python which is used to be Plone will not change or interfere with the system’s default Python.\r\n\r\n[wiki:InstallationDetails Installation Details]\r\n\r\n[wiki:InstallationMethods Installation Methods]\r\n\r\n[wiki:InstallationOptions Installation Options]\r\n\r\n[wiki:Plone Back to Plone]','',0),('PloneInstallation',4,1302000505000000,'akshat','59.163.79.36','== Installation of Plone ==\r\n\r\nAmong the various open source content management system (CMS) available Plone was chosen for building the NCRA new website and managing web materials. Plone comes up with the easy installers for the various platform. Here at NCRA the platform that was chosen is Linux. The name of the Plone installer is Plone Unified Installer which is a source installation bundle that installs Plone and its dependencies from source on most Unix like platforms. The kit includes Plone, Zope and Python. The Python is installed in such a way that the Python which is used to be Plone will not change or interfere with the system’s default Python.\r\n\r\n[wiki:InstallationDetails Installation Details]\r\n\r\n[wiki:Installation Installation]\r\n\r\n[wiki:Plone Back to Plone]','',0),('PloneInstallation',5,1302000520000000,'akshat','59.163.79.36','== Installation of Plone ==\r\n\r\nAmong the various open source content management system (CMS) available Plone was chosen for building the NCRA new website and managing web materials. Plone comes up with the easy installers for the various platform. Here at NCRA the platform that was chosen is Linux. The name of the Plone installer is Plone Unified Installer which is a source installation bundle that installs Plone and its dependencies from source on most Unix like platforms. The kit includes Plone, Zope and Python. The Python is installed in such a way that the Python which is used to be Plone will not change or interfere with the system’s default Python.\r\n\r\n[wiki:InstallationDetails Installation Details]\r\n\r\n[wiki:Installation Installation]\r\n----\r\n\r\n[wiki:Plone Back to Plone]','',0),('Python',1,1402568786626231,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',2,1402568895305663,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[http://www.tutorialspoint.com/cplusplus/cpp_basic_syntax.htm C++ Tutorial]\r\n\r\n[http://www.cplusplus.com/doc/tutorial/structures/ Data Structures]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',3,1402569110027317,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',4,1402569972263996,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',5,1405347628539679,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',6,1407757616906411,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',7,1408519061164308,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',8,1408521621815251,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',9,1408532793153817,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== For Retrieving the filename form a Path ===\r\n\r\n{{{\r\n>>> os.path.basename(filename)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',10,1408622841955163,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== For Retrieving the base form a Path ===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(filename)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',11,1408623676300071,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(filename)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',12,1409135693295812,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(filename)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n}}}\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',13,1410936586401065,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(filename)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. For adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\n3. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n}}}\r\n\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',14,1411119135927510,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(filename)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. For adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\n3. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n4. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n}}}\r\n\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',15,1411362735416511,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(filename)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. For adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\n3. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n4. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',16,1411449759363141,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(filename)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(filename)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. For adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\n3. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n4. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',17,1411449836078198,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. For adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\n3. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n4. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',18,1413193862040467,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. For adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\n3. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n4. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n5. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',19,1415010036679799,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. For adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\n3. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n4. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n5. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n}}}\r\n\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',20,1415095641391670,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n\r\n\r\nCheck if a directory exists or not\r\n>>> os.path.isdir(\"/home/akshat/Desktop/Mars\")\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. For adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\n3. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n4. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n5. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n}}}\r\n\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',21,1415269518413031,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nFor adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n\r\n\r\nCheck if a directory exists or not\r\n>>> os.path.isdir(\"/home/akshat/Desktop/Mars\")\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n3. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n4. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n}}}\r\n\r\n\r\n=== Filtering out unique items fro a list ===\r\n{{{\r\n\r\n>>> print ax\r\n[\'aks\', \'akshat\', \'akshat singh\', \'akshat\', \'aks\', \'akshat\']\r\n\r\n>>> print set(ax)\r\nset([\'aks\', \'akshat singh\', \'akshat\'])\r\n\r\n}}}\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',22,1415355204412367,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nFor adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n\r\n\r\nCheck if a directory exists or not\r\n>>> os.path.isdir(\"/home/akshat/Desktop/Mars\")\r\n\r\n}}}\r\n\r\n\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n3. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n4. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n\r\n}}}\r\n\r\n\r\n=== Filtering out unique items fro a list ===\r\n{{{\r\n\r\n>>> print ax\r\n[\'aks\', \'akshat\', \'akshat singh\', \'akshat\', \'aks\', \'akshat\']\r\n\r\n>>> print set(ax)\r\nset([\'aks\', \'akshat singh\', \'akshat\'])\r\n\r\nTo make a list of the set as set doesn\'t supports indexing.\r\n>>> print list(set(ax))\r\n[\'aks\', \'akshat singh\', \'akshat\']\r\n\r\n}}}\r\n\r\n\r\n=== Check the extension ===\r\n{{{\r\n>>> \"akshat.tex\".endswith(\".tex\")\r\nTrue\r\n\r\n>>> \".DS_Store\".startswith(\".DS\")\r\nTrue\r\n\r\n}}}\r\n\r\n=== Check if a string is an integer or not ===\r\n{{{\r\ndef CheckInt(s):\r\n    try: \r\n        int(s)\r\n        return True\r\n    except ValueError:\r\n        return False\r\n\r\n>>> print CheckInt(\"+123\")\r\nTrue\r\n\r\n>>> print CheckInt(\"10.0\")\r\nFalse\r\n\r\n}}}\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',23,1415355899081913,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nFor adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n\r\n\r\nCheck if a directory exists or not\r\n>>> os.path.isdir(\"/home/akshat/Desktop/Mars\")\r\n\r\n\r\nTraversing the root, sub-directory and files of a given path\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for dir in dirs: # For creating a subdirectory based path.\r\n. . .                print os.path.join(root, dir)\r\n\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for file in files: # For creating a file based path.\r\n. . .                print os.path.join(root, file)\r\n\r\nList directory only at one level\r\n>>> for item in os.listdir(path):\r\n            print item\r\n\r\n}}}\r\n\r\n\r\n=== Function to traverse directory at the desired level ===\r\n{{{\r\ndef traverseDesiredPathLevel(path, level):\r\n    \"Function to traverse the path at the specified level.\"\r\n    level = level + 1\r\n    traversalPathList = []\r\n    for root, dirs, files in os.walk(os.path.join(path, \"\")):\r\n        root =  os.path.join(root, \"\")\r\n        groups = root.split(\'/\')\r\n        if not root.count(\"/\") < level:\r\n            traversalPathList.append(\'/\'.join(groups[:int(level)]))\r\n    return list(set(traversalPathList))\r\n\r\n}}}\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n3. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n4. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n\r\n}}}\r\n\r\n\r\n=== Filtering out unique items fro a list ===\r\n{{{\r\n\r\n>>> print ax\r\n[\'aks\', \'akshat\', \'akshat singh\', \'akshat\', \'aks\', \'akshat\']\r\n\r\n>>> print set(ax)\r\nset([\'aks\', \'akshat singh\', \'akshat\'])\r\n\r\nTo make a list of the set as set doesn\'t supports indexing.\r\n>>> print list(set(ax))\r\n[\'aks\', \'akshat singh\', \'akshat\']\r\n\r\n}}}\r\n\r\n\r\n=== Check the extension ===\r\n{{{\r\n>>> \"akshat.tex\".endswith(\".tex\")\r\nTrue\r\n\r\n>>> \".DS_Store\".startswith(\".DS\")\r\nTrue\r\n\r\n}}}\r\n\r\n=== Check if a string is an integer or not ===\r\n{{{\r\ndef CheckInt(string):\r\n    \"Function for checking the string is an integer or not.\"\r\n    try: \r\n        int(string)\r\n        return True\r\n    except ValueError:\r\n        return False\r\n\r\n>>> print CheckInt(\"+123\")\r\nTrue\r\n\r\n>>> print CheckInt(\"10.0\")\r\nFalse\r\n\r\n}}}\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',24,1415693822008791,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n== Installing python 2.6 on CentOS 5.x ==\r\n\r\n{{{\r\nDownload EPEL Repository\r\nwget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-1.noarch.rpm\r\nrpm -ivh epel-release-5-4.noarch.rpm\r\n\r\nInstall python 2.6\r\nyum install python26.x86_64\r\n\r\nReset the linking\r\nmv /usr/bin/python /usr/bin/python_ORG\r\nln -s /usr/bin/python26 /usr/bin/python\r\n\r\n}}}\r\n\r\n\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nFor adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n\r\n\r\nCheck if a directory exists or not\r\n>>> os.path.isdir(\"/home/akshat/Desktop/Mars\")\r\n\r\n\r\nTraversing the root, sub-directory and files of a given path\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for dir in dirs: # For creating a subdirectory based path.\r\n. . .                print os.path.join(root, dir)\r\n\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for file in files: # For creating a file based path.\r\n. . .                print os.path.join(root, file)\r\n\r\nList directory only at one level\r\n>>> for item in os.listdir(path):\r\n            print item\r\n\r\n}}}\r\n\r\n\r\n=== Function to traverse directory at the desired level ===\r\n{{{\r\ndef traverseDesiredPathLevel(path, level):\r\n    \"Function to traverse the path at the specified level.\"\r\n    level = level + 1\r\n    traversalPathList = []\r\n    for root, dirs, files in os.walk(os.path.join(path, \"\")):\r\n        root =  os.path.join(root, \"\")\r\n        groups = root.split(\'/\')\r\n        if not root.count(\"/\") < level:\r\n            traversalPathList.append(\'/\'.join(groups[:int(level)]))\r\n    return list(set(traversalPathList))\r\n\r\n}}}\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n3. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n4. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n\r\n}}}\r\n\r\n\r\n=== Filtering out unique items fro a list ===\r\n{{{\r\n\r\n>>> print ax\r\n[\'aks\', \'akshat\', \'akshat singh\', \'akshat\', \'aks\', \'akshat\']\r\n\r\n>>> print set(ax)\r\nset([\'aks\', \'akshat singh\', \'akshat\'])\r\n\r\nTo make a list of the set as set doesn\'t supports indexing.\r\n>>> print list(set(ax))\r\n[\'aks\', \'akshat singh\', \'akshat\']\r\n\r\n}}}\r\n\r\n\r\n=== Check the extension ===\r\n{{{\r\n>>> \"akshat.tex\".endswith(\".tex\")\r\nTrue\r\n\r\n>>> \".DS_Store\".startswith(\".DS\")\r\nTrue\r\n\r\n}}}\r\n\r\n=== Check if a string is an integer or not ===\r\n{{{\r\ndef CheckInt(string):\r\n    \"Function for checking the string is an integer or not.\"\r\n    try: \r\n        int(string)\r\n        return True\r\n    except ValueError:\r\n        return False\r\n\r\n>>> print CheckInt(\"+123\")\r\nTrue\r\n\r\n>>> print CheckInt(\"10.0\")\r\nFalse\r\n\r\n}}}\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',25,1415967251327160,'akshat','192.168.0.23','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n== Installing python 2.6 on CentOS 5.x ==\r\n\r\n{{{\r\nDownload EPEL Repository\r\nwget http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm\r\nrpm -ivh epel-release-5-4.noarch.rpm\r\n\r\nInstall python 2.6\r\nyum install python26.x86_64\r\n\r\nReset the linking\r\nmv /usr/bin/python /usr/bin/python_ORG\r\nln -s /usr/bin/python26 /usr/bin/python\r\n\r\n}}}\r\n\r\n\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nFor adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n\r\n\r\nCheck if a directory exists or not\r\n>>> os.path.isdir(\"/home/akshat/Desktop/Mars\")\r\n\r\n\r\nTraversing the root, sub-directory and files of a given path\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for dir in dirs: # For creating a subdirectory based path.\r\n. . .                print os.path.join(root, dir)\r\n\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for file in files: # For creating a file based path.\r\n. . .                print os.path.join(root, file)\r\n\r\nList directory only at one level\r\n>>> for item in os.listdir(path):\r\n            print item\r\n\r\n}}}\r\n\r\n\r\n=== Function to traverse directory at the desired level ===\r\n{{{\r\ndef traverseDesiredPathLevel(path, level):\r\n    \"Function to traverse the path at the specified level.\"\r\n    level = level + 1\r\n    traversalPathList = []\r\n    for root, dirs, files in os.walk(os.path.join(path, \"\")):\r\n        root =  os.path.join(root, \"\")\r\n        groups = root.split(\'/\')\r\n        if not root.count(\"/\") < level:\r\n            traversalPathList.append(\'/\'.join(groups[:int(level)]))\r\n    return list(set(traversalPathList))\r\n\r\n}}}\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n3. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n4. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n\r\n}}}\r\n\r\n\r\n=== Filtering out unique items fro a list ===\r\n{{{\r\n\r\n>>> print ax\r\n[\'aks\', \'akshat\', \'akshat singh\', \'akshat\', \'aks\', \'akshat\']\r\n\r\n>>> print set(ax)\r\nset([\'aks\', \'akshat singh\', \'akshat\'])\r\n\r\nTo make a list of the set as set doesn\'t supports indexing.\r\n>>> print list(set(ax))\r\n[\'aks\', \'akshat singh\', \'akshat\']\r\n\r\n}}}\r\n\r\n\r\n=== Check the extension ===\r\n{{{\r\n>>> \"akshat.tex\".endswith(\".tex\")\r\nTrue\r\n\r\n>>> \".DS_Store\".startswith(\".DS\")\r\nTrue\r\n\r\n}}}\r\n\r\n=== Check if a string is an integer or not ===\r\n{{{\r\ndef CheckInt(string):\r\n    \"Function for checking the string is an integer or not.\"\r\n    try: \r\n        int(string)\r\n        return True\r\n    except ValueError:\r\n        return False\r\n\r\n>>> print CheckInt(\"+123\")\r\nTrue\r\n\r\n>>> print CheckInt(\"10.0\")\r\nFalse\r\n\r\n}}}\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',26,1416905263100067,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n== Installing python 2.6 on CentOS 5.x ==\r\n\r\n{{{\r\nDownload EPEL Repository\r\nwget http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm\r\nrpm -ivh epel-release-5-4.noarch.rpm\r\n\r\nInstall python 2.6\r\nyum install python26.x86_64\r\n\r\nReset the linking\r\nmv /usr/bin/python /usr/bin/python_ORG\r\nln -s /usr/bin/python26 /usr/bin/python\r\n\r\n}}}\r\n\r\n\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nFor adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n\r\n\r\nCheck if a directory exists or not\r\n>>> os.path.isdir(\"/home/akshat/Desktop/Mars\")\r\n\r\n\r\nTraversing the root, sub-directory and files of a given path\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for dir in dirs: # For creating a subdirectory based path.\r\n. . .                print os.path.join(root, dir)\r\n\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for file in files: # For creating a file based path.\r\n. . .                print os.path.join(root, file)\r\n\r\nList directory only at one level\r\n>>> for item in os.listdir(path):\r\n            print item\r\n\r\n}}}\r\n\r\n\r\n=== Function to traverse directory at the desired level ===\r\n{{{\r\ndef traverseDesiredPathLevel(path, level):\r\n    \"Function to traverse the path at the specified level.\"\r\n    level = level + 1\r\n    traversalPathList = []\r\n    for root, dirs, files in os.walk(os.path.join(path, \"\")):\r\n        root =  os.path.join(root, \"\")\r\n        groups = root.split(\'/\')\r\n        if not root.count(\"/\") < level:\r\n            traversalPathList.append(\'/\'.join(groups[:int(level)]))\r\n    return list(set(traversalPathList))\r\n\r\n}}}\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n3. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n4. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n\r\n}}}\r\n\r\n\r\n=== Filtering out unique items fro a list ===\r\n{{{\r\n\r\n>>> print ax\r\n[\'aks\', \'akshat\', \'akshat singh\', \'akshat\', \'aks\', \'akshat\']\r\n\r\n>>> print set(ax)\r\nset([\'aks\', \'akshat singh\', \'akshat\'])\r\n\r\nTo make a list of the set as set doesn\'t supports indexing.\r\n>>> print list(set(ax))\r\n[\'aks\', \'akshat singh\', \'akshat\']\r\n\r\n}}}\r\n\r\n\r\n=== Check the extension ===\r\n{{{\r\n>>> \"akshat.tex\".endswith(\".tex\")\r\nTrue\r\n\r\n>>> \".DS_Store\".startswith(\".DS\")\r\nTrue\r\n\r\n}}}\r\n\r\n=== Check if a string is an integer or not ===\r\n{{{\r\ndef CheckInt(string):\r\n    \"Function for checking the string is an integer or not.\"\r\n    try: \r\n        int(string)\r\n        return True\r\n    except ValueError:\r\n        return False\r\n\r\n>>> print CheckInt(\"+123\")\r\nTrue\r\n\r\n>>> print CheckInt(\"10.0\")\r\nFalse\r\n\r\n}}}\r\n\r\n=== Difference of two lists ===\r\n{{{\r\n>>> diff = list(set(desiredFileList) - set(finalList))\r\n}}}\r\n\r\n=== Find that a string contains a keyword ===\r\n{{{\r\n>>> a = \"/sdna_fs/ADMINISTRATORDROPBOX/primary/Validate Tape Reports/L60162/tapevalidate-L60162-sep-disc-gfx-master.xml\"\r\n>>> a.find(\"sep-disc-gfx\")\r\n87\r\n\r\nIf it doesn\'t contains the value it will return back -1\r\n\r\n}}}\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Python',27,1416913849923708,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Python References</h2>\r\n}}}\r\n\r\n[[Image(Python.png,360px,right)]]\r\n\r\n== Installing python 2.6 on CentOS 5.x ==\r\n\r\n{{{\r\nDownload EPEL Repository\r\nwget http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm\r\nrpm -ivh epel-release-5-4.noarch.rpm\r\n\r\nInstall python 2.6\r\nyum install python26.x86_64\r\n\r\nReset the linking\r\nmv /usr/bin/python /usr/bin/python_ORG\r\nln -s /usr/bin/python26 /usr/bin/python\r\n\r\n}}}\r\n\r\n\r\n\r\n[http://www.python-course.eu/lambda.php Lambda Function]\r\n\r\n[https://wiki.python.org/moin/WebServices Python Webservices]\r\n\r\n=== Multiprocessing ===\r\n\r\n[https://docs.python.org/2/library/multiprocessing.html Multiprocessing Module]\r\n\r\n=== Subprocess Module ===\r\n\r\nThis module is used for calling an external command in Python.\r\n\r\n{{{\r\nExample:\r\n\r\nfrom subprocess import call\r\ncall([\"ls\", \"-l\"])\r\n\r\n}}}\r\n\r\n\r\n[http://pymotw.com/2/subprocess/ Subprocess Module PyMOTW]\r\n\r\n[https://docs.python.org/3.1/library/subprocess.html Subprocess Module Python Documentation]\r\n\r\n=== Command Line Arguments ===\r\n\r\n[http://codereview.stackexchange.com/questions/28608/checking-if-cli-arguments-are-valid-files-directories-in-python CLI argument Validation]\r\n\r\n[http://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/ Command Line Argument Parser - Nix Craft]\r\n\r\n[http://pymotw.com/2/argparse/ Command Line Argument Parser - Python Documentation]\r\n\r\n\r\n=== Hexadecimal Number Conversion to Decimal Number ===\r\n\r\n{{{\r\n>>> s = \"0x021f5c00\"\r\n>>> int(s, 16)\r\n35609600\r\n\r\n}}}\r\n\r\n=== Operating System Operations===\r\n\r\n{{{\r\nRetrieving the filename from the path\r\n>>> os.path.basename(path)\r\n\r\nRetrieving the full path from a path except filename\r\n>>> os.path.dirname(path)\r\n\r\nFor adding trailing slash if it is not present\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> os.path.join(path, \'\')\r\n\'/Users/akshat/Desktop/ExtractedData/LOGS/Log1/\'\r\n\r\nRetrieving the last directory from a path\r\n>>> os.path.basename(os.path.normpath(\'/DirA/DirB/DirC/DirD/\'))\r\n\'DirD\'\r\nThe first strips off any trailing slashes, the second gives the last part of the path. Using only basename gives everything after the last slash, which in this case is \'\'.\r\n\r\nRenaming a file in python\r\n>>> os.rename(SourceDirName, NewDirName)\r\n\r\nCopy a file or directory\r\n>>> import shutils\r\n>>>     try:\r\n. . . .     shutil.copy(inputFile, destination)\r\n. . . . except IOError, e:\r\n. . . .     logger.error(\"Unable to copy file. %s\" % e)\r\n\r\n\r\nCheck if a directory exists or not\r\n>>> os.path.isdir(\"/home/akshat/Desktop/Mars\")\r\n\r\n\r\nTraversing the root, sub-directory and files of a given path\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for dir in dirs: # For creating a subdirectory based path.\r\n. . .                print os.path.join(root, dir)\r\n\r\n>>>for root, dirs, files in os.walk(path):\r\n. . .       for file in files: # For creating a file based path.\r\n. . .                print os.path.join(root, file)\r\n\r\nList directory only at one level\r\n>>> for item in os.listdir(path):\r\n            print item\r\n\r\nFor seeing all the file modification, create time details etc.\r\n>>> os.stat(\"/path/to/filename/\")\r\n\r\n}}}\r\n\r\n\r\n=== Function to traverse directory at the desired level ===\r\n{{{\r\ndef traverseDesiredPathLevel(path, level):\r\n    \"Function to traverse the path at the specified level.\"\r\n    level = level + 1\r\n    traversalPathList = []\r\n    for root, dirs, files in os.walk(os.path.join(path, \"\")):\r\n        root =  os.path.join(root, \"\")\r\n        groups = root.split(\'/\')\r\n        if not root.count(\"/\") < level:\r\n            traversalPathList.append(\'/\'.join(groups[:int(level)]))\r\n    return list(set(traversalPathList))\r\n\r\n}}}\r\n\r\n=== Platform Module ===\r\n\r\nThe platform module in Python is used to access the underlying platform’s data such as, hardware, operating system and interpreter version information.\r\n\r\n{{{\r\nExample:\r\n\r\n>>> import platform\r\n>>> platform.system() \r\n\'Linux\'\r\nReturns the system/OS name, e.g. \'Linux\', \'Darwin\', or \'Java\'.\r\n\r\n>>> platform.platform()\r\n\'Linux-3.2.0-4-amd64-x86_64-with-debian-7.0\'\r\nReturns a single string identifying the underlying platform with as much useful information as possible.\r\n\r\n}}}\r\n\r\n[https://docs.python.org/2/library/platform.html Official Documentation]\r\n\r\n[http://www.pythonforbeginners.com/systems-programming/how-to-use-the-platform-module-in-python Using the Platform module in Python]\r\n\r\n=== XML Parsing - Element Tree XML API ===\r\nThe xml.etree.ElementTree module implements a simple and efficient API for parsing and creating XML data.\r\n\r\n[https://docs.python.org/2/library/xml.etree.elementtree.html Official Documentation]\r\n\r\n\r\n=== Some useful handy stuffs ===\r\n\r\n{{{\r\n1. Creating multiple dynamic lists\r\n>>> lists = [[] for _ in range(int(number)-1)]\r\n\r\n2. Split a string based on the delimiter\r\n>>> path.split(\'/\')\r\n\r\n3. Splitting on last delimiter in Python string\r\n>>>path.rsplit(\'/\')\r\n\r\n4. Splitting a string based on nth occurances\r\n>>> n = 3\r\n>>> path = \'/Users/akshat/Desktop/ExtractedData/LOGS/Log1\'\r\n>>> groups = path.split(\'/\')\r\n>>> \'/\'.join(groups[:n]), \'/\'.join(groups[n:])\r\n(\'/Users/akshat\', \'Desktop/ExtractedData/LOGS/Log1\')\r\n\r\n}}}\r\n\r\n\r\n=== Difference between `==` and `is` in python ===\r\n\r\n\'\'\'==\'\'\' is for value equality. Used for identifying if two objects have the same value. [[BR]]\r\n\'\'\'is\'\'\' is for reference equality. Used for identifying if two references refer to the same object.\r\n\r\n=== Timestamp in Python ===\r\n\r\n{{{\r\n>>> import time\r\n>>> import datetime\r\n\r\n>>> ts = time.time()\r\n>>> st = datetime.datetime.fromtimestamp(ts).strftime(\'%Y-%m-%d %H:%M:%S\')\r\n>>> print st\r\n2014-11-03 16:05:05\r\n\r\n}}}\r\n\r\n\r\n=== Filtering out unique items fro a list ===\r\n{{{\r\n\r\n>>> print ax\r\n[\'aks\', \'akshat\', \'akshat singh\', \'akshat\', \'aks\', \'akshat\']\r\n\r\n>>> print set(ax)\r\nset([\'aks\', \'akshat singh\', \'akshat\'])\r\n\r\nTo make a list of the set as set doesn\'t supports indexing.\r\n>>> print list(set(ax))\r\n[\'aks\', \'akshat singh\', \'akshat\']\r\n\r\n}}}\r\n\r\n\r\n=== Check the extension ===\r\n{{{\r\n>>> \"akshat.tex\".endswith(\".tex\")\r\nTrue\r\n\r\n>>> \".DS_Store\".startswith(\".DS\")\r\nTrue\r\n\r\n}}}\r\n\r\n=== Check if a string is an integer or not ===\r\n{{{\r\ndef CheckInt(string):\r\n    \"Function for checking the string is an integer or not.\"\r\n    try: \r\n        int(string)\r\n        return True\r\n    except ValueError:\r\n        return False\r\n\r\n>>> print CheckInt(\"+123\")\r\nTrue\r\n\r\n>>> print CheckInt(\"10.0\")\r\nFalse\r\n\r\n}}}\r\n\r\n=== Difference of two lists ===\r\n{{{\r\n>>> diff = list(set(desiredFileList) - set(finalList))\r\n}}}\r\n\r\n=== Find that a string contains a keyword ===\r\n{{{\r\n>>> a = \"/sdna_fs/ADMINISTRATORDROPBOX/primary/Validate Tape Reports/L60162/tapevalidate-L60162-sep-disc-gfx-master.xml\"\r\n>>> a.find(\"sep-disc-gfx\")\r\n87\r\n\r\nIf it doesn\'t contains the value it will return back -1\r\n\r\n}}}\r\n\r\n=== Important Links ===\r\n[https://docs.python.org/2/library/functions.htm Python Built in Functions]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Qt',1,1402571486814358,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Qt</h2>\r\n}}}\r\n\r\n\r\n=== Most used classes ===\r\n\r\n[http://doc.qt.digia.com/4.3/qcoreapplication.html QCoreApplication]\r\n\r\n[http://doc.qt.digia.com/4.3/qobject.html QObject]\r\n\r\n[http://doc.qt.digia.com/4.3/signalsandslots.html Signal and Slots]\r\n\r\n[http://doc.qt.digia.com/4.3/qprocess.html QProcess]\r\n\r\n[http://doc.qt.digia.com/4.3/qstring.html QString]\r\n\r\n[http://doc.qt.digia.com/4.3/qdir.html QDir]\r\n\r\n[http://doc.qt.digia.com/4.3/qfile.html QFile]\r\n\r\n[http://doc.qt.digia.com/4.3/qfileinfo.html QFileInfo]\r\n\r\n[http://doc.qt.digia.com/4.3/qlist.html QList]\r\n\r\n[http://doc.qt.digia.com/4.3/qbytearray.html QByteArray]\r\n\r\n[http://doc.qt.digia.com/4.3/qiodevice.html QIODevice]\r\n\r\n[http://doc.qt.digia.com/4.3/qsettings.html QSettings]\r\n\r\n[http://doc.qt.digia.com/4.3/qtimer.html QTimer]\r\n\r\n[http://doc.qt.digia.com/4.3/qvariant.html QVariant]\r\n\r\n----\r\n\r\n\'\'\'DOM Parsing Classes\'\'\'\r\n\r\n[http://doc.qt.digia.com/4.3/qdomattr.html QDomAttr]\r\n\r\n[http://doc.qt.digia.com/4.3/qdomdocument.html QDomDocument]\r\n\r\n[http://doc.qt.digia.com/4.3/qdomelement.html QDomElement]\r\n\r\n[http://doc.qt.digia.com/4.3/qdomentity.html QDomEntity]\r\n\r\n[http://doc.qt.digia.com/4.3/qdomnode.html QDomNode]\r\n\r\n----\r\n\r\n\'\'\'SAX Parsing Classes\'\'\'\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlattributes.html QXmlAttributes]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlcontenthandler.html QXmlContentHandler]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmldefaulthandler.html QXmlDefaultHandler]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlinputsource.html QXmlInputSource]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlreader.html QXmlReader]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlsimplereader.html QXmlSimpleReader]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlstreamwriter.html QXmlStreamWriter]\r\n\r\n\r\n----\r\n\r\n\'\'\'External Classes\'\'\'\r\n\r\n[http://quazip.sourceforge.net/ QuaZip]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Qt',2,1402571594018072,'akshat','192.168.0.18','{{{\r\n#!html\r\n<h2 style=\"text-align: Left; color: #191970\">Qt</h2>\r\n}}}\r\n\r\n=== All Classes ===\r\n\r\n[http://doc.qt.digia.com/4.3/classes.html All Classes]\r\n\r\n=== Most used classes ===\r\n\r\n[http://doc.qt.digia.com/4.3/qcoreapplication.html QCoreApplication]\r\n\r\n[http://doc.qt.digia.com/4.3/qobject.html QObject]\r\n\r\n[http://doc.qt.digia.com/4.3/signalsandslots.html Signal and Slots]\r\n\r\n[http://doc.qt.digia.com/4.3/qprocess.html QProcess]\r\n\r\n[http://doc.qt.digia.com/4.3/qstring.html QString]\r\n\r\n[http://doc.qt.digia.com/4.3/qdir.html QDir]\r\n\r\n[http://doc.qt.digia.com/4.3/qfile.html QFile]\r\n\r\n[http://doc.qt.digia.com/4.3/qfileinfo.html QFileInfo]\r\n\r\n[http://doc.qt.digia.com/4.3/qlist.html QList]\r\n\r\n[http://doc.qt.digia.com/4.3/qbytearray.html QByteArray]\r\n\r\n[http://doc.qt.digia.com/4.3/qiodevice.html QIODevice]\r\n\r\n[http://doc.qt.digia.com/4.3/qsettings.html QSettings]\r\n\r\n[http://doc.qt.digia.com/4.3/qtimer.html QTimer]\r\n\r\n[http://doc.qt.digia.com/4.3/qvariant.html QVariant]\r\n\r\n----\r\n\r\n\'\'\'DOM Parsing Classes\'\'\'\r\n\r\n[http://doc.qt.digia.com/4.3/qdomattr.html QDomAttr]\r\n\r\n[http://doc.qt.digia.com/4.3/qdomdocument.html QDomDocument]\r\n\r\n[http://doc.qt.digia.com/4.3/qdomelement.html QDomElement]\r\n\r\n[http://doc.qt.digia.com/4.3/qdomentity.html QDomEntity]\r\n\r\n[http://doc.qt.digia.com/4.3/qdomnode.html QDomNode]\r\n\r\n----\r\n\r\n\'\'\'SAX Parsing Classes\'\'\'\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlattributes.html QXmlAttributes]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlcontenthandler.html QXmlContentHandler]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmldefaulthandler.html QXmlDefaultHandler]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlinputsource.html QXmlInputSource]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlreader.html QXmlReader]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlsimplereader.html QXmlSimpleReader]\r\n\r\n[http://doc.qt.digia.com/4.3/qxmlstreamwriter.html QXmlStreamWriter]\r\n\r\n\r\n----\r\n\r\n\'\'\'External Classes\'\'\'\r\n\r\n[http://quazip.sourceforge.net/ QuaZip]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('RecentChanges',1,1291894092000000,'trac','127.0.0.1','\'\'\' [TitleIndex Index by Title] \'\'\' | \'\'\' Index by Date \'\'\'\n\n[[RecentChanges]]',NULL,NULL),('RedHat',1,1321528454000000,'akshat','158.144.16.12','===RED HAT====\r\n\r\n\'\'\'Installing Free and Nonfree Repositories\'\'\'\r\n----\r\nRHEL 6 or compatible like CentOS:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download1.rpmfusion.org/free/el/updates/testing/6/i386/rpmfusion-free-release-6-0.1.noarch.rpm http://download1.rpmfusion.org/nonfree/el/updates/testing/6/i386/rpmfusion-nonfree-release-6-0.1.noarch.rpm\'\r\n}}}\r\n\r\nFor more information Click Here\r\n\r\n\'\'\'Important note : \'\'\'\r\nYou need to enable EPEL on RHEL 5 & 6 or compatible distributions like CentOS before you enable RPM Fusion for EL.\r\n\r\nFor EL6:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download.fedora.redhat.com/pub/epel/6/i386/epel-release-6-5.noarch.rpm\'\r\n...\r\nsu -c \'yum install foo\'\r\n}}}\r\n\r\n\r\n','',0),('RedHat',2,1321528517000000,'akshat','158.144.16.12','===RED HAT====\r\n\r\n\'\'\'Installing Free and Nonfree Repositories\'\'\'\r\n----\r\nRHEL 6 or compatible like CentOS:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download1.rpmfusion.org/free/el/updates/testing/6/i386/rpmfusion-free-release-6-0.1.noarch.rpm http://download1.rpmfusion.org/nonfree/el/updates/testing/6/i386/rpmfusion-nonfree-release-6-0.1.noarch.rpm\'\r\n}}}\r\n\r\nFor more information Click Here\r\n\r\n\'\'\'Important note : \'\'\'\r\nYou need to enable EPEL on RHEL 5 & 6 or compatible distributions like CentOS before you enable RPM Fusion for EL.\r\n\r\nFor EL6:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download.fedora.redhat.com/pub/epel/6/i386/epel-release-6-5.noarch.rpm\'\r\n...\r\nsu -c \'yum install foo\'\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n','',0),('RedHat',3,1321528835000000,'akshat','158.144.16.12','===RED HAT====\r\n\r\n\'\'\'Installing Free and Nonfree Repositories\'\'\'\r\n----\r\nRHEL 6 or compatible like CentOS:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download1.rpmfusion.org/free/el/updates/testing/6/i386/rpmfusion-free-release-6-0.1.noarch.rpm http://download1.rpmfusion.org/nonfree/el/updates/testing/6/i386/rpmfusion-nonfree-release-6-0.1.noarch.rpm\'\r\n}}}\r\n\r\nFor more information [http://rpmfusion.org/Configuration Click Here] and more about [http://rpmfusion.org/ RPM Fusion]\r\n\r\n\'\'\'Important note : \'\'\'\r\nWe need to enable EPEL on RHEL 5 & 6 or compatible distributions like CentOS before enabling RPM Fusion for EL.\r\n\r\nFor EL6:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download.fedora.redhat.com/pub/epel/6/i386/epel-release-6-5.noarch.rpm\'\r\n...\r\nsu -c \'yum install foo\'\r\n}}}\r\n\r\nFor more information [http://fedoraproject.org/wiki/EPEL/FAQ#howtouse Click Here]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n','',0),('RedHat',4,1321528907000000,'akshat','158.144.16.12','= RED HAT =\r\n\r\n\'\'\'Installing Free and Nonfree Repositories\'\'\'\r\n----\r\nRHEL 6 or compatible like CentOS:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download1.rpmfusion.org/free/el/updates/testing/6/i386/rpmfusion-free-release-6-0.1.noarch.rpm http://download1.rpmfusion.org/nonfree/el/updates/testing/6/i386/rpmfusion-nonfree-release-6-0.1.noarch.rpm\'\r\n}}}\r\n\r\nFor more information [http://rpmfusion.org/Configuration Click Here] and more about [http://rpmfusion.org/ RPM Fusion]\r\n\r\n\'\'\'Important note : \'\'\'\r\nWe need to enable EPEL on RHEL 5 & 6 or compatible distributions like CentOS before enabling RPM Fusion for EL.\r\n\r\nFor EL6:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download.fedora.redhat.com/pub/epel/6/i386/epel-release-6-5.noarch.rpm\'\r\n...\r\nsu -c \'yum install foo\'\r\n}}}\r\n\r\nFor more information [http://fedoraproject.org/wiki/EPEL/FAQ#howtouse Click Here]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n','',0),('RedHat',5,1321784974000000,'akshat','158.144.16.12','= RED HAT =\r\n\r\n\'\'\'Installing Free and Nonfree Repositories\'\'\'\r\n----\r\nRHEL 6 or compatible like CentOS:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download1.rpmfusion.org/free/el/updates/testing/6/i386/rpmfusion-free-release-6-0.1.noarch.rpm http://download1.rpmfusion.org/nonfree/el/updates/testing/6/i386/rpmfusion-nonfree-release-6-0.1.noarch.rpm\'\r\n}}}\r\n\r\nFor more information [http://rpmfusion.org/Configuration Click Here] and more about [http://rpmfusion.org/ RPM Fusion]\r\n\r\n\'\'\'Important note : \'\'\'\r\nWe need to enable EPEL on RHEL 5 & 6 or compatible distributions like CentOS before enabling RPM Fusion for EL.\r\n\r\nFor EL6:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download.fedora.redhat.com/pub/epel/6/i386/epel-release-6-5.noarch.rpm\'\r\n...\r\nsu -c \'yum install foo\'\r\n}}}\r\n\r\nFor more information [http://fedoraproject.org/wiki/EPEL/FAQ#howtouse Click Here]\r\n\r\n\r\n= INSTALLING MySQL on RHEL 6 =\r\n\r\n[http://www.if-not-true-then-false.com/2010/install-mysql-on-fedora-centos-red-hat-rhel/ Click Here]\r\n\r\n[http://rpm.pbone.net/index.php3/stat/4/idpl/12078663/dir/redhat_el_5/com/perl-DBD-mysql-4.010-1.el5.rf.x86_64.rpm.html For Supporting Libraries Click Here]\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n','',0),('RedHat',6,1321785038000000,'akshat','158.144.16.12','= RED HAT =\r\n\r\n\'\'\'Installing Free and Nonfree Repositories\'\'\'\r\n----\r\nRHEL 6 or compatible like CentOS:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download1.rpmfusion.org/free/el/updates/testing/6/i386/rpmfusion-free-release-6-0.1.noarch.rpm http://download1.rpmfusion.org/nonfree/el/updates/testing/6/i386/rpmfusion-nonfree-release-6-0.1.noarch.rpm\'\r\n}}}\r\n\r\nFor more information [http://rpmfusion.org/Configuration Click Here] and more about [http://rpmfusion.org/ RPM Fusion]\r\n\r\n\'\'\'Important note : \'\'\'\r\nWe need to enable EPEL on RHEL 5 & 6 or compatible distributions like CentOS before enabling RPM Fusion for EL.\r\n\r\nFor EL6:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download.fedora.redhat.com/pub/epel/6/i386/epel-release-6-5.noarch.rpm\'\r\n...\r\nsu -c \'yum install foo\'\r\n}}}\r\n\r\nFor more information [http://fedoraproject.org/wiki/EPEL/FAQ#howtouse Click Here]\r\n\r\n----\r\n\r\n= INSTALLING MySQL on RHEL 6 =\r\n\r\n[http://www.if-not-true-then-false.com/2010/install-mysql-on-fedora-centos-red-hat-rhel/ Click Here for Installation Instructions]\r\n\r\n[http://rpm.pbone.net/index.php3/stat/4/idpl/12078663/dir/redhat_el_5/com/perl-DBD-mysql-4.010-1.el5.rf.x86_64.rpm.html For Supporting Libraries Click Here]\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n\r\n','',0),('RedHat',7,1405346947582745,'akshat','192.168.0.18','= RED HAT =\r\n[[Image(RedHat.jpg,150px,right)]]\r\n\r\n\'\'\'Installing Free and Nonfree Repositories\'\'\'\r\n----\r\nRHEL 6 or compatible like CentOS:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download1.rpmfusion.org/free/el/updates/testing/6/i386/rpmfusion-free-release-6-0.1.noarch.rpm http://download1.rpmfusion.org/nonfree/el/updates/testing/6/i386/rpmfusion-nonfree-release-6-0.1.noarch.rpm\'\r\n}}}\r\n\r\nFor more information [http://rpmfusion.org/Configuration Click Here] and more about [http://rpmfusion.org/ RPM Fusion]\r\n\r\n\'\'\'Important note : \'\'\'\r\nWe need to enable EPEL on RHEL 5 & 6 or compatible distributions like CentOS before enabling RPM Fusion for EL.\r\n\r\nFor EL6:\r\n\r\n{{{\r\nsu -c \'rpm -Uvh http://download.fedora.redhat.com/pub/epel/6/i386/epel-release-6-5.noarch.rpm\'\r\n...\r\nsu -c \'yum install foo\'\r\n}}}\r\n\r\nFor more information [http://fedoraproject.org/wiki/EPEL/FAQ#howtouse Click Here]\r\n\r\n----\r\n\r\n= INSTALLING MySQL on RHEL 6 =\r\n\r\n[http://www.if-not-true-then-false.com/2010/install-mysql-on-fedora-centos-red-hat-rhel/ Click Here for Installation Instructions]\r\n\r\n[http://rpm.pbone.net/index.php3/stat/4/idpl/12078663/dir/redhat_el_5/com/perl-DBD-mysql-4.010-1.el5.rf.x86_64.rpm.html For Supporting Libraries Click Here]\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Samba',1,1397572433328386,'akshat','192.168.0.8','== Samba ==\r\n\r\nSamba is a cross platform free and opensource software and it is a re-implementation of the SMB/CIFS networking protocol. It is written in C/C++/Python\r\n\r\n\r\n=== Samba usage at storageDNA ===\r\nIn Linux connect to the samba server by your file browser with the following instructions.\r\n\r\n{{{\r\nIP : 192.168.0.20\r\n\r\nNow, connect to SDNA_DROPDIR\r\n}}}\r\n\r\nFor MAC OS X go to the Finder menus and browse to Go and then Connect to server, after that enter the credentials.\r\n\r\n{{{\r\nFinder -> Menu -> Go -> Connect to Server -> Enter IP -> Enter Password -> Connect\r\n}}}\r\n\r\n\r\n=== Installing Samba ===\r\n{{{\r\nStep 1: Install through yum command.\r\n$ yum install -y samba samba-commons cups-libs\r\n\r\n\r\nStep 2: create a directory to share\r\n$ mkdir /SDNA_DROPDIR\r\n\r\nStep 3: Add a new group or use existing group to provide access on shared directory\r\n$ groupadd staff\r\n\r\nStep 4: Change the group and permission of sharing folder\r\n$ chgrp -R staff /SDNA_DROPDIR\r\n$ chmod -R 777 /SDNA_DROPDIR\r\n\r\nStep 5: Create user and add them in group called staff. And set the samba password for this user.\r\n$ useradd akshat\r\n$ usermod -G staff akshat\r\n$ smbpasswd -a akshat\r\n\r\nStep 6: Edit the smb.conf file. And add the given parameter in last line of /etc/samba/smb.conf file\r\n$ vim /etc/samba/smb.conf\r\n \r\n    [SDNA_DROPDIR]\r\n    comment = StorageDNA Shared Drive.\r\n    path = /SDNA_DROPDIR\r\n    public = no\r\n    valid users = test, @staff\r\n    writable = yes\r\n    browseable = yes\r\n    create mask = 0765\r\n}}}\r\n\r\n\r\n=== Adding a new Shared directory ===\r\nEdit the samba configuration file which is sitting at /etc/samba/smb.conf. [[BR]]\r\nTo configure the samba for more shared directories first create the directory needs to be shared then follow the procedures as described above and finally append the following configuration at the end of the file.\r\n\r\n{{{\r\n[aks_Shared]\r\n        comment = added for Srinivas testing.\r\n        path = /home/sdnabbase/aks_Shared\r\n        public = no\r\n        valid users = sdnabbase, @staff\r\n        writable = yes\r\n        browseable = yes\r\n        create mask = 0765\r\n}}}\r\n\r\nNow restart the samba server by killing the process id and start the daemon.\r\n\r\na. Kill the process id with the following command :\r\n\r\n{{{\r\n$ smbd -i\r\nsmbd version 4.1.4 started.\r\nCopyright Andrew Tridgell and the Samba Team 1992-2013\r\nERROR: smbd is already running. File /run/smbd.pid exists and process id 8576 is running.\r\n$ kill -9 8576\r\n}}}\r\n\r\n\r\nb. Start the samba daemon :\r\n\r\n{{{\r\n$ smbd -D\r\n}}}\r\n\r\n[[BR]]\r\n\r\n\'\'\'NOTE :\'\'\' PLEASE DELETE YOUR FILES AFTER USAGE FROM THE SAMBA SHARED DRIVE.\r\n\r\n----\r\n=== References ===\r\n[http://en.wikipedia.org/wiki/Samba_(software) Wikipedia][[BR]]\r\n[http://www.samba.org Samba official Website]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Samba',2,1435141231653244,'akshat','127.3.17.1','== Samba ==\r\n\r\nSamba is a cross platform free and opensource software and it is a re-implementation of the SMB/CIFS networking protocol. It is written in C/C++/Python\r\n\r\n\r\n=== Samba usage ===\r\nIn Linux connect to the samba server by your file browser with the following instructions.\r\n\r\n{{{\r\nIP : 192.168.0.20\r\n\r\nNow, connect to SDNA_DROPDIR\r\n}}}\r\n\r\nFor MAC OS X go to the Finder menus and browse to Go and then Connect to server, after that enter the credentials.\r\n\r\n{{{\r\nFinder -> Menu -> Go -> Connect to Server -> Enter IP -> Enter Password -> Connect\r\n}}}\r\n\r\n\r\n=== Installing Samba ===\r\n{{{\r\nStep 1: Install through yum command.\r\n$ yum install -y samba samba-commons cups-libs\r\n\r\n\r\nStep 2: create a directory to share\r\n$ mkdir /SDNA_DROPDIR\r\n\r\nStep 3: Add a new group or use existing group to provide access on shared directory\r\n$ groupadd staff\r\n\r\nStep 4: Change the group and permission of sharing folder\r\n$ chgrp -R staff /SDNA_DROPDIR\r\n$ chmod -R 777 /SDNA_DROPDIR\r\n\r\nStep 5: Create user and add them in group called staff. And set the samba password for this user.\r\n$ useradd akshat\r\n$ usermod -G staff akshat\r\n$ smbpasswd -a akshat\r\n\r\nStep 6: Edit the smb.conf file. And add the given parameter in last line of /etc/samba/smb.conf file\r\n$ vim /etc/samba/smb.conf\r\n \r\n    [SDNA_DROPDIR]\r\n    comment = Shared Drive.\r\n    path = /SDNA_DROPDIR\r\n    public = no\r\n    valid users = test, @staff\r\n    writable = yes\r\n    browseable = yes\r\n    create mask = 0765\r\n}}}\r\n\r\n\r\n=== Adding a new Shared directory ===\r\nEdit the samba configuration file which is sitting at /etc/samba/smb.conf. [[BR]]\r\nTo configure the samba for more shared directories first create the directory needs to be shared then follow the procedures as described above and finally append the following configuration at the end of the file.\r\n\r\n{{{\r\n[aks_Shared]\r\n        comment = added for Srinivas testing.\r\n        path = /home/sdnabbase/aks_Shared\r\n        public = no\r\n        valid users = sdnabbase, @staff\r\n        writable = yes\r\n        browseable = yes\r\n        create mask = 0765\r\n}}}\r\n\r\nNow restart the samba server by killing the process id and start the daemon.\r\n\r\na. Kill the process id with the following command :\r\n\r\n{{{\r\n$ smbd -i\r\nsmbd version 4.1.4 started.\r\nCopyright Andrew Tridgell and the Samba Team 1992-2013\r\nERROR: smbd is already running. File /run/smbd.pid exists and process id 8576 is running.\r\n$ kill -9 8576\r\n}}}\r\n\r\n\r\nb. Start the samba daemon :\r\n\r\n{{{\r\n$ smbd -D\r\n}}}\r\n\r\n[[BR]]\r\n\r\n\'\'\'NOTE :\'\'\' PLEASE DELETE YOUR FILES AFTER USAGE FROM THE SAMBA SHARED DRIVE.\r\n\r\n----\r\n=== References ===\r\n[http://en.wikipedia.org/wiki/Samba_(software) Wikipedia][[BR]]\r\n[http://www.samba.org Samba official Website]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('SandBox',1,1291894092000000,'trac','127.0.0.1','= The Sandbox =\n\nThis is just a page to practice and learn WikiFormatting. \n\nGo ahead, edit it freely.',NULL,NULL),('SandBox',2,1397068026272537,'trac','127.0.0.1','= The Sandbox =\n\nThis is just a page to practice and learn WikiFormatting. \n\nGo ahead, edit it freely.\n',NULL,NULL),('Sed',1,1402569459088482,'akshat','192.168.0.18','== Sed ==\r\n\r\nSed is the ultimate \'\'\'s\'\'\'tream \'\'\'ed\'\'\'itor. The sed utility reads the specified files, or the standard input if no files are specified, modifying the input as specified by a list of commands.  The input is then written to the standard output.\r\n\r\n\r\nA single command may be specified as the first argument to sed.  Multiple commands may be specified by using the -e or -f options.  All commands are applied to the input in the order they are specified regardless of their origin.\r\n\r\n\r\n[http://www.grymoire.com/unix/Sed.html#uh-13 Sed Tutorial]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Sed',2,1402569505021282,'akshat','192.168.0.18','== Sed ==\r\n\r\nSed is the ultimate \'\'\'s\'\'\'tream \'\'\'ed\'\'\'itor. The sed utility reads the specified files, or the standard input if no files are specified, modifying the input as specified by a list of commands.  The input is then written to the standard output.\r\n\r\n\r\nA single command may be specified as the first argument to sed.  Multiple commands may be specified by using the -e or -f options.  All commands are applied to the input in the order they are specified regardless of their origin.\r\n\r\n\r\n[http://www.grymoire.com/unix/Sed.html Sed Tutorial]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Sed',3,1405347896944740,'akshat','192.168.0.18','== Sed ==\r\n\r\n[[Image(SED.png,150px,right)]]\r\n\r\nSed is the ultimate \'\'\'s\'\'\'tream \'\'\'ed\'\'\'itor. The sed utility reads the specified files, or the standard input if no files are specified, modifying the input as specified by a list of commands.  The input is then written to the standard output.\r\n\r\n\r\nA single command may be specified as the first argument to sed.  Multiple commands may be specified by using the -e or -f options.  All commands are applied to the input in the order they are specified regardless of their origin.\r\n\r\n\r\n[http://www.grymoire.com/unix/Sed.html Sed Tutorial]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Sed',4,1405348061935174,'akshat','192.168.0.18','== Sed ==\r\n\r\n[[Image(SED.png,150px,right)]]\r\n\r\nSed is the ultimate \'\'\'s\'\'\'tream \'\'\'ed\'\'\'itor. The sed utility reads the specified files, or the standard input if no files are specified, modifying the input as specified by a list of commands.  The input is then written to the standard output.\r\n\r\n\r\nA single command may be specified as the first argument to sed.  Multiple commands may be specified by using the -e or -f options.  All commands are applied to the input in the order they are specified regardless of their origin.\r\n\r\n\r\n[http://www.grymoire.com/unix/Sed.html Sed Tutorial]\r\n\r\n=== Some useful one liners ===\r\n# For substituting something globally.\r\n\r\n{{{\r\n$ sed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n# Delete the last 10 lines of a file\r\n\r\n{{{\r\n$ sed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\n$ sed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Sed',5,1408343389316864,'akshat','192.168.0.18','== Sed ==\r\n\r\n[[Image(SED.png,150px,right)]]\r\n\r\nSed is the ultimate \'\'\'s\'\'\'tream \'\'\'ed\'\'\'itor. The sed utility reads the specified files, or the standard input if no files are specified, modifying the input as specified by a list of commands.  The input is then written to the standard output.\r\n\r\n\r\nA single command may be specified as the first argument to sed.  Multiple commands may be specified by using the -e or -f options.  All commands are applied to the input in the order they are specified regardless of their origin.\r\n\r\n\r\n[http://www.grymoire.com/unix/Sed.html Sed Tutorial]\r\n\r\n=== Some useful one liners ===\r\n# For substituting something globally.\r\n\r\n{{{\r\n$ sed \'s/ //g\' filename.txt\r\n}}}\r\n\r\n# Delete the last 10 lines of a file\r\n\r\n{{{\r\n$ sed -e :a -e \'$d;N;2,10ba\' -e \'P;D\'   # method 1\r\n$ sed -n -e :a -e \'1,10!{P;N;D;};N;ba\'  # method 2\r\n}}}\r\n\r\n\r\n# For removing leading and trailing spaces.\r\n\r\n{{{\r\n$ sed -e \'s/^ *//\' -e \'s/ *$//\'\r\n}}}\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('SetupLogo',1,1302001904000000,'akshat','59.163.79.36','== How to Setup Logo in Plone ==\r\n\r\n\'\'\'1. Logo\'\'\'\r\n\r\n{{{\r\nGo to the Zope Management Interface (Site Setup > Zope Management Interface)\r\n\r\nGo to portal_skins > plone_images\r\n\r\nClick logo.jpg and then click the customize button\r\n\r\nNow replace the image by clicking the browse button and choosing your own image from your file system\r\n\r\nEdit the Title field (this will ensure that the title attribute changes in the HTML)\r\n\r\nSave your changes and refresh your browser to see the changes on your site\r\n}}}\r\n\r\nOR\r\n\r\n{{{\r\nGo to the Zope Management Interface (Site Setup > Zope Management Interface)\r\n\r\nMake sure that you\'ve switched your css registry to debug mode (portal_css)\r\n\r\nGo to portal_skins > custom and choose Image from the drop down list on the right\r\n\r\nUpload your own image giving it an ID and a Title e.g.:\r\n\r\nID = MyLogo.jpg\r\nTitle = My Logo\r\n\r\nGo to portal_skins > plone_styles, click base_properties and then click the customize button. You\'ll now have a customized version of base_properties in the custom folder of portal_skins which you can change as you like. Find the logoName field and replace the value logo.jpg with the ID you gave your image (if you gave your ID a .jpg or .gif suffix, make sure you include that, and remember that it is case-sensitive) e.g.:\r\nlogoName = MyLogo.jpg\r\n}}}\r\n\r\nSave your changes and refresh your browser\r\n\r\n\'\'\'2. Size\'\'\'\r\n\r\n{{{\r\nZMI -> /portal_view_customizations -> plone.logo -> manage_main\r\n}}}\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('SetupLogo',2,1302001970000000,'akshat','59.163.79.36','== How to Setup Logo in Plone ==\r\n\r\n\'\'\'1. Logo\'\'\'\r\n\r\n{{{\r\nGo to the Zope Management Interface (Site Setup > Zope Management Interface)\r\n\r\nGo to portal_skins > plone_images\r\n\r\nClick logo.jpg and then click the customize button\r\n\r\nNow replace the image by clicking the browse button and choosing your own image from your file system\r\n\r\nEdit the Title field (this will ensure that the title attribute changes in the HTML)\r\n\r\nSave your changes and refresh your browser to see the changes on your site\r\n}}}\r\n\r\nOR\r\n\r\n{{{\r\nGo to the Zope Management Interface (Site Setup > Zope Management Interface)\r\n\r\nMake sure that you\'ve switched your css registry to debug mode (portal_css)\r\n\r\nGo to portal_skins > custom and choose Image from the drop down list on the right\r\n\r\nUpload your own image giving it an ID and a Title e.g.:\r\n\r\nID = MyLogo.jpg\r\nTitle = My Logo\r\n\r\nGo to portal_skins > plone_styles, click base_properties and then click the customize button.\r\n}}}\r\n\r\nYou\'ll now have a customized version of base_properties in the custom folder of portal_skins which you can change as you like. Find the logoName field and replace the value logo.jpg with the ID you gave your image (if you gave your ID a .jpg or .gif suffix, make sure you include that, and remember that it is case-sensitive) e.g.:\r\n\r\n{{{\r\nlogoName = MyLogo.jpg\r\n}}}\r\n\r\nSave your changes and refresh your browser\r\n\r\n\'\'\'2. Size\'\'\'\r\n\r\n{{{\r\nZMI -> /portal_view_customizations -> plone.logo -> manage_main\r\n}}}\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]','',0),('SetupLogo',3,1397143735563774,'admin','192.168.0.13','== How to Setup Logo in Plone ==\r\n\r\n\'\'\'1. Logo\'\'\'\r\n\r\n{{{\r\nGo to the Zope Management Interface (Site Setup > Zope Management Interface)\r\n\r\nGo to portal_skins > plone_images\r\n\r\nClick logo.jpg and then click the customize button\r\n\r\nNow replace the image by clicking the browse button and choosing your own image from your file system\r\n\r\nEdit the Title field (this will ensure that the title attribute changes in the HTML)\r\n\r\nSave your changes and refresh your browser to see the changes on your site\r\n}}}\r\n\r\nOR\r\n\r\n{{{\r\nGo to the Zope Management Interface (Site Setup > Zope Management Interface)\r\n\r\nMake sure that you\'ve switched your css registry to debug mode (portal_css)\r\n\r\nGo to portal_skins > custom and choose Image from the drop down list on the right\r\n\r\nUpload your own image giving it an ID and a Title e.g.:\r\n\r\nID = MyLogo.jpg\r\nTitle = My Logo\r\n\r\nGo to portal_skins > plone_styles, click base_properties and then click the customize button.\r\n}}}\r\n\r\nYou\'ll now have a customized version of base_properties in the custom folder of portal_skins which you can change as you like. Find the logoName field and replace the value logo.jpg with the ID you gave your image (if you gave your ID a .jpg or .gif suffix, make sure you include that, and remember that it is case-sensitive) e.g.:\r\n\r\n{{{\r\nlogoName = MyLogo.jpg\r\n}}}\r\n\r\nSave your changes and refresh your browser\r\n\r\n\'\'\'2. Size\'\'\'\r\n\r\n{{{\r\nZMI -> /portal_view_customizations -> plone.logo -> manage_main\r\n}}}\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]\r\n----','',0),('Subversion',1,1298748858000000,'akshat','158.144.16.2','== Subversion ==\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n','',0),('Subversion',2,1298748883000000,'akshat','158.144.16.2','== Subversion ==\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]','',0),('Subversion',3,1299245996000000,'akshat','158.144.16.2','= Subversion =\r\n\r\n\r\n----\r\n\r\n= SVN Usage at NCRA =\r\nAt NCRA SVN is configured using svn+ssh:// which access custom protocol to an svnserve server but via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this DSA key pair is generated by using the following command.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and confirm the same. Then the public and private key will be generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote server by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha:\r\n\r\nssh username@mutha\r\nusername@mutha:~$ cp id_dsa.pub .ssh/known_hosts\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server should be:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nWe can checkout the sour c e by us ing the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha/usr/local/subversion/SACE-NCRA [From your machine]\r\n\r\n$ cd SACE-NCRA/\r\n$ mkdir Database ; cp /home/username/ncra.sql  Database/ncra.sql [Creating a direcory named Database & copying ncra.sql file into it]\r\n$ svn add Database\r\nWhere ncra.sql file is sitting under Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA$ svn commit Database\r\nAuthentication realm : SACE-NCRA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/ncra.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first checkin of Databse\' ci Database\r\n$ cd Database/\r\n$ vim ncra.sql\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA/Database$ svn stat => for checking the editing status\r\nM ncra.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]','',0),('Subversion',4,1299246218000000,'akshat','158.144.16.2','= Subversion =\r\n\r\n\r\n----\r\n\r\n= SVN Usage at NCRA =\r\nAt NCRA SVN is configured using svn+ssh:// which access custom protocol to an svnserve server but via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this DSA key pair is generated by using the following command.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and confirm the same. Then the public and private key will be generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote server by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha:\r\n\r\nssh username@mutha\r\nusername@mutha:~$ cp id_dsa.pub .ssh/known_hosts\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server should be:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nWe can checkout the source by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/ncra.sql  Database/ncra.sql [Creating a direcory named Database & copying ncra.sql file into it]\r\n$ svn add Database\r\nWhere ncra.sql file is sitting under Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA$ svn commit Database\r\nAuthentication realm : SACE-NCRA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/ncra.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first checkin of Databse\' ci Database\r\n$ cd Database/\r\n$ vim ncra.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM ncra.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]','',0),('Subversion',5,1299246534000000,'akshat','158.144.16.2','= Subversion =\r\nSubversion is basically a tool for controlling the different versions of the contents. With the help of the subversion a project is being accessed and\r\nmodified by multiple users may be saved in an easy and effective manner. Subversion manages and keeps tracks of files and directories as they evolved\r\nover the time. This is helpful as it allows the users to recover, analyze and examine the history of the data as it is changed over time.[[BR]]\r\n\r\nIt is used over the network and thus enables people to work on the project simultaneously. This promotes collaboration and helps in a more time efficient method of working on common projects. Such a mechanism promotes a system where modifications to the project may take place simultaneously without a fear of loss of data. The data history is maintained in the forms of versions and this helps users to work without a fear of errors. One can go back to a previous version at any time. Overall subversion is a multi purpose generalized tool that may be used for managing a collection of files.\r\n\r\n\r\n----\r\n\r\n= SVN Usage at NCRA =\r\nAt NCRA SVN is configured using svn+ssh:// which access custom protocol to an svnserve server but via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this DSA key pair is generated by using the following command.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and confirm the same. Then the public and private key will be generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote server by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha:\r\n\r\nssh username@mutha\r\nusername@mutha:~$ cp id_dsa.pub .ssh/known_hosts\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server should be:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nWe can checkout the source by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/ncra.sql  Database/ncra.sql [Creating a direcory named Database & copying ncra.sql file into it]\r\n$ svn add Database\r\nWhere ncra.sql file is sitting under Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA$ svn commit Database\r\nAuthentication realm : SACE-NCRA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/ncra.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first checkin of Databse\' ci Database\r\n$ cd Database/\r\n$ vim ncra.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM ncra.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]','',0),('Subversion',6,1299246790000000,'akshat','158.144.16.2','= Subversion =\r\n\r\n[[Image(Subversion.png,200px,right)]]\r\n\r\nSubversion is basically a tool for controlling the different versions of the contents. With the help of the subversion a project is being accessed and\r\nmodified by multiple users may be saved in an easy and effective manner. Subversion manages and keeps tracks of files and directories as they evolved\r\nover the time. This is helpful as it allows the users to recover, analyze and examine the history of the data as it is changed over time.[[BR]]\r\n\r\nIt is used over the network and thus enables people to work on the project simultaneously. This promotes collaboration and helps in a more time efficient method of working on common projects. Such a mechanism promotes a system where modifications to the project may take place simultaneously without a fear of loss of data. The data history is maintained in the forms of versions and this helps users to work without a fear of errors. One can go back to a previous version at any time. Overall subversion is a multi purpose generalized tool that may be used for managing a collection of files.\r\n\r\n\r\n----\r\n\r\n= SVN Usage at NCRA =\r\nAt NCRA SVN is configured using svn+ssh:// which access custom protocol to an svnserve server but via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this DSA key pair is generated by using the following command.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and confirm the same. Then the public and private key will be generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote server by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha:\r\n\r\nssh username@mutha\r\nusername@mutha:~$ cp id_dsa.pub .ssh/known_hosts\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server should be:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nWe can checkout the source by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/ncra.sql  Database/ncra.sql [Creating a direcory named Database & copying ncra.sql file into it]\r\n$ svn add Database\r\nWhere ncra.sql file is sitting under Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA$ svn commit Database\r\nAuthentication realm : SACE-NCRA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/ncra.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first checkin of Databse\' ci Database\r\n$ cd Database/\r\n$ vim ncra.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM ncra.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Subversion',7,1300001696000000,'yogesh','158.144.16.10','= Subversion =\r\n\r\n[[Image(Subversion.png,200px,right)]]\r\n\r\nSubversion is basically a tool for controlling the different versions of the contents. With the help of the subversion a project is being accessed and\r\nmodified by multiple users may be saved in an easy and effective manner. Subversion manages and keeps tracks of files and directories as they evolved\r\nover the time. This is helpful as it allows the users to recover, analyze and examine the history of the data as it is changed over time.[[BR]]\r\n\r\nIt is used over the network and thus enables people to work on the project simultaneously. This promotes collaboration and helps in a more time efficient method of working on common projects. Such a mechanism promotes a system where modifications to the project may take place simultaneously without a fear of loss of data. The data history is maintained in the forms of versions and this helps users to work without a fear of errors. One can go back to a previous version at any time. Overall subversion is a multi purpose generalized tool that may be used for managing a collection of files.\r\n\r\n\r\n----\r\n\r\n= SVN Usage at NCRA =\r\nAt NCRA SVN is configured using svn+ssh:// which access custom protocol to an svnserve server but via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this DSA key pair is generated by using the following command.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and confirm the same. Then the public and private key will be generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote server by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha:\r\n\r\nssh username@mutha\r\nusername@mutha:~$ cp id_dsa.pub .ssh/authorized_keys\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server should be:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized_keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nYou can checkout from the repository by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\nNow to add in a directory called Database:\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/ncra.sql  Database/ncra.sql [Creating a direcory named Database & copying ncra.sql file into it]\r\n$ svn add Database\r\nWhere ncra.sql file is sitting in the Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA$ svn commit Database\r\nAuthentication realm : SACE-NCRA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/ncra.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first checkin of Databse\' ci Database\r\n$ cd Database/\r\n$ vim ncra.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM ncra.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','fixed some typos',0),('Subversion',8,1303985897000000,'yogesh','158.144.16.10','= Subversion =\r\n\r\n[[Image(Subversion.png,200px,right)]]\r\nSubversion is basically a tool for version control of files. With the help of subversion a project can be  accessed and\r\nmodified by multiple users without conflict. Subversion manages and keeps tracks of files and directories as they evolve\r\nover time. This is helpful as it allows the users to recover, analyze and examine the history of the files as they change over time.[[BR]]\r\n\r\nIt is used over the network and thus enables people to work on the project simultaneously. This promotes collaboration and helps in a more time efficient method of working on common projects. Such a mechanism promotes a system where modifications to the project may take place simultaneously without a fear of loss of data. The data history is maintained in the forms of versions and this helps users to work without  fear of errors. One can go back to a previous version at any time. Overall subversion is a multi purpose generalised tool that may be used for managing a collection of files.\r\n\r\n\r\n----\r\n\r\n= SVN Usage at NCRA =\r\nAt NCRA SVN is configured using svn+ssh:// which is  a custom access protocol to an svnserve server via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this, DSA key pair is to be generated using the following command on the user\'s desktop/laptop.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and to confirm the same. Then the public and private key are generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote svn server  (mutha) by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha.ncra.tifr.res.in:\r\n\r\nssh username@mutha.ncra.tifr.res.in\r\nusername@mutha:~$ cat id_dsa.pub >> .ssh/authorized_keys\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server for the authorized-keys file should be correctly set using:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized_keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nYou can checkout from the repository by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha.ncra.tifr.res.in/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\nNow, suppose you want to add in a directory called Database:\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/ncra.sql  Database/ncra.sql [Creating a direcory named Database & copying ncra.sql file into it]\r\n$ svn add Database\r\nWhere ncra.sql file is sitting in the Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA$ svn commit Database\r\nAuthentication realm : SACE-NCRA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/ncra.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first check-in of Databse\' ci Database\r\n$ cd Database/\r\n$ vim ncra.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM ncra.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','fixed number of typos in the text.',0),('Subversion',9,1397143279842385,'admin','192.168.0.13','= Subversion =\r\n\r\n[[Image(/chrome/site/Subversion/Subversion.png,200px,right)]]\r\nSubversion is basically a tool for version control of files. With the help of subversion a project can be  accessed and\r\nmodified by multiple users without conflict. Subversion manages and keeps tracks of files and directories as they evolve\r\nover time. This is helpful as it allows the users to recover, analyze and examine the history of the files as they change over time.[[BR]]\r\n\r\nIt is used over the network and thus enables people to work on the project simultaneously. This promotes collaboration and helps in a more time efficient method of working on common projects. Such a mechanism promotes a system where modifications to the project may take place simultaneously without a fear of loss of data. The data history is maintained in the forms of versions and this helps users to work without  fear of errors. One can go back to a previous version at any time. Overall subversion is a multi purpose generalised tool that may be used for managing a collection of files.\r\n\r\n\r\n----\r\n\r\n= SVN Usage at NCRA =\r\nAt NCRA SVN is configured using svn+ssh:// which is  a custom access protocol to an svnserve server via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this, DSA key pair is to be generated using the following command on the user\'s desktop/laptop.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and to confirm the same. Then the public and private key are generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote svn server  (mutha) by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha.ncra.tifr.res.in:\r\n\r\nssh username@mutha.ncra.tifr.res.in\r\nusername@mutha:~$ cat id_dsa.pub >> .ssh/authorized_keys\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server for the authorized-keys file should be correctly set using:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized_keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nYou can checkout from the repository by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha.ncra.tifr.res.in/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\nNow, suppose you want to add in a directory called Database:\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/ncra.sql  Database/ncra.sql [Creating a direcory named Database & copying ncra.sql file into it]\r\n$ svn add Database\r\nWhere ncra.sql file is sitting in the Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA$ svn commit Database\r\nAuthentication realm : SACE-NCRA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/ncra.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first check-in of Databse\' ci Database\r\n$ cd Database/\r\n$ vim ncra.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM ncra.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Subversion',10,1397144463930768,'admin','192.168.0.13','= Subversion =\r\n\r\n[[Image(htdocs:Subversion/Subversion.png,200px,right)]]\r\nSubversion is basically a tool for version control of files. With the help of subversion a project can be  accessed and\r\nmodified by multiple users without conflict. Subversion manages and keeps tracks of files and directories as they evolve\r\nover time. This is helpful as it allows the users to recover, analyze and examine the history of the files as they change over time.[[BR]]\r\n\r\nIt is used over the network and thus enables people to work on the project simultaneously. This promotes collaboration and helps in a more time efficient method of working on common projects. Such a mechanism promotes a system where modifications to the project may take place simultaneously without a fear of loss of data. The data history is maintained in the forms of versions and this helps users to work without  fear of errors. One can go back to a previous version at any time. Overall subversion is a multi purpose generalised tool that may be used for managing a collection of files.\r\n\r\n\r\n----\r\n\r\n= SVN Usage at NCRA =\r\nAt NCRA SVN is configured using svn+ssh:// which is  a custom access protocol to an svnserve server via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this, DSA key pair is to be generated using the following command on the user\'s desktop/laptop.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and to confirm the same. Then the public and private key are generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote svn server  (mutha) by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha.ncra.tifr.res.in:\r\n\r\nssh username@mutha.ncra.tifr.res.in\r\nusername@mutha:~$ cat id_dsa.pub >> .ssh/authorized_keys\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server for the authorized-keys file should be correctly set using:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized_keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nYou can checkout from the repository by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha.ncra.tifr.res.in/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\nNow, suppose you want to add in a directory called Database:\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/ncra.sql  Database/ncra.sql [Creating a direcory named Database & copying ncra.sql file into it]\r\n$ svn add Database\r\nWhere ncra.sql file is sitting in the Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-NCRA$ svn commit Database\r\nAuthentication realm : SACE-NCRA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/ncra.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first check-in of Databse\' ci Database\r\n$ cd Database/\r\n$ vim ncra.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM ncra.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Subversion',11,1397217949211418,'admin','192.168.0.13','= Subversion =\r\n\r\n[[Image(htdocs:Subversion/Subversion.png,200px,right)]]\r\nSubversion is basically a tool for version control of files. With the help of subversion a project can be  accessed and\r\nmodified by multiple users without conflict. Subversion manages and keeps tracks of files and directories as they evolve\r\nover time. This is helpful as it allows the users to recover, analyze and examine the history of the files as they change over time.[[BR]]\r\n\r\nIt is used over the network and thus enables people to work on the project simultaneously. This promotes collaboration and helps in a more time efficient method of working on common projects. Such a mechanism promotes a system where modifications to the project may take place simultaneously without a fear of loss of data. The data history is maintained in the forms of versions and this helps users to work without  fear of errors. One can go back to a previous version at any time. Overall subversion is a multi purpose generalised tool that may be used for managing a collection of files.\r\n\r\n\r\n----\r\n\r\n= SVN Usage at storageDNA =\r\n----\r\nAt storageDNA SVN is configured using svn+ssh:// which is  a custom access protocol to an svnserve server via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this, DSA key pair is to be generated using the following command on the user\'s desktop/laptop.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and to confirm the same. Then the public and private key are generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote svn server  (mutha) by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha.storagedna.com:\r\n\r\nssh username@mutha.storagedna.com\r\nusername@mutha:~$ cat id_dsa.pub >> .ssh/authorized_keys\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server for the authorized-keys file should be correctly set using:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized_keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nYou can checkout from the repository by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha.storagedna.com/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\nNow, suppose you want to add in a directory called Database:\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/storagedna.sql  Database/storagedna.sql [Creating a direcory named Database & copying storagedna.sql file into it]\r\n$ svn add Database\r\nWhere storagedna.sql file is sitting in the Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-STORAGEDNA$ svn commit Database\r\nAuthentication realm : SACE-STORAGEDNA\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/storagedna.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first check-in of Databse\' ci Database\r\n$ cd Database/\r\n$ vim storagedna.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM storagedna.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Subversion',12,1435141404352592,'akshat','127.3.17.1','= Subversion =\r\n\r\n[[Image(htdocs:Subversion/Subversion.png,200px,right)]]\r\nSubversion is basically a tool for version control of files. With the help of subversion a project can be  accessed and\r\nmodified by multiple users without conflict. Subversion manages and keeps tracks of files and directories as they evolve\r\nover time. This is helpful as it allows the users to recover, analyze and examine the history of the files as they change over time.[[BR]]\r\n\r\nIt is used over the network and thus enables people to work on the project simultaneously. This promotes collaboration and helps in a more time efficient method of working on common projects. Such a mechanism promotes a system where modifications to the project may take place simultaneously without a fear of loss of data. The data history is maintained in the forms of versions and this helps users to work without  fear of errors. One can go back to a previous version at any time. Overall subversion is a multi purpose generalised tool that may be used for managing a collection of files.\r\n\r\n\r\n----\r\n\r\n= SVN Usage at my Machine =\r\n----\r\nAt my Machine SVN is configured using svn+ssh:// which is  a custom access protocol to an svnserve server via an SSH tunnel. It is achieved by DSA (Digital Signature Authentication) public key authentication. For this, DSA key pair is to be generated using the following command on the user\'s desktop/laptop.\r\n\r\n{{{\r\n$ ssh-keygen -t dsa\r\n}}}\r\n\r\nThis command prompts the user to enter a passphrase different from your account password and to confirm the same. Then the public and private key are generated.[[BR]][[BR]]\r\n\r\n2. Now, the public key is copied to the remote svn server  (mutha) by the following command:\r\n\r\n{{{\r\n$ scp /home/username/.ssh/id_dsa.pub username@mutha.akshat.com:\r\n\r\nssh username@mutha.akshat.com\r\nusername@mutha:~$ cat id_dsa.pub >> .ssh/authorized_keys\r\n}}}\r\n\r\n\r\n3. The permissions on the remote server for the authorized-keys file should be correctly set using:\r\n\r\n{{{\r\n$ chmod 600 .ssh/authorized_keys\r\n}}}\r\n\r\n=== Working with Repositories ===\r\nYou can checkout from the repository by using the command :\r\n\r\n{{{\r\n$ svn co svn+ssh://mutha.akshat.com/usr/local/subversion/name_of_the_repository [From your machine]\r\n\r\nNow, suppose you want to add in a directory called Database:\r\n\r\n$ cd name_of_the_repository/\r\n$ mkdir Database ; cp /home/username/akshat.sql  Database/akshat.sql [Creating a directory named Database & copying akshat.sql file into it]\r\n$ svn add Database\r\nWhere akshat.sql file is sitting in the Database Directory.\r\n\r\nakshat@akshat-laptop:~/SACE-AKSHAT$ svn commit Database\r\nAuthentication realm : SACE-AKSHAT\r\nPassword for \'akshat\' : ******\r\nAdding Database\r\nAdding Database/akshat.sql\r\nTransmitting file data.\r\nCommitted revision 1.\r\n\r\n$ svn ci Database\r\n$ svn -m \'first check-in of Database\' ci Database\r\n$ cd Database/\r\n$ vim akshat.sql\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn stat => for checking the editing status\r\nM akshat.sql\r\nM=> shows that the file has been modified.\r\n\r\nakshat@akshat-laptop:~/name_of_the_repository/Database$ svn up\r\nAt revision 1.\r\nup=> update\r\n}}}\r\n\r\nIf we want to revert to a specific version than we have to use the following command:\r\n\r\n{{{\r\n$ svn merge -rHEAD: 4.\r\n$ svn commit -m \"Reverted to revision 3\".\r\n}}}\r\n \r\n\r\n\r\n\r\n\r\n----\r\n\r\nSubversion sudo chown -R svn.svn svn\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Tabs',1,1335267534522725,'akshat','158.144.16.26','== Making tabs not appear ==\r\nSay you want to get rid of the \"Home\" tab from the top of the portal.\r\n\r\nGo to the Zope Management Interface (ZMI) in Plone Setup, and then to the portal_actions tool.\r\n\r\nIn this list, there are lots of different items, look for the things you want to not show (the tabs at the top have category portal_tabs). Untick the Visible checkbox on the items you do not want to appear in the portal.\r\n\r\n== Making a new tab ==\r\nFirst, create a folder in root of your Plone site from the Plone interface (not the ZMI). This is the new folder your new tab will link to. Make a note of the Short Name you give it, you will need this for the tab definition later.\r\n\r\nThen, go to the ZMI and into the portal_actions tool (as in the first part of this how-to). Scroll down to the bottom of the page and you will see a form to add a new action.\r\n\r\nHere you do the following:\r\n\r\nEnter the Short Name you made a note of earlier in the Id field. The reason these have to be the same is to get selection highlighting of the tab to work correctly.\r\n\r\nType the name you wish to appear in the tab itself into the Name field.\r\n\r\nType string:$portal_url/my-short-name into the URL (Expression) field. Replace my-short-name being the Short Name of the folder you created earlier and made a note of. Make sure there are no spaces in what you just typed.\r\n\r\nLeave the Condition field empty.\r\n\r\nSelect View from the Permission field drop down menu. (Quick way to do this - since there are so many entries - is to select the pulldown, and press the V key on your keyboard.)\r\n\r\nType \"portal_tabs\" into the Category field.\r\n\r\nTick the Visible? box.\r\n\r\nClick add at the bottom of the form.\r\n\r\n== Changing tab order ==\r\nTo change the order in which the tabs appear on the page, change their order in the ZMI by moving them above or below each other.\r\n\r\nGo to the ZMI and then to the portal_actions tool, as explained earlier. Then select the box to the left of the item you want to move and then click on Move down or Move up buttons, next to the Save and Delete buttons near the bottom of the list of items.\r\n\r\n== Making tabs selectively appear ==\r\nTo make tabs only appear after login (not for anonymous users), put python: member in the condition field of an action.\r\n\r\nTo make tabs only appear for a certain role (in this case, Managers), put the following in the condition field:','',0),('Tabs',2,1397143692464825,'admin','192.168.0.13','== Making tabs not appear ==\r\nSay you want to get rid of the \"Home\" tab from the top of the portal.\r\n\r\nGo to the Zope Management Interface (ZMI) in Plone Setup, and then to the portal_actions tool.\r\n\r\nIn this list, there are lots of different items, look for the things you want to not show (the tabs at the top have category portal_tabs). Untick the Visible checkbox on the items you do not want to appear in the portal.\r\n\r\n== Making a new tab ==\r\nFirst, create a folder in root of your Plone site from the Plone interface (not the ZMI). This is the new folder your new tab will link to. Make a note of the Short Name you give it, you will need this for the tab definition later.\r\n\r\nThen, go to the ZMI and into the portal_actions tool (as in the first part of this how-to). Scroll down to the bottom of the page and you will see a form to add a new action.\r\n\r\nHere you do the following:\r\n\r\nEnter the Short Name you made a note of earlier in the Id field. The reason these have to be the same is to get selection highlighting of the tab to work correctly.\r\n\r\nType the name you wish to appear in the tab itself into the Name field.\r\n\r\nType string:$portal_url/my-short-name into the URL (Expression) field. Replace my-short-name being the Short Name of the folder you created earlier and made a note of. Make sure there are no spaces in what you just typed.\r\n\r\nLeave the Condition field empty.\r\n\r\nSelect View from the Permission field drop down menu. (Quick way to do this - since there are so many entries - is to select the pulldown, and press the V key on your keyboard.)\r\n\r\nType \"portal_tabs\" into the Category field.\r\n\r\nTick the Visible? box.\r\n\r\nClick add at the bottom of the form.\r\n\r\n== Changing tab order ==\r\nTo change the order in which the tabs appear on the page, change their order in the ZMI by moving them above or below each other.\r\n\r\nGo to the ZMI and then to the portal_actions tool, as explained earlier. Then select the box to the left of the item you want to move and then click on Move down or Move up buttons, next to the Save and Delete buttons near the bottom of the list of items.\r\n\r\n== Making tabs selectively appear ==\r\nTo make tabs only appear after login (not for anonymous users), put python: member in the condition field of an action.\r\n\r\nTo make tabs only appear for a certain role (in this case, Managers), put the following in the condition field:\r\n\r\n----\r\n[wiki:VariousPloneConfiguarion Back to Configurations Main Page]\r\n----','',0),('TitleIndex',1,1291894092000000,'trac','127.0.0.1','\'\'\' Index by Title \'\'\' | \'\'\' [RecentChanges Index by Date] \'\'\'\n\n[[TitleIndex(format=group,min=4)]]',NULL,NULL),('Tomcat',1,1298835707000000,'akshat','158.144.16.2','== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.','',0),('Tomcat',2,1298835807000000,'akshat','158.144.16.2','== TOMCAT ==\r\n\r\n----\r\n\r\n== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded from http://www.eclipsetotale.com/tomcatPlugin.html\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]','',0),('Tomcat',3,1298835930000000,'akshat','158.144.16.2','== TOMCAT ==\r\n\r\n----\r\n\r\n== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded [http://www.eclipsetotale.com/tomcatPlugin.html here].\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]','',0),('Tomcat',4,1298836101000000,'akshat','158.144.16.2','== TOMCAT ==\r\n\r\n[[Image(tomcat.gif,right)]] \r\n\r\nApache Tomcat is an open source servlet container developed by the Apache Software Foundation (ASF). It is written in Java. Tomcat implements the Java Servlet and the JavaServer Pages (JSP) specifications from Sun Microsystems, and provides a \"pure Java\" HTTP web server environment for Java code to run.\r\n\r\n----\r\n\r\n== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded [http://www.eclipsetotale.com/tomcatPlugin.html here].\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Tomcat',5,1298836142000000,'akshat','158.144.16.2','== TOMCAT ==\r\n\r\n[[Image(tomcat.gif,right)]] \r\n\r\nApache Tomcat is an open source servlet container developed by the Apache Software Foundation (ASF). It is written in Java. Tomcat implements the Java Servlet and the Java Server Pages (JSP) specifications from Sun Microsystems, and provides a \"pure Java\" HTTP web server environment for Java code to run.\r\n\r\n----\r\n\r\n== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded [http://www.eclipsetotale.com/tomcatPlugin.html here].\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Tomcat',6,1300709981000000,'akshat','158.144.16.19','== TOMCAT ==\r\n\r\n[[Image(tomcat.gif,right)]] \r\n\r\nApache Tomcat is an open source servlet container developed by the Apache Software Foundation (ASF). It is written in Java. Tomcat implements the Java Servlet and the Java Server Pages (JSP) specifications from Sun Microsystems, and provides a \"pure Java\" HTTP web server environment for Java code to run.\r\n\r\n----\r\n\r\n== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded [http://www.eclipsetotale.com/tomcatPlugin.html here].\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n== Installation of Glassfish Plugin in Eclipse ==\r\n\r\nThe plugin can be downloaded and configured [http://glassfishplugins.java.net/eclipse36/index.html here].\r\n\r\n----\r\n\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Tomcat',7,1300710023000000,'akshat','158.144.16.19','== TOMCAT ==\r\n\r\n[[Image(tomcat.gif,right)]] \r\n\r\nApache Tomcat is an open source servlet container developed by the Apache Software Foundation (ASF). It is written in Java. Tomcat implements the Java Servlet and the Java Server Pages (JSP) specifications from Sun Microsystems, and provides a \"pure Java\" HTTP web server environment for Java code to run.\r\n\r\n----\r\n\r\n== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded [http://www.eclipsetotale.com/tomcatPlugin.html here].\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n== Installation of Glassfish Plugin in Eclipse ==\r\n\r\nThe plugin can be downloaded and configured from [http://glassfishplugins.java.net/eclipse36/index.html here].\r\n\r\n----\r\n\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Tomcat',8,1303128039000000,'akshat','158.144.16.5','== TOMCAT ==\r\n\r\n[[Image(tomcat.gif,right)]] \r\n\r\nApache Tomcat is an open source servlet container developed by the Apache Software Foundation (ASF). It is written in Java. Tomcat implements the Java Servlet and the Java Server Pages (JSP) specifications from Sun Microsystems, and provides a \"pure Java\" HTTP web server environment for Java code to run.\r\n\r\n----\r\n\r\n== Installation of Tomcat Plugin in Eclipse ==\r\n\r\nDownload and install Tomcat before using this plugin.\r\n\r\nThe plugin can be downloaded [http://www.eclipsetotale.com/tomcatPlugin.html here].\r\n\r\nUnzip it in :[[BR]]\r\n- Eclipse_Home/dropins for Eclipse 3.4, 3.5 and 3.6[[BR]]\r\n- Eclipse_Home/plugins for Eclipse 2.1, 3.0, 3.1, 3.2 and 3.3[[BR]]\r\n\r\n=== Plugin activation for Eclipse 3.x : ===\r\n- Launch eclipse once using this option : -clean [[BR]]\r\n- If Tomcat icons are not shown in toolbar : select menu \'Window> Customize Perspective >Commands\', and check \'Tomcat\' in \'Available command groups\'[[BR]]\r\nSet Tomcat version and Tomcat home : Windows -> Preferences, select Tomcat and set Tomcat version and Tomcat home.\r\n\r\nThis plugin launches Tomcat using the default JRE checked in Eclipe preferences window.[[BR]]\r\nTo set a JDK as default JRE for Eclipse open the preference window : Window -> Preferences -> Java -> Installed JREs.[[BR]]\r\nThis JRE must be a JDK (This is a Tomcat prerequisite).[[BR]]\r\nThe plugin sets itself Tomcat classpath and bootclasspath. Use Preferences -> Tomcat ->JVM Settings, only if you need specific settings.\r\n\r\n\r\n----\r\n\r\n== Installation of Glassfish Plugin in Eclipse ==\r\n\r\nThe plugin can be downloaded and configured from [http://glassfishplugins.java.net/eclipse36/index.html here].\r\n\r\n----\r\n\r\n== Installation of Servlet and JSP development with Eclipse WTP ==\r\n\r\nThe plugin can be downloaded and configured from [http://www.vogella.de/articles/EclipseWTP/article.html here].\r\n\r\n----\r\n\r\n== Installation of Google Plugin for Eclipse ==\r\n\r\nThe plugin can be downloaded and configured from [http://code.google.com/eclipse/docs/download.html here].\r\n\r\n=== Google Web Toolkit Downloads ===\r\n\r\nThe plugins can be downloaded and configured from [http://code.google.com/webtoolkit/download.html here].\r\n\r\n----\r\n\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Tomcat',9,1303128092000000,'akshat','158.144.16.5','== TOMCAT ==\r\n\r\n[[Image(tomcat.gif,right)]] \r\n\r\nApache Tomcat is an open source servlet container developed by the Apache Software Foundation (ASF). It is written in Java. Tomcat implements the Java Servlet and the Java Server Pages (JSP) specifications from Sun Microsystems, and provides a \"pure Java\" HTTP web server environment for Java code to run.\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('Tomcat',10,1397143181839063,'admin','192.168.0.13','== TOMCAT ==\r\n\r\n[[Image(/chrome/site/Tomcat/tomcat.gif,right)]] \r\n\r\nApache Tomcat is an open source servlet container developed by the Apache Software Foundation (ASF). It is written in Java. Tomcat implements the Java Servlet and the Java Server Pages (JSP) specifications from Sun Microsystems, and provides a \"pure Java\" HTTP web server environment for Java code to run.\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----\r\n\r\n','',0),('TracAccessibility',1,1291894092000000,'trac','127.0.0.1','= Accessibility Support in Trac =\n\nNot every user has a graphic environment with a mouse or other pointing device. Some users rely on keyboard, alternative keyboard or voice input to navigate links, activate form controls, etc. In Trac, we work to assure users may interact with devices other than a pointing device.\n\nTrac supports accessibility keys for the most common operations. On Windows and Linux platforms, press any of the keys listed below in combination with the `<Alt>` key; on a Mac, use the `<ctrl>` key instead.\n\n\'\'Note that when using Internet Explorer on Windows, you need to hit `<Enter>` after having used the access key.\'\'[[BR]]\n\'\'Note that when using Firefox 2.0 on Windows, you need to hit `<Shift> + <Alt> + <Key>`.\'\'\n\n== Global Access Keys ==\n\n * `1` - WikiStart\n * `2` - [wiki:TracTimeline Timeline]\n * `3` - [wiki:TracRoadmap Roadmap]\n * `4` - [wiki:TracSearch Search]\n * `6` - [wiki:TracGuide Trac Guide / Documentation]\n * `7` - [wiki:TracTickets New Ticket]\n * `9` - [/about About Trac]\n * `0` - This page\n * `e` - Edit this page\n * `f` - Search\n\n\n----\nSee also: TracGuide',NULL,NULL),('TracAccessibility',2,1397068026266771,'trac','127.0.0.1','= Accessibility Support in Trac =\n\nNot every user has a graphic environment with a mouse or other pointing device. Some users rely on keyboard, alternative keyboard or voice input to navigate links, activate form controls, etc. In Trac, we work to assure users may interact with devices other than a pointing device.\n\nThe keyboard shortcuts must be enabled for a session through the [/prefs/keybindings Keyboard Shortcuts] preferences panel.\n\nTrac supports accessibility keys for the most common operations.\n - on Linux platforms, press any of the keys listed below in combination with the `<Alt>` key \n - on a Mac, use the `<ctrl>` key instead\n - on Windows, you need to hit `<Shift> + <Alt> + <Key>`. This works for most browsers (Firefox, Chrome, Safari and Internet Explorer)\n\n== Global Access Keys ==\n\n * `1` - WikiStart\n * `2` - [wiki:TracTimeline Timeline]\n * `3` - [wiki:TracRoadmap Roadmap]\n * `4` - [wiki:TracSearch Search]\n * `6` - [wiki:TracGuide Trac Guide / Documentation]\n * `7` - [wiki:TracTickets New Ticket]\n * `9` - [/about About Trac]\n * `0` - This page\n * `e` - Edit this page\n * `f` - Search\n\n\n----\nSee also: TracGuide',NULL,NULL),('TracAdmin',1,1291894092000000,'trac','127.0.0.1','= TracAdmin =\n[[TracGuideToc]]\n\nTrac is distributed with a powerful command-line configuration tool. This tool can be used  to configure and customize your Trac-installation to better fit your needs.\n\nSome of those operations can also be performed via the \'\'Admin\'\' web interface, an updated version of the [http://trac.edgewall.org/wiki/WebAdmin WebAdmin] plugin now integrated within Trac (since version 0.11).\n\n== Usage ==\n\nYou can get a comprehensive list of the available options, commands and sub-commands by invoking `trac-admin` with the `help` command:.\n{{{\ntrac-admin help\n}}}\n\nUnless you\'re executing the `help`, `about` or `version` sub-commands, you\'ll need to specify the path to the TracEnvironment that you want to administer as the first argument, for example:\n{{{\ntrac-admin /path/to/projenv wiki list\n}}}\n\n== Interactive Mode ==\n\nWhen passing the environment path as the only argument, `trac-admin` starts in interactive mode.\nCommands can then be executed on the selected environment using the prompt, which offers tab-completion\n(on non-Windows environments, and when the Python `readline` module is available) and automatic repetition of the last command issued.\n\nOnce you\'re in interactive mode, you can also get help on specific commands or subsets of commands:\n\nFor example, to get an explanation of the `resync` command, run:\n{{{\n> help resync\n}}}\n\nTo get help on all the Wiki-related commands, run:\n{{{\n> help wiki\n}}}\n\n== Full Command Reference ==\n\n[[TracAdminHelp()]]\n\n\n=== Notes ===\n\nThe `initenv` also supports an extra `--inherit` option, which can be used to specify the `[inherit] file` option at environment creation time so that only the options \'\'not\'\' already specified in the global configuration file will be written in the conf/trac.ini file of the newly created environment.\nSee TracIni#GlobalConfiguration.\n\nNote that in version 0.11 of Trac, `initenv` lost an extra last argument `<templatepath>`, which was used in previous versions to point to the `templates` folder. If you are using the one-liner \'`trac-admin /path/to/trac/ initenv <projectname> <db> <repostype> <repospath>`\' in the above and getting an error that reads \'\'\'\'`Wrong number of arguments to initenv: 4`\'\'\'\', then this is because you\'re using a `trac-admin` script from an \'\'\'older\'\'\' version of Trac.\n\n----\nSee also: TracGuide, TracBackup, TracPermissions, TracEnvironment, TracIni, [trac:TracMigrate TracMigrate]\n',NULL,NULL),('TracAdmin',2,1397068026258092,'trac','127.0.0.1','= TracAdmin =\n[[TracGuideToc]]\n\nTrac is distributed with a powerful command-line configuration tool. This tool can be used  to configure and customize your Trac-installation to better fit your needs.\n\nSome of those operations can also be performed via the \'\'Admin\'\' web interface, an updated version of the [trac:WebAdmin] plugin now integrated within Trac (since version 0.11).\n\n== Usage ==\n\nFor nearly every `trac-admin` command, you\'ll need to specify the path to the TracEnvironment that you want to administer as the first argument, for example:\n{{{\ntrac-admin /path/to/projenv wiki list\n}}}\n\nThe only exception is for the `help` command, but even in this case if you omit the environment, you\'ll only get a very succinct list of commands (`help` and `initenv`), the same list you\'d get when invoking `trac-admin` alone.\nAlso, `trac-admin --version` will tell you about the Trac version (e.g. 0.12) corresponding to the program.\n\nIf you want to get a comprehensive list of the available commands and sub-commands, you need to specify an existing environment:\n{{{\ntrac-admin /path/to/projenv help\n}}}\n\nSome commands have a more detailed help, which you can access by specifying the command\'s name as a subcommand for `help`:\n\n{{{\ntrac-admin /path/to/projenv help <command>\n}}}\n\n=== `trac-admin <targetdir> initenv` === #initenv\n\nThis subcommand is very important as it\'s the one used to create a TracEnvironment in the specified `<targetdir>`. That directory must not exist prior to the call.\n\n[[TracAdminHelp(initenv)]]\n\nIt supports an extra `--inherit` option, which can be used to specify a global configuration file which can be used share settings between several environments. You can also inherit from a shared configuration afterwards, by setting the `[inherit] file` option in the `conf/trac.ini` file in your newly created environment, but the advantage of specifying the inherited configuration file at environment creation time is that only the options \'\'not\'\' already specified in the global configuration file will be written in the created environment\'s `conf/trac.ini` file.\nSee TracIni#GlobalConfiguration.\n\nNote that in version 0.11 of Trac, `initenv` lost an extra last argument `<templatepath>`, which was used in previous versions to point to the `templates` folder. If you are using the one-liner \'`trac-admin /path/to/trac/ initenv <projectname> <db> <repostype> <repospath>`\' in the above and getting an error that reads \'\'\'\'`Wrong number of arguments to initenv: 4`\'\'\'\', then this is because you\'re using a `trac-admin` script from an \'\'\'older\'\'\' version of Trac.\n\n== Interactive Mode ==\n\nWhen passing the environment path as the only argument, `trac-admin` starts in interactive mode.\nCommands can then be executed on the selected environment using the prompt, which offers tab-completion\n(on non-Windows environments, and when the Python `readline` module is available) and automatic repetition of the last command issued.\n\nOnce you\'re in interactive mode, you can also get help on specific commands or subsets of commands:\n\nFor example, to get an explanation of the `resync` command, run:\n{{{\n> help resync\n}}}\n\nTo get help on all the Wiki-related commands, run:\n{{{\n> help wiki\n}}}\n\n== Full Command Reference ==\n\nYou\'ll find below the detailed help for all the commands available by default in `trac-admin`. Note that this may not match the list given by `trac-admin <yourenv> help`, as the commands  pertaining to components disabled in that environment won\'t be available and conversely some plugins activated in the environment can add their own commands.\n\n[[TracAdminHelp()]]\n\n----\nSee also: TracGuide, TracBackup, TracPermissions, TracEnvironment, TracIni, [trac:TracMigrate TracMigrate]\n',NULL,NULL),('TracBackup',1,1291894092000000,'trac','127.0.0.1','= Trac Backup =\n[[TracGuideToc]]\n\nSince Trac uses a database backend, some extra care is required to safely create a backup of a [wiki:TracEnvironment project environment]. Luckily, [wiki:TracAdmin trac-admin] has a command to make backups easier: `hotcopy`.\n\n  \'\'Note: Trac uses the `hotcopy` nomenclature to match that of [http://subversion.tigris.org/ Subversion], to make it easier to remember when managing both Trac and Subversion servers.\'\'\n\n== Creating a Backup ==\n\nTo create a backup of a live TracEnvironment, simply run:\n{{{\n\n  $ trac-admin /path/to/projenv hotcopy /path/to/backupdir\n\n}}}\n\n[wiki:TracAdmin trac-admin] will lock the database while copying.\'\'\n\nThe resulting backup directory is safe to handle using standard file-based backup tools like `tar` or `dump`/`restore`.\n\nPlease, note, that hotcopy command does not overwrite target directory and when such exists, hotcopy ends with error: `Command failed: [Errno 17] File exists:` This is discussed in [trac:ticket:3198 #3198].\n\n=== Restoring a Backup ===\n\nBackups are simply a copied snapshot of the entire [wiki:TracEnvironment project environment] directory, including the SQLite database. \n\nTo restore an environment from a backup, stop the process running Trac (i.e. the Web server or [wiki:TracStandalone tracd]), restore the contents of your backup (path/to/backupdir) to your [wiki:TracEnvironment project environment] directory and restart the service.\n\n  \'\'Note: Automatic backup of environments that don\'t use SQLite as database backend is not supported at this time. As a workaround, we recommend that you stop the server, copy the environment directory, and make a backup of the database using whatever mechanism is provided by the database system.\'\'\n\n----\nSee also: TracAdmin, TracEnvironment, TracGuide, [trac:TracMigrate TracMigrate]',NULL,NULL),('TracBackup',2,1397068026232469,'trac','127.0.0.1','= Trac Backup =\n[[TracGuideToc]]\n\nSince Trac uses a database backend, some extra care is required to safely create a backup of a [wiki:TracEnvironment project environment]. Luckily, [wiki:TracAdmin trac-admin] has a command to make backups easier: `hotcopy`.\n\n  \'\'Note: Trac uses the `hotcopy` nomenclature to match that of [http://subversion.tigris.org/ Subversion], to make it easier to remember when managing both Trac and Subversion servers.\'\'\n\n== Creating a Backup ==\n\nTo create a backup of a live TracEnvironment, simply run:\n{{{\n\n  $ trac-admin /path/to/projenv hotcopy /path/to/backupdir\n\n}}}\n\n[wiki:TracAdmin trac-admin] will lock the database while copying.\'\'\n\nThe resulting backup directory is safe to handle using standard file-based backup tools like `tar` or `dump`/`restore`.\n\nPlease, note, that hotcopy command does not overwrite target directory and when such exists, hotcopy ends with error: `Command failed: [Errno 17] File exists:` This is discussed in [trac:ticket:3198 #3198].\n\n=== Restoring a Backup ===\n\nBackups are simply a copied snapshot of the entire [wiki:TracEnvironment project environment] directory, including the SQLite database. \n\nTo restore an environment from a backup, stop the process running Trac (i.e. the Web server or [wiki:TracStandalone tracd]), restore the contents of your backup (path/to/backupdir) to your [wiki:TracEnvironment project environment] directory and restart the service.\n\n----\nSee also: TracAdmin, TracEnvironment, TracGuide, [trac:TracMigrate TracMigrate]\n',NULL,NULL),('TracBatchModify',1,1397068026271133,'trac','127.0.0.1','= Trac Ticket Batch Modification =\n[[TracGuideToc]]\n\nFrom [wiki:TracQuery custom query] results Trac provides support for modifying a batch of tickets in one request.\n\nTo perform a batch modification select the tickets you wish to modify and set the new field values using the section underneath the query results. \n\n== List fields\n\nThe `Keywords` and `Cc` fields are treated as lists, where list items can be added and/or removed in addition of replacing the entire list value. All list field controls accept multiple items (i.e. multiple keywords or cc addresses).\n',NULL,NULL),('TracBrowser',1,1291894092000000,'trac','127.0.0.1','= The Trac Repository Browser =\n[[TracGuideToc]]\n\nThe Trac repository browser can be used to browse specific revisions of directories \nand files stored in the repository of the configured version control system.\n\nDirectory entries are displayed in a list with sortable columns. The list \nentries can be sorted by \'\'name\'\', \'\'size\'\' or \'\'age\'\' by clicking on the column\nheaders. The sort order can be reversed by clicking on a given column\nheader again.\n\nThe browser can be used to navigate through the directory structure \nby clicking on the directory names. Clicking on a file name will show\nthe contents of the file. Clicking on the revision number of a file or\ndirectory will take you to the TracRevisionLog for that file.\nNote that there\'s also a \'\'Revision Log\'\' navigation link that will do\nthe same for the path currently being examined.\n\nIt\'s also possible to browse directories or files as they were in history,\nat any given repository revision. The default behavior is to display the\nlatest revision but another revision number can easily be selected using\nthe \'\'View revision\'\' input field at the top of the page.\n\n\'\'(since 0.11)\'\':\n\nThe color bar next to the Age column gives a visual indication of the age\nof the last change to a file or directory. In the default configuration,\nblue is older and red is newer, but this can be [TracIni#browser-section configured].\n\nAt the top of the browser page, there\'s a drop-down menu which you can use \nto select some interesting places in the repository, for example branches or tags. \nThis is sometimes referred to as the \'\'browser quickjump\'\' facility.\nThe precise meaning and content of this menu depends on your backend.\nFor Subversion, this list contains by default the top-level trunk directory and sub-directories of the top-level branches and tags directories (`/trunk`, `/branches/*`, and `/tags/*`).  This can be [TracIni#svn-section configured] for more advanced cases.\n\nIf you\'re using a Javascript enabled browser, you\'ll be able to expand and collapse folders in-place by clicking on the arrow head at the right side of a folder. Alternatively, the [trac:TracKeys keyboard] can also be used for this: use \'j\' and \'k\' to go to the next or previous entry, and \'o\' (or \'Enter\') to toggle between expanded and collapsed state of the selected folder or for visiting the selected file.\n\nFor the Subversion backend, some additional features are available:\n - Displays the `svn:needs-lock` property\n - Support for the `svn:externals` property (which can be [TracIni#svn:externals-section configured])\n - The `svn:mime-type` property is used to select the syntax highlighter for rendering the file. For example, setting `svn:mime-type` to `text/html` will ensure the file is highlighted as HTML, regardless of the file extension. It also allows selecting the character encoding used in the file content. For example, if the file content is encoded in UTF-8, set `svn:mime-type` to `text/html;charset=utf-8`. The `charset=` specification overrides the default encoding defined in the `default_charset` option of the `[trac]` section of [TracIni#trac-section trac.ini].\n\n----\nSee also: TracGuide, TracChangeset, TracFineGrainedPermissions\n',NULL,NULL),('TracBrowser',2,1397068026234948,'trac','127.0.0.1','= The Trac Repository Browser =\n[[TracGuideToc]]\n\nThe Trac repository browser can be used to browse specific revisions of directories \nand files stored in the repositories associated with the Trac environment.\n\n\'\'(since 0.12)\'\': \nAt the top-level of the repository browser is the \'\'\'Repository Index\'\'\', \nlisting all the configured repositories. \nEach repository has a name which is used as a path prefix in a \n\"virtual\" file hierarchy encompassing all the available repositories.\nOne of the repositories can be configured with an empty name; this is the default repository.  When such a default repository is present, its top-level files and directories \nare also listed, in a \'\'\'Default Repository\'\'\' section placed before the \nrepository index. If the default repository is the only repository associated \nwith the Trac environment the \'\'\'Repository Index\'\'\' will be omitted ^[#note-multirepos (1)]^.\n\nDirectory entries are displayed in a list with sortable columns. The list \nentries can be sorted by \'\'Name\'\', \'\'Size\'\', \'\'Age\'\' or \'\'Author\'\' by clicking on the column\nheaders. The sort order can be reversed by clicking on a given column\nheader again.\n\nThe browser can be used to navigate through the directory structure \nby clicking on the directory names. \nClicking on a file name will show the contents of the file. \nClicking on the revision number of a file or directory will take \nyou to the TracRevisionLog for that file.\nNote that there\'s also a \'\'Revision Log\'\' navigation link that will do the \nsame for the path currently being examined.\nClicking on the \'\'diff\'\' icon after revision number will display the changes made \nto the files modified in that revision.\nClicking on the \'\'Age\'\' of the file - will take you to that changeset in the timeline.\n\nIt\'s also possible to browse directories or files as they were in history,\nat any given repository revision. The default behavior is to display the\nlatest revision but another revision number can easily be selected using\nthe \'\'View revision\'\' input field at the top of the page.\n\nThe color bar next to the \'\'Age\'\' column gives a visual indication of the age\nof the last change to a file or directory, following the convention that\n\'\'\'[[span(style=color:#88f,blue)]]\'\'\' is oldest and \'\'\'[[span(style=color:#f88,red)]]\'\'\'\nis newest, but this can be [TracIni#browser-section configured].\n\nAt the top of the browser page, there\'s a \'\'Visit\'\' drop-down menu which you can use \nto select some interesting places in the repository, for example branches or tags. \nThis is sometimes referred to as the \'\'browser quickjump\'\' facility.\nThe precise meaning and content of this menu depends on your repository backend.\nFor Subversion, this list contains by default the top-level trunk directory \nand sub-directories of the top-level branches and tags directories \n(`/trunk`, `/branches/*`, and `/tags/*`).  This can be [TracIni#svn-section configured] \nfor more advanced cases.\n\nIf you\'re using a Javascript enabled browser, you\'ll be able to expand and \ncollapse directories in-place by clicking on the arrow head at the right side of a \ndirectory. Alternatively, the [trac:TracKeys keyboard] can also be used for this: \n - use `\'j\'` and `\'k\'` to select the next or previous entry, starting with the first\n - `\'o\'` (open) to toggle between expanded and collapsed state of the selected \n   directory or for visiting the selected file \n - `\'v\'` (view, visit) and `\'<Enter>\'`, same as above\n - `\'r\'` can be used to force the reload of an already expanded directory\n - `\'A\'` can be used to directly visit a file in annotate (blame) mode\n - `\'L\'` to view the log for the selected entry\nIf no row has been selected using `\'j\'` or `\'k\'` these keys will operate on the entry under the mouse.\n\n{{{#!comment\nMMM: I guess that some keys are upper case and some lower to avoid conflicts with browser defined keys.\nI find for example in Firefox and IE on windows that \'a\' works as well as \'A\' but \'l\' does not work for \'L\'.\n cboos: \'l\' is reserved for Vim like behavior, see #7867\n}}}\n\nFor the Subversion backend, some advanced additional features are available:\n - The `svn:needs-lock` property will be displayed\n - Support for the `svn:mergeinfo` property showing the merged and eligible information\n - Support for browsing the `svn:externals` property \n   (which can be [TracIni#svn:externals-section configured])\n - The `svn:mime-type` property is used to select the syntax highlighter for rendering \n   the file. For example, setting `svn:mime-type` to `text/html` will ensure the file is \n   highlighted as HTML, regardless of the file extension. It also allows selecting the character \n   encoding used in the file content. For example, if the file content is encoded in UTF-8, \n   set `svn:mime-type` to `text/html;charset=utf-8`. The `charset=` specification overrides the \n   default encoding defined in the `default_charset` option of the `[trac]` section \n   of [TracIni#trac-section trac.ini].\n{{{#!comment\nMMM: I found this section a bit hard to understand. I changed the first item as I understood that well.\nbut I think the other items could be changed also\n cboos: in the meantime, I\'ve added the \'\'advanced\'\' word as a hint this can be a bit complex...\n}}}\n\n\n----\n{{{#!div style=\"font-size:85%\"\n[=#note-multirepos (1)] This means that after upgrading a single-repository Trac of version \n0.11 (or below) to a multi-repository Trac (0.12), the repository browser will look and feel \nthe same, that single repository becoming automatically the \"default\" repository.\n}}}\n\nSee also: TracGuide, TracChangeset, TracFineGrainedPermissions\n',NULL,NULL),('TracCgi',1,1291894092000000,'trac','127.0.0.1','= Installing Trac as CGI =\n\n{{{\n#!div class=important\n  \'\'Please note that using Trac via CGI is the slowest deployment method available. It is slower than [TracModPython mod_python], [TracFastCgi FastCGI] and even [trac:TracOnWindowsIisAjp IIS/AJP] on Windows.\'\'\n}}}\n\nCGI script is the entrypoint that web-server calls when a web-request to an application is made. To generate the `trac.cgi` script run:\n{{{\ntrac-admin /path/to/env deploy /path/to/www/trac\n}}}\n`trac.cgi` will be in the `cgi-bin` folder inside the given path. Make sure it is executable by your web server. This command also copies `static resource` files to a `htdocs` directory of a given destination.\n\n== Apache web-server configuration ==\n\nIn [http://httpd.apache.org/ Apache] there are two ways to run Trac as CGI:\n\n 1. Use a `ScriptAlias` directive that maps an URL to the `trac.cgi` script (recommended)\n 2. Copy the `trac.cgi` file into the directory for CGI executables used by your web server (commonly named `cgi-bin`). You can also create a symbolic link, but in that case make sure that the `FollowSymLinks` option is enabled for the `cgi-bin` directory.\n\nTo make Trac available at `http://yourhost.example.org/trac` add `ScriptAlias` directive to Apache configuration file, changing `trac.cgi` path to match your installation:\n{{{\nScriptAlias /trac /path/to/www/trac/cgi-bin/trac.cgi\n}}}\n\n \'\'Note that this directive requires enabled `mod_alias` module.\'\'\n\nIf you\'re using Trac with a single project you need to set its location using the `TRAC_ENV` environment variable:\n{{{\n<Location \"/trac\">\n  SetEnv TRAC_ENV \"/path/to/projectenv\"\n</Location>\n}}}\n\nOr to use multiple projects you can specify their common parent directory using the `TRAC_ENV_PARENT_DIR` variable:\n{{{\n<Location \"/trac\">\n  SetEnv TRAC_ENV_PARENT_DIR \"/path/to/project/parent/dir\"\n</Location>\n}}}\n\n \'\'Note that the `SetEnv` directive requires enabled `mod_env` module. It is also possible to set TRAC_ENV in trac.cgi. Just add the following code between \"try:\" and \"from trac.web ...\":\'\'\n\n{{{\n    import os\n    os.environ[\'TRAC_ENV\'] = \"/path/to/projectenv\"\n}}}\n\n \'\' Or for TRAC_ENV_PARENT_DIR: \'\'\n\n{{{\n    import os\n    os.environ[\'TRAC_ENV_PARENT_DIR\'] = \"/path/to/project/parent/dir\"\n}}}\n\nIf you are using the [http://httpd.apache.org/docs/suexec.html Apache suEXEC] feature please see [http://trac.edgewall.org/wiki/ApacheSuexec].\n\nOn some systems, you \'\'may\'\' need to edit the shebang line in the `trac.cgi` file to point to your real Python installation path. On a Windows system you may need to configure Windows to know how to execute a .cgi file (Explorer -> Tools -> Folder Options -> File Types -> CGI).\n\n== Mapping Static Resources ==\n\nOut of the box, Trac will pass static resources such as style sheets or images through itself. For a CGI setup this is \'\'\'highly undesirable\'\'\', because this way CGI script is invoked for documents that could be much more efficiently served directly by web server.\n\nWeb servers such as [http://httpd.apache.org/ Apache] allow you to create “Aliases” to resources, giving them a virtual URL that doesn\'t necessarily reflect the layout of the servers file system. We already used this capability by defining a `ScriptAlias` for the CGI script. We also can map requests for static resources directly to the directory on the file system, avoiding processing these requests by CGI script.\n\nAdd the following snippet to Apache configuration \'\'\'before\'\'\' the `ScriptAlias` for the CGI script, changing paths to match your deployment:\n{{{\nAlias /trac/chrome/common /path/to/www/trac/htdocs\n<Directory \"/path/to/www/trac/htdocs\">\n  Order allow,deny\n  Allow from all\n</Directory>\n}}}\n\nNote that we mapped `/trac` part of the URL to the `trac.cgi` script, and the path `/chrome/common` is the path you have to append to that location to intercept requests to the static resources. \n\nFor example, if Trac is mapped to `/cgi-bin/trac.cgi` on your server, the URL of the Alias should be `/cgi-bin/trac.cgi/chrome/common`.\n\nSimilarly, if you have static resources in a project\'s htdocs directory (which is referenced by /chrome/site URL in themes), you can configure Apache to serve those resources (again, put this \'\'\'before\'\'\' the `ScriptAlias` for the CGI script, and adjust names and locations to match your installation):\n\n{{{\nAlias /trac/chrome/site /path/to/projectenv/htdocs\n<Directory \"/path/to/projectenv/htdocs\">\n  Order allow,deny\n  Allow from all\n</Directory>\n}}}\n\nAlternatively to hacking `/trac/chrome/site`, you can directly specify path to static resources using `htdocs_location` configuration option in [wiki:TracIni trac.ini]:\n{{{\n[trac]\nhtdocs_location = http://yourhost.example.org/trac-htdocs\n}}}\n\nTrac will then use this URL when embedding static resources into HTML pages. Of course, you still need to make the Trac `htdocs` directory available through the web server at the specified URL, for example by copying (or linking) the directory into the document root of the web server:\n{{{\n$ ln -s /path/to/www/trac/htdocs /var/www/yourhost.example.org/trac-htdocs\n}}}\n\nNote that in order to get this `htdocs` directory, you need first to extract the relevant Trac resources using the `deploy` command of TracAdmin:\n[[TracAdminHelp(deploy)]]\n\n\n== Adding Authentication ==\n\nThe simplest way to enable authentication with Apache is to create a password file. Use the `htpasswd` program to create the password file:\n{{{\n$ htpasswd -c /somewhere/trac.htpasswd admin\nNew password: <type password>\nRe-type new password: <type password again>\nAdding password for user admin\n}}}\n\nAfter the first user, you dont need the \"-c\" option anymore:\n{{{\n$ htpasswd /somewhere/trac.htpasswd john\nNew password: <type password>\nRe-type new password: <type password again>\nAdding password for user john\n}}}\n\n  \'\'See the man page for `htpasswd` for full documentation.\'\'\n\nAfter you\'ve created the users, you can set their permissions using TracPermissions.\n\nNow, you\'ll need to enable authentication against the password file in the Apache configuration:\n{{{\n<Location \"/trac/login\">\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthUserFile /somewhere/trac.htpasswd\n  Require valid-user\n</Location>\n}}}\n\nIf you\'re hosting multiple projects you can use the same password file for all of them:\n{{{\n<LocationMatch \"/trac/[^/]+/login\">\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthUserFile /somewhere/trac.htpasswd\n  Require valid-user\n</LocationMatch>\n}}}\n\nFor better security, it is recommended that you either enable SSL or at least use the “digest” authentication scheme instead of “Basic”. Please read the [http://httpd.apache.org/docs/2.0/ Apache HTTPD documentation] to find out more. For example, on a Debian 4.0r1 (etch) system the relevant section  in apache configuration can look like this:\n{{{\n<Location \"/trac/login\">\n    LoadModule auth_digest_module /usr/lib/apache2/modules/mod_auth_digest.so\n    AuthType Digest\n    AuthName \"trac\"\n    AuthDigestDomain /trac\n    AuthUserFile /somewhere/trac.htpasswd\n    Require valid-user\n</Location>\n}}}\nand you\'ll have to create your .htpasswd file with htdigest instead of htpasswd as follows:\n{{{\n# htdigest /somewhere/trac.htpasswd trac admin\n}}}\nwhere the \"trac\" parameter above is the same as !AuthName above  (\"Realm\" in apache-docs). \n\n----\nSee also:  TracGuide, TracInstall, [wiki:TracModWSGI], TracFastCgi, TracModPython',NULL,NULL),('TracCgi',2,1397068026262899,'trac','127.0.0.1','= Installing Trac as CGI =\n\n{{{\n#!div class=important\n  \'\'Please note that using Trac via CGI is the slowest deployment method available. It is slower than [TracModPython mod_python], [TracFastCgi FastCGI] and even [trac:TracOnWindowsIisAjp IIS/AJP] on Windows.\'\'\n}}}\n\nCGI script is the entrypoint that web-server calls when a web-request to an application is made. To generate the `trac.cgi` script run:\n{{{\ntrac-admin /path/to/env deploy /path/to/www/trac\n}}}\n`trac.cgi` will be in the `cgi-bin` folder inside the given path. \'\'Make sure it is executable by your web server\'\'. This command also copies `static resource` files to a `htdocs` directory of a given destination.\n\n== Apache web-server configuration ==\n\nIn [http://httpd.apache.org/ Apache] there are two ways to run Trac as CGI:\n\n 1. Use a `ScriptAlias` directive that maps an URL to the `trac.cgi` script (recommended)\n 2. Copy the `trac.cgi` file into the directory for CGI executables used by your web server (commonly named `cgi-bin`). You can also create a symbolic link, but in that case make sure that the `FollowSymLinks` option is enabled for the `cgi-bin` directory.\n\nTo make Trac available at `http://yourhost.example.org/trac` add `ScriptAlias` directive to Apache configuration file, changing `trac.cgi` path to match your installation:\n{{{\nScriptAlias /trac /path/to/www/trac/cgi-bin/trac.cgi\n}}}\n\n \'\'Note that this directive requires enabled `mod_alias` module.\'\'\n\nIf you\'re using Trac with a single project you need to set its location using the `TRAC_ENV` environment variable:\n{{{\n<Location \"/trac\">\n  SetEnv TRAC_ENV \"/path/to/projectenv\"\n</Location>\n}}}\n\nOr to use multiple projects you can specify their common parent directory using the `TRAC_ENV_PARENT_DIR` variable:\n{{{\n<Location \"/trac\">\n  SetEnv TRAC_ENV_PARENT_DIR \"/path/to/project/parent/dir\"\n</Location>\n}}}\n\n \'\'Note that the `SetEnv` directive requires enabled `mod_env` module. It is also possible to set TRAC_ENV in trac.cgi. Just add the following code between \"try:\" and \"from trac.web ...\":\'\'\n\n{{{\n    import os\n    os.environ[\'TRAC_ENV\'] = \"/path/to/projectenv\"\n}}}\n\n \'\' Or for TRAC_ENV_PARENT_DIR: \'\'\n\n{{{\n    import os\n    os.environ[\'TRAC_ENV_PARENT_DIR\'] = \"/path/to/project/parent/dir\"\n}}}\n\nIf you are using the [http://httpd.apache.org/docs/suexec.html Apache suEXEC] feature please see [http://trac.edgewall.org/wiki/ApacheSuexec].\n\nOn some systems, you \'\'may\'\' need to edit the shebang line in the `trac.cgi` file to point to your real Python installation path. On a Windows system you may need to configure Windows to know how to execute a .cgi file (Explorer -> Tools -> Folder Options -> File Types -> CGI).\n\n=== Using WSGI ===\n\nYou can run a [http://henry.precheur.org/python/how_to_serve_cgi WSGI handler] [http://pythonweb.org/projects/webmodules/doc/0.5.3/html_multipage/lib/example-webserver-web-wsgi-simple-cgi.html under CGI].  You can [wiki:TracModWSGI#Thetrac.wsgiscript write your own application function], or use the deployed trac.wsgi\'s application.\n\n== Mapping Static Resources ==\n\nSee TracInstall#MappingStaticResources.\n\n== Adding Authentication ==\n\nSee TracInstall#ConfiguringAuthentication.\n\n----\nSee also:  TracGuide, TracInstall, [wiki:TracModWSGI], TracFastCgi, TracModPython',NULL,NULL),('TracChangeset',1,1291894092000000,'trac','127.0.0.1','= Trac Changeset Module =\n[[TracGuideToc]]\n\nTrac has a built-in functionality for visualizing “diffs” - changes to files.\n\nThere are different kinds of \'\'change sets\'\'. \nSome can correspond to revisions made in the repositories,\nothers can aggregate changes made in several revisions, \nbut in the end, any kind of differences can be shown.\n\nThe changeset view consists of two parts, the \'\'header\'\' \nand the \'\'diff views\'\'.\n\n== Changeset Header ==\n\nThe header shows an overview of the whole changeset.\nHere you will find information such as:\n\n * Timestamp -- When the changeset was commited\n * Author -- Who commited the changeset\n * Message -- A brief description from the author (the commit log message)\n * Files -- A list of files affected by this changeset\n\nIf more than one revision is involved in the set of changes being\ndisplayed, the \'\'Timestamp\'\', \'\'Author\'\' and \'\'Message\'\' fields \nwon\'t be shown.\n\nIn front of each listed file, you\'ll find  a colored rectangle. The color\nindicates how the file is affected by the changeset.\n \n * Green: Added\n * Red: Removed\n * Yellow: Modified\n * Blue: Copied\n * Gray: Moved\n\nThe color legend is located below the header as a reminder.\n\n== Diff Views ==\n\nBelow the header is the main part of the changeset, the diff view. Each file is shown in a separate section, each of which will contain only the regions of the file that are affected by the changeset. There are two different styles of displaying the diffs: \'\'inline\'\' or \'\'side-by-side\'\' (you can switch between those styles using the preferences form):\n\n * The \'\'inline\'\' style shows the changed regions of a file underneath each other. A region removed from the file will be colored red, an added region will be colored green. If a region was modified, the old version is displayed above the new version. Line numbers on the left side indicate the exact position of the change in both the old and the new version of the file.\n * The \'\'side-by-side\'\' style shows the old version on the left and the new version on the right (this will typically require more screen width than the inline style.) Added and removed regions will be colored in the same way as with the inline style (green and red, respectively), but modified regions will have a yellow background.\n\nIn addition, various advanced options are available in the preferences form for adjusting the display of the diffs:\n * You can set how many lines are displayed before and after every change\n   (if the value \'\'all\'\' is used, then the full file will be shown)\n * You can toggle whether blank lines, case changes and white space changes are ignored, thereby letting you find the functional changes more quickly\n\n\n== The Different Ways to Get a Diff ==\n\n=== Examining a Changeset ===\n\nWhen viewing a repository check-in, such as when following a\nchangeset [wiki:TracLinks link] or a changeset event in the \n[wiki:TracTimeline timeline], Trac will display the exact changes\nmade by the check-in.\n\nThere will be also navigation links to the \'\'Previous Changeset\'\'\nto and \'\'Next Changeset\'\'.\n\n=== Examining Differences Between Revisions ===\n\nOften you\'ll want to look at changes made on a file \nor on a directory spanning multiple revisions. The easiest way\nto get there is from the TracRevisionLog, where you can select\nthe \'\'old\'\' and the \'\'new\'\' revisions of the file or directory, and\nthen click the \'\'View changes\'\' button.\n\n=== Examining Differences Between Branches ===\n\nOne of the core features of version control systems is the possibility\nto work simultaneously on different \'\'Lines of Developments\'\', commonly\ncalled “branches”. Trac enables you to examine the exact differences\nbetween such branches.\n\nUsing the \'\'\'View changes ...\'\'\' button in the TracBrowser allows you to enter\n\'\'From:\'\' and \'\'To:\'\' path/revision pairs. The resulting set of differences consist\nof the changes that should be applied to the \'\'From:\'\' content in order\nto get to the \'\'To:\'\' content.\n\nFor convenience, it is possible to invert the roles of the \'\'old\'\' and the \'\'new\'\'\npath/revision pairs by clicking the \'\'Reverse Diff\'\' link on the changeset page.\n\n=== Checking the Last Change ===\n\nThe last possibility for examining changes is to use the \'\'Last Change\'\'\nlink provided by the TracBrowser.\n\nThis link will take you to the last change that was made on that path.\nFrom there, you can use the \'\'Previous Change\'\' and \'\'Next Change\'\' links\nto traverse the change history of the file or directory.\n\n----\nSee also: TracGuide, TracBrowser\n',NULL,NULL),('TracChangeset',2,1397068026239054,'trac','127.0.0.1','= Trac Changeset Module =\n[[TracGuideToc]]\n\nTrac has a built-in functionality for visualizing “diffs” - changes to files.\n\nThere are different kinds of \'\'change sets\'\'. \nSome can correspond to revisions made in the repositories,\nothers can aggregate changes made in several revisions, \nbut in the end, any kind of differences can be shown.\n\nThe changeset view consists of two parts, the \'\'header\'\' \nand the \'\'diff views\'\'.\n\n== Changeset Header ==\n\nThe header shows an overview of the whole changeset.\nHere you will find information such as:\n\n * Timestamp — When the changeset was commited\n * Author — Who commited the changeset\n * Message — A brief description from the author (the commit log message)\n * Location — Parent directory of all files affected by this changeset\n * Files — A list of files affected by this changeset\n\nIf more than one revision is involved in the set of changes being\ndisplayed, the \'\'Timestamp\'\', \'\'Author\'\' and \'\'Message\'\' fields \nwon\'t be shown.\n\nIn front of each listed file, you\'ll find  a colored rectangle. The color\nindicates how the file is affected by the changeset.\n \n [[span(style=background:#bfb;border:1px solid #999;font-size:80%;margin-right:.5em,\'\'  \'\')]] Green: Added \\\\\n [[span(style=background:#f88;border:1px solid #999;font-size:80%;margin-right:.5em,\'\'  \'\')]] Red: Removed \\\\\n [[span(style=background:#fd8;border:1px solid #999;font-size:80%;margin-right:.5em,\'\'  \'\')]] Yellow: Modified \\\\\n [[span(style=background:#88f;border:1px solid #999;font-size:80%;margin-right:.5em,\'\'  \'\')]] Blue: Copied \\\\\n [[span(style=background:#ccc;border:1px solid #999;font-size:80%;margin-right:.5em,\'\'  \'\')]] Gray: Moved \\\\\nThe color legend is located below the header as a reminder.\n\n== Diff Views ==\n\nBelow the header is the main part of the changeset, the diff view. Each file is shown in a separate section, each of which will contain only the regions of the file that are affected by the changeset. There are two different styles of displaying the diffs: \'\'inline\'\' or \'\'side-by-side\'\' (you can switch between those styles using the preferences form):\n\n * The \'\'inline\'\' style shows the changed regions of a file underneath each other. A region removed from the file will be colored red, an added region will be colored green. If a region was modified, the old version is displayed above the new version. Line numbers on the left side indicate the exact position of the change in both the old and the new version of the file.\n * The \'\'side-by-side\'\' style shows the old version on the left and the new version on the right (this will typically require more screen width than the inline style.) Added and removed regions will be colored in the same way as with the inline style (green and red, respectively), but modified regions will have a yellow background.\n\nIn addition, various advanced options are available in the preferences form for adjusting the display of the diffs:\n * You can set how many lines are displayed before and after every change\n   (if the value \'\'all\'\' is used, then the full file will be shown)\n * You can toggle whether blank lines, case changes and white space changes are ignored, thereby letting you find the functional changes more quickly\n\n\n== The Different Ways to Get a Diff ==\n\n=== Examining a Changeset ===\n\nWhen viewing a repository check-in, such as when following a\nchangeset [wiki:TracLinks link] or a changeset event in the \n[wiki:TracTimeline timeline], Trac will display the exact changes\nmade by the check-in.\n\nThere will be also navigation links to the \'\'Previous Changeset\'\'\nto and \'\'Next Changeset\'\'.\n\n=== Examining Differences Between Revisions ===\n\nOften you\'ll want to look at changes made on a file \nor on a directory spanning multiple revisions. The easiest way\nto get there is from the TracRevisionLog, where you can select\nthe \'\'old\'\' and the \'\'new\'\' revisions of the file or directory, and\nthen click the \'\'View changes\'\' button.\n\n=== Examining Differences Between Branches ===\n\nOne of the core features of version control systems is the possibility\nto work simultaneously on different \'\'Lines of Developments\'\', commonly\ncalled “branches”. Trac enables you to examine the exact differences\nbetween such branches.\n\nUsing the \'\'\'View changes ...\'\'\' button in the TracBrowser allows you to enter\n\'\'From:\'\' and \'\'To:\'\' path/revision pairs. The resulting set of differences consist\nof the changes that should be applied to the \'\'From:\'\' content in order\nto get to the \'\'To:\'\' content.\n\nFor convenience, it is possible to invert the roles of the \'\'old\'\' and the \'\'new\'\'\npath/revision pairs by clicking the \'\'Reverse Diff\'\' link on the changeset page.\n\n=== Checking the Last Change ===\n\nThe last possibility for examining changes is to use the \'\'Last Change\'\'\nlink provided by the TracBrowser.\n\nThis link will take you to the last change that was made on that path.\nFrom there, you can use the \'\'Previous Change\'\' and \'\'Next Change\'\' links\nto traverse the change history of the file or directory.\n\n----\nSee also: TracGuide, TracBrowser\n',NULL,NULL),('TracEnvironment',1,1291894092000000,'trac','127.0.0.1','= The Trac Environment =\n\nTrac uses a directory structure and a database for storing project data. The directory is referred to as the “environment”.\n\n== Creating an Environment ==\n\nA new Trac environment is created using  [wiki:TracAdmin trac-admin]:\n{{{\n$ trac-admin /path/to/myproject initenv\n}}}\n\n[wiki:TracAdmin trac-admin] will ask you for the name of the project, the\ndatabase connection string (explained below), and the type and path to\nyour source code repository.\n\n\'\'Note: The web server user will require file system write permission to \nthe environment directory and all the files inside. Please remember to set\nthe appropriate permissions. The same applies to the Subversion repository \nTrac is eventually using, although Trac will only require read access as long \nas you\'re not using the BDB file system. Also, it seems that project names\nwith spaces can be problematic for authentication (see [trac:#7163]).\'\'\n\n\'\'Note: \"initenv\" when using svn repository does not imply that trac-admin will perform \"svnadmin create\" for the specified repository path. You need to perform the \"svnadmin create\" prior to trac-admin initenv if you\'re creating a new svn repository altogether with a new trac environment, otherwise you will see a message \"Warning: couldn\'t index the repository\" when initializing the environment.\'\'\n\n== Database Connection Strings ==\n\nSince version 0.9, Trac supports both [http://sqlite.org/ SQLite] and\n[http://www.postgresql.org/ PostgreSQL] database backends.  Preliminary\nsupport for [http://mysql.com/ MySQL] was added in 0.10.  The default is\nto use SQLite, which is probably sufficient for most projects. The database\nfile is then stored in the environment directory, and can easily be \n[wiki:TracBackup backed up] together with the rest of the environment.\n\n=== Embedded SQLite Connection String ===\nThe connection string for an embedded SQLite database is:\n{{{\nsqlite:db/trac.db\n}}}\n\n=== PostgreSQL Connection String ===\nIf you want to use PostgreSQL or MySQL instead, you\'ll have to use a\ndifferent connection string. For example, to connect to a PostgreSQL\ndatabase on the same machine called `trac`, that allows access to the\nuser `johndoe` with the password `letmein`, use:\n{{{\npostgres://johndoe:letmein@localhost/trac\n}}}\n\'\'Note that due to the way the above string is parsed, the \"/\" and \"@\" characters cannot be part of the password.\'\'\n\nIf PostgreSQL is running on a non-standard port (for example 9342), use:\n{{{\npostgres://johndoe:letmein@localhost:9342/trac\n}}}\n\nOn UNIX, you might want to select a UNIX socket for the transport,\neither the default socket as defined by the PGHOST environment variable:\n{{{\npostgres://user:password@/database\n}}}\nor a specific one:\n{{{\npostgres://user:password@/database?host=/path/to/socket/dir\n}}}\n\nNote that with PostgreSQL you will have to create the database before running\n`trac-admin initenv`.\n\nSee the [http://www.postgresql.org/docs/ PostgreSQL documentation] for detailed instructions on how to administer [http://postgresql.org PostgreSQL].\nGenerally, the following is sufficient to create a database user named `tracuser`, and a database named `trac`.\n{{{\ncreateuser -U postgres -E -P tracuser\ncreatedb -U postgres -O tracuser -E UTF8 trac\n}}}\nWhen running `createuser` you will be prompted for the password for the user \'tracuser\'. This new user will not be a superuser, will not be allowed to create other databases and will not be allowed to create other roles. These privileges are not needed to run a trac instance. If no password is desired for the user, simply remove the `-P` and `-E` options from the `createuser` command.  Also note that the database should be created as UTF8. LATIN1 encoding causes errors trac\'s use of unicode in trac.  SQL_ASCII also seems to work.\n\nUnder some default configurations (debian) one will have run the `createuser` and `createdb` scripts as the `postgres` user.  For example:\n{{{\nsudo su - postgres -c \'createuser -U postgres -S -D -R -E -P tracuser\'\nsudo su - postgres -c \'createdb -U postgres -O tracuser -E UTF8 trac\'\n}}}\n\nTrac uses the `public` schema by default but you can specify a different schema in the connection string:\n{{{\npostgres://user:pass@server/database?schema=yourschemaname\n}}}\n\n=== MySQL Connection String ===\n\nIf you want to use MySQL instead, you\'ll have to use a\ndifferent connection string. For example, to connect to a MySQL\ndatabase on the same machine called `trac`, that allows access to the\nuser `johndoe` with the password `letmein`, the mysql connection string is:\n{{{\nmysql://johndoe:letmein@localhost:3306/trac\n}}}\n\n== Source Code Repository ==\n\nYou\'ll first have to provide the \'\'type\'\' of your repository (e.g. `svn` for Subversion,\nwhich is the default), then the \'\'path\'\' where the repository is located.\n\nIf you don\'t want to use Trac with a source code repository, simply leave the \'\'path\'\' empty\n(the \'\'type\'\' information doesn\'t matter, then).\n\nFor some systems, it is possible to specify not only the path to the repository,\nbut also a \'\'scope\'\' within the repository. Trac will then only show information\nrelated to the files and changesets below that scope. The Subversion backend for\nTrac supports this; for other types, check the corresponding plugin\'s documentation.\n\nExample of a configuration for a Subversion repository:\n{{{\n[trac]\nrepository_type = svn\nrepository_dir = /path/to/your/repository\n}}}\n\nThe configuration for a scoped Subversion repository would be:\n{{{\n[trac]\nrepository_type = svn\nrepository_dir = /path/to/your/repository/scope/within/repos\n}}}\n\n== Directory Structure ==\n\nAn environment directory will usually consist of the following files and directories:\n\n * `README` - Brief description of the environment.\n * `VERSION` - Contains the environment version identifier.\n * `attachments` - Attachments to wiki pages and tickets are stored here.\n * `conf`\n   * `trac.ini` - Main configuration file. See TracIni.\n * `db`\n   * `trac.db` - The SQLite database (if you\'re using SQLite).\n * `htdocs` - directory containing web resources, which can be referenced in Genshi templates. \'\'\'\'\'(0.11 only)\'\'\'\'\'\n * `log` - default directory for log files, if logging is turned on and a relative path is given.\n * `plugins` - Environment-specific [wiki:TracPlugins plugins] (Python eggs, since [trac:milestone:0.10 0.10])\n * `templates` - Custom Genshi environment-specific templates. \'\'\'\'\'(0.11 only)\'\'\'\'\'\n   * `site.html` - method to customize header, footer, and style, described in TracInterfaceCustomization#SiteAppearance\n * \'\'`templates` - Custom [trac:ClearSilver ClearSilver] environment-specific templates. \'\'\'(0.10 only)\'\'\' \'\'\n   * \'\'`site_css.cs` - Custom CSS rules.\'\'\n   * \'\'`site_footer.cs` - Custom page footer.\'\'\n   * \'\'`site_header.cs` - Custom page header.\'\'\n * \'\'`wiki-macros` - Environment-specific [WikiMacros Wiki macros]. \'\'\'(0.10 only)\'\'\' \'\'\n\n  \'\'\'Note: don\'t confuse a Trac environment directory with the source code repository directory.\nIt happens that the above structure is loosely modelled after the Subversion repository directory \nstructure, but they are not and \'\'must not\'\' be located at the same place.\'\'\'\n\n----\nSee also: TracAdmin, TracBackup, TracIni, TracGuide\n',NULL,NULL),('TracEnvironment',2,1397068026239879,'trac','127.0.0.1','= The Trac Environment =\n\nTrac uses a directory structure and a database for storing project data. The directory is referred to as the “environment”.\n\n== Creating an Environment ==\n\nA new Trac environment is created using  [TracAdmin#initenv trac-admin\'s initenv]:\n{{{\n$ trac-admin /path/to/myproject initenv\n}}}\n\n`trac-admin` will ask you for the name of the project and the\ndatabase connection string (explained below).\n\n=== Some Useful Tips\n - The user under which the web server runs will require file system write permission to \n the environment directory and all the files inside. Please remember to set\n the appropriate permissions. The same applies to the source code repository, \n although the user under which Trac runs will only require write access to a Subversion repository created with the BDB file system; for other repository types, check the corresponding plugin\'s documentation. \n \n - `initenv`, when using an svn repository, does not imply that trac-admin will perform `svnadmin create` for the specified repository path. You need to perform the `svnadmin create` prior to `trac-admin initenv` if you\'re creating a new svn repository altogether with a new trac environment, otherwise you will see a message \"Warning: couldn\'t index the repository\" when initializing the environment.\n\n - Non-ascii environment paths are not supported\n \n - Also, it seems that project names with spaces can be problematic for authentication (see [trac:#7163]).\n\n - TracPlugins located in a [TracIni#inherit-section shared plugins folder] that is defined in an [TracIni#GlobalConfiguration inherited configuration] are currently not loaded during creation, and hence, if they need to create extra tables for example, you\'ll need to [TracUpgrade#UpgradetheTracEnvironment upgrade the environment] before being able to use it.\n\n== Database Connection Strings ==\n\nSince version 0.9, Trac supports both [http://sqlite.org/ SQLite] and\n[http://www.postgresql.org/ PostgreSQL] database backends.  Preliminary\nsupport for [http://mysql.com/ MySQL] was added in 0.10.  The default is\nto use SQLite, which is probably sufficient for most projects. The database\nfile is then stored in the environment directory, and can easily be \n[wiki:TracBackup backed up] together with the rest of the environment.\n\n=== SQLite Connection String ===\nThe connection string for an SQLite database is:\n{{{\nsqlite:db/trac.db\n}}}\nwhere `db/trac.db` is the path to the database file within the Trac environment.\n\n=== PostgreSQL Connection String ===\nIf you want to use PostgreSQL or MySQL instead, you\'ll have to use a\ndifferent connection string. For example, to connect to a PostgreSQL\ndatabase on the same machine called `trac`, that allows access to the\nuser `johndoe` with the password `letmein`, use:\n{{{\npostgres://johndoe:letmein@localhost/trac\n}}}\n\'\'Note that due to the way the above string is parsed, the \"/\" and \"@\" characters cannot be part of the password.\'\'\n\nIf PostgreSQL is running on a non-standard port (for example 9342), use:\n{{{\npostgres://johndoe:letmein@localhost:9342/trac\n}}}\n\nOn UNIX, you might want to select a UNIX socket for the transport,\neither the default socket as defined by the PGHOST environment variable:\n{{{\npostgres://user:password@/database\n}}}\nor a specific one:\n{{{\npostgres://user:password@/database?host=/path/to/socket/dir\n}}}\n\nNote that with PostgreSQL you will have to create the database before running\n`trac-admin initenv`.\n\nSee the [http://www.postgresql.org/docs/ PostgreSQL documentation] for detailed instructions on how to administer [http://postgresql.org PostgreSQL].\nGenerally, the following is sufficient to create a database user named `tracuser`, and a database named `trac`.\n{{{\ncreateuser -U postgres -E -P tracuser\ncreatedb -U postgres -O tracuser -E UTF8 trac\n}}}\nWhen running `createuser` you will be prompted for the password for the user \'tracuser\'. This new user will not be a superuser, will not be allowed to create other databases and will not be allowed to create other roles. These privileges are not needed to run a trac instance. If no password is desired for the user, simply remove the `-P` and `-E` options from the `createuser` command.  Also note that the database should be created as UTF8. LATIN1 encoding causes errors trac\'s use of unicode in trac.  SQL_ASCII also seems to work.\n\nUnder some default configurations (debian) one will have run the `createuser` and `createdb` scripts as the `postgres` user.  For example:\n{{{\nsudo su - postgres -c \'createuser -U postgres -S -D -R -E -P tracuser\'\nsudo su - postgres -c \'createdb -U postgres -O tracuser -E UTF8 trac\'\n}}}\n\nTrac uses the `public` schema by default but you can specify a different schema in the connection string:\n{{{\npostgres://user:pass@server/database?schema=yourschemaname\n}}}\n\n=== MySQL Connection String ===\n\nIf you want to use MySQL instead, you\'ll have to use a\ndifferent connection string. For example, to connect to a MySQL\ndatabase on the same machine called `trac`, that allows access to the\nuser `johndoe` with the password `letmein`, the mysql connection string is:\n{{{\nmysql://johndoe:letmein@localhost:3306/trac\n}}}\n\n== Source Code Repository ==\n\nSince version 0.12, a single Trac environment can be connected to more than one repository. There are many different ways to connect repositories to an environment, see TracRepositoryAdmin. This page also details the various attributes that can be set for a repository (like `type`, `url`, `description`).\n\nIn Trac 0.12 `trac-admin` no longer asks questions related to repositories. Therefore, by default Trac is not connected to any source code repository, and the \'\'Browse Source\'\' toolbar item will not be displayed.\nYou can also explicitly disable the `trac.versioncontrol.*` components (which are otherwise still loaded)\n{{{\n[components]\ntrac.versioncontrol.* = disabled\n}}}\n\nFor some version control systems, it is possible to specify not only the path to the repository,\nbut also a \'\'scope\'\' within the repository. Trac will then only show information\nrelated to the files and changesets below that scope. The Subversion backend for\nTrac supports this; for other types, check the corresponding plugin\'s documentation.\n\nExample of a configuration for a Subversion repository used as the default repository:\n{{{\n[trac]\nrepository_type = svn\nrepository_dir = /path/to/your/repository\n}}}\n\nThe configuration for a scoped Subversion repository would be:\n{{{\n[trac]\nrepository_type = svn\nrepository_dir = /path/to/your/repository/scope/within/repos\n}}}\n\n== Directory Structure ==\n\nAn environment directory will usually consist of the following files and directories:\n\n * `README` - Brief description of the environment.\n * `VERSION` - Contains the environment version identifier.\n * `attachments` - Attachments to wiki pages and tickets are stored here.\n * `conf`\n   * `trac.ini` - Main configuration file. See TracIni.\n * `db`\n   * `trac.db` - The SQLite database (if you\'re using SQLite).\n * `htdocs` - directory containing web resources, which can be referenced in Genshi templates using `/htdocs/site/...` URLs. \'\'(since 0.11)\'\'\n * `log` - default directory for log files, if logging is turned on and a relative path is given.\n * `plugins` - Environment-specific [wiki:TracPlugins plugins] (Python eggs or single file plugins, since [trac:milestone:0.10 0.10])\n * `templates` - Custom Genshi environment-specific templates. \'\'(since 0.11)\'\'\n   * `site.html` - method to customize header, footer, and style, described in TracInterfaceCustomization#SiteAppearance\n\n=== Caveat: don\'t confuse a \'\'Trac environment directory\'\' with the \'\'source code repository directory\'\' #Caveat\n\nThis is a common beginners\' mistake.\nIt happens that the structure for a Trac environment is loosely modelled after the Subversion repository directory \nstructure, but those are two disjoint entities and they are not and \'\'must not\'\' be located at the same place.\n\n----\nSee also: TracAdmin, TracBackup, TracIni, TracGuide\n',NULL,NULL),('TracFastCgi',1,1291894092000000,'trac','127.0.0.1','= Trac with FastCGI =\n\n[http://www.fastcgi.com/ FastCGI] interface allows Trac to remain resident much like with [wiki:TracModPython mod_python]. It is faster than external CGI interfaces which must start a new process for each request. However, unlike mod_python, FastCGI supports [http://httpd.apache.org/docs/suexec.html Apache SuEXEC], i.e. run with different permissions than web server. Additionally, it is supported by much wider variety of web servers.\n\n\'\'\'Note for Windows:\'\'\' Trac\'s FastCGI does not run under Windows, as Windows does not implement `Socket.fromfd`, which is used by `_fcgi.py`. If you want to connect to IIS, you may want to try [trac:TracOnWindowsIisAjp AJP].\n\n== Simple Apache configuration ==\n\nThere are two FastCGI modules commonly available for Apache: `mod_fastcgi` and\n`mod_fcgid` (preferred). The latter is more up-to-date.\n\n==== setup with `mod_fastcgi` ====\n`mod_fastcgi` uses `FastCgiIpcDir` and `FastCgiConfig` directives that should be added to an appropriate Apache configuration file:\n{{{\n# Enable fastcgi for .fcgi files\n# (If you\'re using a distro package for mod_fcgi, something like\n# this is probably already present)\n<IfModule mod_fastcgi.c>\n   AddHandler fastcgi-script .fcgi\n   FastCgiIpcDir /var/lib/apache2/fastcgi \n</IfModule>\nLoadModule fastcgi_module /usr/lib/apache2/modules/mod_fastcgi.so\n}}}\nSetting `FastCgiIpcDir` is optional if the default is suitable. Note that the `LoadModule` line must be after the `IfModule` group.\n\nConfigure `ScriptAlias` or similar options as described in TracCgi, but\ncalling `trac.fcgi` instead of `trac.cgi`.\n\nYou can set up the `TRAC_ENV` as an overall default:\n{{{\nFastCgiConfig -initial-env TRAC_ENV=/path/to/env/trac\n}}}\n\nOr you can serve multiple Trac projects in a directory like:\n{{{\nFastCgiConfig -initial-env TRAC_ENV_PARENT_DIR=/parent/dir/of/projects\n}}}\n\n==== setup with `mod_fcgid` ====\nConfigure `ScriptAlias` (see TracCgi for details), but call `trac.fcgi`\ninstead of `trac.cgi`. Note that slash at the end - it is important.\n{{{\nScriptAlias /trac /path/to/www/trac/cgi-bin/trac.fcgi/\n}}}\n\nTo setup Trac environment for `mod_fcgid` it is necessary to use\n`FCGIDDefaultInitEnv` directive. It cannot be used in `Directory` or\n`Location` context, so if you need to support multiple projects, try\nalternative environment setup below.\n\n{{{\nFCGIDDefaultInitEnv TRAC_ENV /path/to/env/trac/\n}}}\n\n==== alternative environment setup ====\nA better method to specify path to Trac environment it to embed the path\ninto `trac.fcgi` script itself. That doesn\'t require configuration of server\nenvironment variables, works for both FastCgi modules\n(and for [http://www.lighttpd.net/ lighttpd] and CGI as well):\n{{{\nimport os\nos.environ[\'TRAC_ENV\'] = \"/path/to/projectenv\"\n}}}\nor\n{{{\nimport os\nos.environ[\'TRAC_ENV_PARENT_DIR\'] = \"/path/to/project/parent/dir\"\n}}}\n\nWith this method different projects can be supported by using different\n`.fcgi` scripts with different `ScriptAliases`.\n\nSee [https://coderanger.net/~coderanger/httpd/fcgi_example.conf this fcgid example config] which uses a !ScriptAlias directive with trac.fcgi with a trailing / like this:\n{{{\nScriptAlias / /srv/tracsite/cgi-bin/trac.fcgi/\n}}}\n\n== Simple Cherokee Configuration ==\n\nThe configuration on Cherokee\'s side is quite simple. You will only need to know that you can spawn Trac as an SCGI process.\nYou can either start it manually, or better yet, automatically by letting Cherokee spawn the server whenever it is down.\nFirst set up an information source in cherokee-admin with a local interpreter.\n\n{{{\nHost:\nlocalhost:4433\n\nInterpreter:\n/usr/bin/tracd —single-env —daemonize —protocol=scgi —hostname=localhost —port=4433 /path/to/project/\n}}}\n\nIf the port was not reachable, the interpreter command would be launched. Note that, in the definition of the information source, you will have to manually launch the spawner if you use a \'\'Remote host\'\' as \'\'Information source\'\' instead of a \'\'Local interpreter\'\'.\n\nAfter doing this, we will just have to create a new rule managed by the SCGI handler to access Trac. It can be created in a new virtual server, trac.example.net for instance, and will only need two rules. The \'\'\'default\'\'\' one will use the SCGI handler associated to the previously created information source.\nThe second rule will be there to serve the few static files needed to correctly display the Trac interface. Create it as \'\'Directory rule\'\' for \'\'/chrome/common\'\' and just set it to the \'\'Static files\'\' handler and with a \'\'Document root\'\' that points to the appropriate files: \'\'/usr/share/trac/htdocs/\'\'\n\n== Simple Lighttpd Configuration ==\n\nThe FastCGI front-end was developed primarily for use with alternative webservers, such as [http://www.lighttpd.net/ lighttpd].\n\nlighttpd is a secure, fast, compliant and very flexible web-server that has been optimized for high-performance\nenvironments.  It has a very low memory footprint compared to other web servers and takes care of CPU load.\n\nFor using `trac.fcgi`(prior to 0.11) / fcgi_frontend.py (0.11) with lighttpd add the following to your lighttpd.conf:\n{{{\n#var.fcgi_binary=\"/usr/bin/python /path/to/fcgi_frontend.py\" # 0.11 if installed with easy_setup, it is inside the egg directory\nvar.fcgi_binary=\"/path/to/cgi-bin/trac.fcgi\" # 0.10 name of prior fcgi executable\nfastcgi.server = (\"/trac\" =>\n   \n                   (\"trac\" =>\n                     (\"socket\" => \"/tmp/trac-fastcgi.sock\",\n                      \"bin-path\" => fcgi_binary,\n                      \"check-local\" => \"disable\",\n                      \"bin-environment\" =>\n                        (\"TRAC_ENV\" => \"/path/to/projenv\")\n                     )\n                   )\n                 )\n}}}\n\nNote that you will need to add a new entry to `fastcgi.server` for each separate Trac instance that you wish to run. Alternatively, you may use the `TRAC_ENV_PARENT_DIR` variable instead of `TRAC_ENV` as described above,\nand you may set one of the two in `trac.fcgi` instead of in `lighttpd.conf`\nusing `bin-environment` (as in the section above on Apache configuration).\n\nFor using two projects with lighttpd add the following to your `lighttpd.conf`:\n{{{\nfastcgi.server = (\"/first\" =>\n                   (\"first\" =>\n                    (\"socket\" => \"/tmp/trac-fastcgi-first.sock\",\n                     \"bin-path\" => fcgi_binary,\n                     \"check-local\" => \"disable\",\n                     \"bin-environment\" =>\n                       (\"TRAC_ENV\" => \"/path/to/projenv-first\")\n                    )\n                  ),\n                  \"/second\" =>\n                    (\"second\" =>\n                    (\"socket\" => \"/tmp/trac-fastcgi-second.sock\",\n                     \"bin-path\" => fcgi_binary,\n                     \"check-local\" => \"disable\",\n                     \"bin-environment\" =>\n                       (\"TRAC_ENV\" => \"/path/to/projenv-second\")\n                    )\n                  )\n                )\n}}}\nNote that field values are different.  If you prefer setting the environment\nvariables in the `.fcgi` scripts, then copy/rename `trac.fcgi`, e.g., to\n`first.fcgi` and `second.fcgi`, and reference them in the above settings.\nNote that the above will result in different processes in any event, even\nif both are running from the same `trac.fcgi` script.\n{{{\n#!div class=important\n\'\'\'Note\'\'\' It\'s very important the order on which server.modules are loaded, if mod_auth is not loaded \'\'\'BEFORE\'\'\' mod_fastcgi, then the server will fail to authenticate the user.\n}}}\nFor authentication you should enable mod_auth in lighttpd.conf \'server.modules\', select auth.backend and auth rules:\n{{{\nserver.modules              = (\n...\n  \"mod_auth\",\n...\n)\n\nauth.backend               = \"htpasswd\"\n\n# Separated password files for each project\n# See \"Conditional Configuration\" in\n# http://trac.lighttpd.net/trac/file/branches/lighttpd-merge-1.4.x/doc/configuration.txt\n\n$HTTP[\"url\"] =~ \"^/first/\" {\n  auth.backend.htpasswd.userfile = \"/path/to/projenv-first/htpasswd.htaccess\"\n}\n$HTTP[\"url\"] =~ \"^/second/\" {\n  auth.backend.htpasswd.userfile = \"/path/to/projenv-second/htpasswd.htaccess\"\n}\n\n# Enable auth on trac URLs, see\n# http://trac.lighttpd.net/trac/file/branches/lighttpd-merge-1.4.x/doc/authentication.txt\n\nauth.require = (\"/first/login\" =>\n                (\"method\"  => \"basic\",\n                 \"realm\"   => \"First project\",\n                 \"require\" => \"valid-user\"\n                ),\n                \"/second/login\" =>\n                (\"method\"  => \"basic\",\n                 \"realm\"   => \"Second project\",\n                 \"require\" => \"valid-user\"\n                )\n               )\n\n\n}}}\nNote that lighttpd (I use version 1.4.3) stopped if password file doesn\'t exist.\n\nNote that lighttpd doesn\'t support \'valid-user\' in versions prior to 1.3.16.\n\nConditional configuration is also useful for mapping static resources, i.e. serving out images and CSS directly instead of through FastCGI:\n{{{\n# Aliasing functionality is needed\nserver.modules += (\"mod_alias\")\n\n# Setup an alias for the static resources\nalias.url = (\"/trac/chrome/common\" => \"/usr/share/trac/htdocs\")\n\n# Use negative lookahead, matching all requests that ask for any resource under /trac, EXCEPT in\n# /trac/chrome/common, and use FastCGI for those\n$HTTP[\"url\"] =~ \"^/trac(?!/chrome/common)\" {\n# Even if you have other fastcgi.server declarations for applications other than Trac, do NOT use += here\nfastcgi.server = (\"/trac\" =>\n                   (\"trac\" =>\n                     (\"socket\" => \"/tmp/trac-fastcgi.sock\",\n                      \"bin-path\" => fcgi_binary,\n                      \"check-local\" => \"disable\",\n                      \"bin-environment\" =>\n                        (\"TRAC_ENV\" => \"/path/to/projenv\")\n                     )\n                   )\n                 )\n}\n}}}\nThe technique can be easily adapted for use with multiple projects by creating aliases for each of them, and wrapping the fastcgi.server declarations inside conditional configuration blocks.\nAlso there is another way to handle multiple projects and it\'s to use TRAC_ENV_PARENT_DIR instead of TRAC_ENV and use global auth, let\'s see an example:\n{{{\n#  This is for handling multiple projects\n  alias.url       = ( \"/trac/\" => \"/path/to/trac/htdocs/\" )\n\n  fastcgi.server += (\"/projects\"  =>\n                      (\"trac\" =>\n                        (\n                          \"socket\" => \"/tmp/trac.sock\",\n                          \"bin-path\" => fcgi_binary,\n                          \"check-local\" => \"disable\",\n                          \"bin-environment\" =>\n                            (\"TRAC_ENV_PARENT_DIR\" => \"/path/to/parent/dir/of/projects/\" )\n                        )\n                      )\n                    )\n#And here starts the global auth configuration\n  auth.backend = \"htpasswd\"\n  auth.backend.htpasswd.userfile = \"/path/to/unique/htpassword/file/trac.htpasswd\"\n  $HTTP[\"url\"] =~ \"^/projects/.*/login$\" {\n    auth.require = (\"/\" =>\n                     (\n                       \"method\"  => \"basic\",\n                       \"realm\"   => \"trac\",\n                       \"require\" => \"valid-user\"\n                     )\n                   )\n  }\n}}}\n\nChanging date/time format also supported by lighttpd over environment variable LC_TIME\n{{{\nfastcgi.server = (\"/trac\" =>\n                   (\"trac\" =>\n                     (\"socket\" => \"/tmp/trac-fastcgi.sock\",\n                      \"bin-path\" => fcgi_binary,\n                      \"check-local\" => \"disable\",\n                      \"bin-environment\" =>\n                        (\"TRAC_ENV\" => \"/path/to/projenv\",\n                        \"LC_TIME\" => \"ru_RU\")\n                     )\n                   )\n                 )\n}}}\nFor details about languages specification see [trac:TracFaq TracFaq] question 2.13.\n\nOther important information like [http://trac.lighttpd.net/trac/wiki/TracInstall this updated TracInstall page], [wiki:TracCgi#MappingStaticResources and this] are useful for non-fastcgi specific installation aspects.\n\nIf you use trac-0.9, read [http://lists.edgewall.com/archive/trac/2005-November/005311.html about small bug]\n\nRelaunch lighttpd, and browse to `http://yourhost.example.org/trac` to access Trac.\n\nNote about running lighttpd with reduced permissions:\n\n  If nothing else helps and trac.fcgi doesn\'t start with lighttpd settings __server.username = \"www-data\"__, __server.groupname = \"www-data\"__, then in the `bin-environment` section set `PYTHON_EGG_CACHE` to the home directory of `www-data` or some other directory accessible to this account for writing.\n\n\n== Simple !LiteSpeed Configuration ==\n\nThe FastCGI front-end was developed primarily for use with alternative webservers, such as [http://www.litespeedtech.com/ LiteSpeed].\n\n!LiteSpeed web server is an event-driven asynchronous Apache replacement designed from the ground-up to be secure, scalable, and operate with minimal resources. !LiteSpeed can operate directly from an Apache config file and is targeted for business-critical environments.\n\nSetup\n\n1) Please make sure you have first have a working install of a Trac project. Test install with “tracd” first.\n\n2) Create a Virtual Host for this setup. From now on we will refer to this vhost as TracVhost. For this tutorial we will be assuming that your trac project will be accessible via:\n\n{{{\nhttp://yourdomain.com/trac/\n}}}\n\n3) Go “TracVhost → External Apps” tab and create a new “External Application”.\n\n{{{\nName: MyTracFCGI	\nAddress: uds://tmp/lshttpd/mytracfcgi.sock\nMax Connections: 10\nEnvironment: TRAC_ENV=/fullpathto/mytracproject/ <--- path to root folder of trac project\nInitial Request Timeout (secs): 30\nRetry Timeout (secs): 0\nPersistent Connection	Yes\nConnection Keepalive Timeout: 30\nResponse Bufferring: No	\nAuto Start: Yes\nCommand: /usr/share/trac/cgi-bin/trac.fcgi  <--- path to trac.fcgi\nBack Log: 50\nInstances: 10\n}}}\n\n4) Optional. If you need to use htpasswd based authentication. Go to “TracVhost → Security” tab and create a new security “Realm”.\n\n{{{\nDB Type: Password File\nRealm Name: MyTracUserDB               <--- any name you wish and referenced later\nUser DB Location: /fullpathto/htpasswd <--- path to your htpasswd file\n}}}\n\nIf you don’t have a htpasswd file or don’t know how to create the entries within one, go to http://sherylcanter.com/encrypt.php, to generate the user:password combos.\n\n5) Go to “PythonVhost → Contexts” and create a new “FCGI Context”.\n\n{{{\nURI: /trac/                              <--- URI path to bind to python fcgi app we created	\nFast CGI App: [VHost Level] MyTractFCGI  <--- select the trac fcgi extapp we just created\nRealm: TracUserDB                        <--- only if (4) is set. select realm created in (4)\n}}}\n\n6) Modify /fullpathto/mytracproject/conf/trac.ini\n\n{{{\n#find/set base_rul, url, and link variables\nbase_url = http://yourdomain.com/trac/ <--- base url to generate correct links to\nurl = http://yourdomain.com/trac/      <--- link of project\nlink = http://yourdomain.com/trac/     <--- link of graphic logo\n}}}\n\n7) Restart !LiteSpeed, “lswsctrl restart”, and access your new Trac project at: \n\n{{{\nhttp://yourdomain.com/trac/\n}}}\n\n=== Simple Nginx Configuration ===\n\n1) Nginx configuration snippet - confirmed to work on 0.6.32\n{{{\n    server {\n        listen       10.9.8.7:443;\n        server_name  trac.example;\n\n        ssl                  on;\n        ssl_certificate      /etc/ssl/trac.example.crt;\n        ssl_certificate_key  /etc/ssl/trac.example.key;\n\n        ssl_session_timeout  5m;\n\n        ssl_protocols  SSLv2 SSLv3 TLSv1;\n        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n        ssl_prefer_server_ciphers   on;\n\n        # (Or ``^/some/prefix/(.*)``.\n        if ($uri ~ ^/(.*)) {\n             set $path_info /$1;\n        }\n\n        # You can copy this whole location to ``location [/some/prefix]/login``\n        # and remove the auth entries below if you want Trac to enforce\n        # authorization where appropriate instead of needing to authenticate\n        # for accessing the whole site.\n        # (Or ``location /some/prefix``.)\n        location / {\n            auth_basic            \"trac realm\";\n            auth_basic_user_file /home/trac/htpasswd;\n\n            # socket address\n            fastcgi_pass   unix:/home/trac/run/instance.sock;\n\n            # python - wsgi specific\n            fastcgi_param HTTPS on;\n\n            ## WSGI REQUIRED VARIABLES\n            # WSGI application name - trac instance prefix.\n	    # (Or ``fastcgi_param  SCRIPT_NAME  /some/prefix``.)\n            fastcgi_param  SCRIPT_NAME        \"\";\n            fastcgi_param  PATH_INFO          $path_info;\n\n            ## WSGI NEEDED VARIABLES - trac warns about them\n            fastcgi_param  REQUEST_METHOD     $request_method;\n            fastcgi_param  SERVER_NAME        $server_name;\n            fastcgi_param  SERVER_PORT        $server_port;\n            fastcgi_param  SERVER_PROTOCOL    $server_protocol;\n\n            # for authentication to work\n            fastcgi_param  AUTH_USER          $remote_user;\n            fastcgi_param  REMOTE_USER        $remote_user;\n        }\n    }\n}}}\n\n2) Modified trac.fcgi:\n\n{{{\n#!/usr/bin/env python\nimport os\nsockaddr = \'/home/trac/run/instance.sock\'\nos.environ[\'TRAC_ENV\'] = \'/home/trac/instance\'\n\ntry:\n     from trac.web.main import dispatch_request\n     import trac.web._fcgi\n\n     fcgiserv = trac.web._fcgi.WSGIServer(dispatch_request, \n          bindAddress = sockaddr, umask = 7)\n     fcgiserv.run()\n\nexcept SystemExit:\n    raise\nexcept Exception, e:\n    print \'Content-Type: text/plain\\r\\n\\r\\n\',\n    print \'Oops...\'\n    print\n    print \'Trac detected an internal error:\'\n    print\n    print e\n    print\n    import traceback\n    import StringIO\n    tb = StringIO.StringIO()\n    traceback.print_exc(file=tb)\n    print tb.getvalue()\n\n}}}\n\n3) reload nginx and launch trac.fcgi like that:\n\n{{{\ntrac@trac.example ~ $ ./trac-standalone-fcgi.py \n}}}\n\nThe above assumes that:\n * There is a user named \'trac\' for running trac instances and keeping trac environments in its home directory.\n * /home/trac/instance contains a trac environment\n * /home/trac/htpasswd contains authentication information\n * /home/trac/run is owned by the same group the nginx runs under\n  * and if your system is Linux the /home/trac/run has setgid bit set (chmod g+s run)\n  * and patch from ticket #T7239 is applied, or you\'ll have to fix the socket file permissions every time\n\nUnfortunately nginx does not support variable expansion in fastcgi_pass directive. \nThus it is not possible to serve multiple trac instances from one server block. \n\nIf you worry enough about security, run trac instances under separate users. \n\nAnother way to run trac as a FCGI external application is offered in ticket #T6224\n\n----\nSee also:  TracGuide, TracInstall, [wiki:TracModWSGI ModWSGI], [wiki:TracCgi CGI], [wiki:TracModPython ModPython], [trac:TracNginxRecipe TracNginxRecipe]\n',NULL,NULL),('TracFastCgi',2,1397068026242451,'trac','127.0.0.1','[[PageOutline]]\n\n= Trac with FastCGI =\n\n[http://www.fastcgi.com/ FastCGI] interface allows Trac to remain resident much like with [wiki:TracModPython mod_python] or [wiki:TracModWSGI mod_wsgi]. It is faster than external CGI interfaces which must start a new process for each request.  Additionally, it is supported by much wider variety of web servers.\n\nNote that unlike mod_python, FastCGI supports [http://httpd.apache.org/docs/suexec.html Apache SuEXEC], i.e. run with different permissions than web server running with (`mod_wsgi` supports the `WSGIDaemonProcess` with user / group parameters to achieve the same effect).\n\n\'\'\'Note for Windows:\'\'\' Trac\'s FastCGI does not run under Windows, as Windows does not implement `Socket.fromfd`, which is used by `_fcgi.py`. If you want to connect to IIS, you may want to try [trac:TracOnWindowsIisAjp AJP]/[trac:TracOnWindowsIisAjp ISAPI].\n\n[[PageOutline(2-3,Overview,inline)]]\n\n\n== Simple Apache configuration ==\n\nThere are two FastCGI modules commonly available for Apache: `mod_fastcgi` and\n`mod_fcgid` (preferred). The latter is more up-to-date.\n\nThe following sections focus on the FCGI specific setup, see also [wiki:TracModWSGI#ConfiguringAuthentication] for configuring the authentication in Apache.\n\nRegardless of which cgi module is used, be sure the web server has executable permissions on the cgi-bin folder. While FastCGI will throw specific permissions errors, mod_fcgid will throw an ambiguous error if this has not been done. (Connection reset by peer: mod_fcgid: error reading data from FastCGI server) \n\n=== Set up with `mod_fastcgi` ===\n`mod_fastcgi` uses `FastCgiIpcDir` and `FastCgiConfig` directives that should be added to an appropriate Apache configuration file:\n{{{\n# Enable fastcgi for .fcgi files\n# (If you\'re using a distro package for mod_fcgi, something like\n# this is probably already present)\n<IfModule mod_fastcgi.c>\n   AddHandler fastcgi-script .fcgi\n   FastCgiIpcDir /var/lib/apache2/fastcgi \n</IfModule>\nLoadModule fastcgi_module /usr/lib/apache2/modules/mod_fastcgi.so\n}}}\nSetting `FastCgiIpcDir` is optional if the default is suitable. Note that the `LoadModule` line must be after the `IfModule` group.\n\nConfigure `ScriptAlias` or similar options as described in TracCgi, but\ncalling `trac.fcgi` instead of `trac.cgi`.\n\nAdd the following to the Apache configuration file (below the `FastCgiIpcDir` line) if you intend to set up the `TRAC_ENV` as an overall default:\n{{{\nFastCgiConfig -initial-env TRAC_ENV=/path/to/env/trac\n}}}\n\nAlternatively, you can serve multiple Trac projects in a directory by adding this:\n{{{\nFastCgiConfig -initial-env TRAC_ENV_PARENT_DIR=/parent/dir/of/projects\n}}}\n\n=== Set up with `mod_fcgid` ===\nConfigure `ScriptAlias` (see TracCgi for details), but call `trac.fcgi`\ninstead of `trac.cgi`. Note that slash at the end - it is important.\n{{{\nScriptAlias /trac /path/to/www/trac/cgi-bin/trac.fcgi/\n}}}\n\nTo set up Trac environment for `mod_fcgid` it is necessary to use\n`DefaultInitEnv` directive. It cannot be used in `Directory` or\n`Location` context, so if you need to support multiple projects, try\nalternative environment setup below.\n\n{{{\nDefaultInitEnv TRAC_ENV /path/to/env/trac/\n}}}\n\n=== alternative environment setup ===\nA better method to specify path to Trac environment is to embed the path\ninto `trac.fcgi` script itself. That doesn\'t require configuration of server\nenvironment variables, works for both FastCgi modules\n(and for [http://www.lighttpd.net/ lighttpd] and CGI as well):\n{{{\nimport os\nos.environ[\'TRAC_ENV\'] = \"/path/to/projectenv\"\n}}}\nor\n{{{\nimport os\nos.environ[\'TRAC_ENV_PARENT_DIR\'] = \"/path/to/project/parent/dir\"\n}}}\n\nWith this method different projects can be supported by using different\n`.fcgi` scripts with different `ScriptAliases`.\n\nSee [https://coderanger.net/~coderanger/httpd/fcgi_example.conf this fcgid example config] which uses a !ScriptAlias directive with trac.fcgi with a trailing / like this:\n{{{\nScriptAlias / /srv/tracsite/cgi-bin/trac.fcgi/\n}}}\n\n== Simple Cherokee Configuration ==\n\nThe configuration on Cherokee\'s side is quite simple. You will only need to know that you can spawn Trac as an SCGI process.\nYou can either start it manually, or better yet, automatically by letting Cherokee spawn the server whenever it is down.\nFirst set up an information source in cherokee-admin with a local interpreter.\n\n{{{\nHost:\nlocalhost:4433\n\nInterpreter:\n/usr/bin/tracd —single-env —daemonize —protocol=scgi —hostname=localhost —port=4433 /path/to/project/\n}}}\n\nIf the port was not reachable, the interpreter command would be launched. Note that, in the definition of the information source, you will have to manually launch the spawner if you use a \'\'Remote host\'\' as \'\'Information source\'\' instead of a \'\'Local interpreter\'\'.\n\nAfter doing this, we will just have to create a new rule managed by the SCGI handler to access Trac. It can be created in a new virtual server, trac.example.net for instance, and will only need two rules. The \'\'\'default\'\'\' one will use the SCGI handler associated to the previously created information source.\nThe second rule will be there to serve the few static files needed to correctly display the Trac interface. Create it as \'\'Directory rule\'\' for \'\'/common\'\' and just set it to the \'\'Static files\'\' handler and with a \'\'Document root\'\' that points to the appropriate files: \'\'$TRAC_LOCAL/htdocs/\'\' (where $TRAC_LOCAL is a directory defined by the user or the system administrator to place local trac resources).\n\nNote:\\\\\nIf the tracd process fails to start up, and cherokee displays a 503 error page, you might be missing the [http://trac.saddi.com/flup python-flup] package.\\\\\nPython-flup is a dependency which provides trac with SCGI capability. You can install it on debian based systems with:\n{{{\nsudo apt-get install python-flup\n}}}\n\n\n== Simple Lighttpd Configuration ==\n\nThe FastCGI front-end was developed primarily for use with alternative webservers, such as [http://www.lighttpd.net/ lighttpd].\n\nlighttpd is a secure, fast, compliant and very flexible web-server that has been optimized for high-performance\nenvironments.  It has a very low memory footprint compared to other web servers and takes care of CPU load.\n\nFor using `trac.fcgi`(prior to 0.11) / fcgi_frontend.py (0.11) with lighttpd add the following to your lighttpd.conf:\n{{{\n#var.fcgi_binary=\"/usr/bin/python /path/to/fcgi_frontend.py\" # 0.11 if installed with easy_setup, it is inside the egg directory\nvar.fcgi_binary=\"/path/to/cgi-bin/trac.fcgi\" # 0.10 name of prior fcgi executable\nfastcgi.server = (\"/trac\" =>\n   \n                   (\"trac\" =>\n                     (\"socket\" => \"/tmp/trac-fastcgi.sock\",\n                      \"bin-path\" => fcgi_binary,\n                      \"check-local\" => \"disable\",\n                      \"bin-environment\" =>\n                        (\"TRAC_ENV\" => \"/path/to/projenv\")\n                     )\n                   )\n                 )\n}}}\n\nNote that you will need to add a new entry to `fastcgi.server` for each separate Trac instance that you wish to run. Alternatively, you may use the `TRAC_ENV_PARENT_DIR` variable instead of `TRAC_ENV` as described above,\nand you may set one of the two in `trac.fcgi` instead of in `lighttpd.conf`\nusing `bin-environment` (as in the section above on Apache configuration).\n\nNote that lighttpd has a bug related to \'SCRIPT_NAME\' and \'PATH_INFO\' when the uri of fastcgi.server is \'/\' instead of \'/trac\' in this example (see [trac:#2418]). This is fixed in lighttpd 1.5, and under lighttpd 1.4.23 or later the workaround is to add `\"fix-root-scriptname\" => \"enable\"` as a parameter of fastcgi.server.\n\nFor using two projects with lighttpd add the following to your `lighttpd.conf`:\n{{{\nfastcgi.server = (\"/first\" =>\n                   (\"first\" =>\n                    (\"socket\" => \"/tmp/trac-fastcgi-first.sock\",\n                     \"bin-path\" => fcgi_binary,\n                     \"check-local\" => \"disable\",\n                     \"bin-environment\" =>\n                       (\"TRAC_ENV\" => \"/path/to/projenv-first\")\n                    )\n                  ),\n                  \"/second\" =>\n                    (\"second\" =>\n                    (\"socket\" => \"/tmp/trac-fastcgi-second.sock\",\n                     \"bin-path\" => fcgi_binary,\n                     \"check-local\" => \"disable\",\n                     \"bin-environment\" =>\n                       (\"TRAC_ENV\" => \"/path/to/projenv-second\")\n                    )\n                  )\n                )\n}}}\nNote that field values are different.  If you prefer setting the environment\nvariables in the `.fcgi` scripts, then copy/rename `trac.fcgi`, e.g., to\n`first.fcgi` and `second.fcgi`, and reference them in the above settings.\nNote that the above will result in different processes in any event, even\nif both are running from the same `trac.fcgi` script.\n\n{{{\n#!div class=important\n\'\'\'Note\'\'\' It\'s very important the order on which server.modules are loaded, if mod_auth is not loaded \'\'\'BEFORE\'\'\' mod_fastcgi, then the server will fail to authenticate the user.\n}}}\n\nFor authentication you should enable mod_auth in lighttpd.conf \'server.modules\', select auth.backend and auth rules:\n{{{\nserver.modules              = (\n...\n  \"mod_auth\",\n...\n)\n\nauth.backend               = \"htpasswd\"\n\n# Separated password files for each project\n# See \"Conditional Configuration\" in\n# http://trac.lighttpd.net/trac/file/branches/lighttpd-merge-1.4.x/doc/configuration.txt\n\n$HTTP[\"url\"] =~ \"^/first/\" {\n  auth.backend.htpasswd.userfile = \"/path/to/projenv-first/htpasswd.htaccess\"\n}\n$HTTP[\"url\"] =~ \"^/second/\" {\n  auth.backend.htpasswd.userfile = \"/path/to/projenv-second/htpasswd.htaccess\"\n}\n\n# Enable auth on trac URLs, see\n# http://trac.lighttpd.net/trac/file/branches/lighttpd-merge-1.4.x/doc/authentication.txt\n\nauth.require = (\"/first/login\" =>\n                (\"method\"  => \"basic\",\n                 \"realm\"   => \"First project\",\n                 \"require\" => \"valid-user\"\n                ),\n                \"/second/login\" =>\n                (\"method\"  => \"basic\",\n                 \"realm\"   => \"Second project\",\n                 \"require\" => \"valid-user\"\n                )\n               )\n\n\n}}}\nNote that lighttpd (I use version 1.4.3) stopped if password file doesn\'t exist.\n\nNote that lighttpd doesn\'t support \'valid-user\' in versions prior to 1.3.16.\n\nConditional configuration is also useful for mapping static resources, i.e. serving out images and CSS directly instead of through FastCGI:\n{{{\n# Aliasing functionality is needed\nserver.modules += (\"mod_alias\")\n\n# Set up an alias for the static resources\nalias.url = (\"/trac/chrome/common\" => \"/usr/share/trac/htdocs\")\n\n# Use negative lookahead, matching all requests that ask for any resource under /trac, EXCEPT in\n# /trac/chrome/common, and use FastCGI for those\n$HTTP[\"url\"] =~ \"^/trac(?!/chrome/common)\" {\n# Even if you have other fastcgi.server declarations for applications other than Trac, do NOT use += here\nfastcgi.server = (\"/trac\" =>\n                   (\"trac\" =>\n                     (\"socket\" => \"/tmp/trac-fastcgi.sock\",\n                      \"bin-path\" => fcgi_binary,\n                      \"check-local\" => \"disable\",\n                      \"bin-environment\" =>\n                        (\"TRAC_ENV\" => \"/path/to/projenv\")\n                     )\n                   )\n                 )\n}\n}}}\nThe technique can be easily adapted for use with multiple projects by creating aliases for each of them, and wrapping the fastcgi.server declarations inside conditional configuration blocks.\nAlso there is another way to handle multiple projects and it\'s to use TRAC_ENV_PARENT_DIR instead of TRAC_ENV and use global auth, let\'s see an example:\n{{{\n#  This is for handling multiple projects\n  alias.url       = ( \"/trac/\" => \"/path/to/trac/htdocs/\" )\n\n  fastcgi.server += (\"/projects\"  =>\n                      (\"trac\" =>\n                        (\n                          \"socket\" => \"/tmp/trac.sock\",\n                          \"bin-path\" => fcgi_binary,\n                          \"check-local\" => \"disable\",\n                          \"bin-environment\" =>\n                            (\"TRAC_ENV_PARENT_DIR\" => \"/path/to/parent/dir/of/projects/\" )\n                        )\n                      )\n                    )\n#And here starts the global auth configuration\n  auth.backend = \"htpasswd\"\n  auth.backend.htpasswd.userfile = \"/path/to/unique/htpassword/file/trac.htpasswd\"\n  $HTTP[\"url\"] =~ \"^/projects/.*/login$\" {\n    auth.require = (\"/\" =>\n                     (\n                       \"method\"  => \"basic\",\n                       \"realm\"   => \"trac\",\n                       \"require\" => \"valid-user\"\n                     )\n                   )\n  }\n}}}\n\nChanging date/time format also supported by lighttpd over environment variable LC_TIME\n{{{\nfastcgi.server = (\"/trac\" =>\n                   (\"trac\" =>\n                     (\"socket\" => \"/tmp/trac-fastcgi.sock\",\n                      \"bin-path\" => fcgi_binary,\n                      \"check-local\" => \"disable\",\n                      \"bin-environment\" =>\n                        (\"TRAC_ENV\" => \"/path/to/projenv\",\n                        \"LC_TIME\" => \"ru_RU\")\n                     )\n                   )\n                 )\n}}}\nFor details about languages specification see [trac:TracFaq TracFaq] question 2.13.\n\nOther important information like the [wiki:TracInstall#MappingStaticResources mapping static resources advices] are useful for non-fastcgi specific installation aspects.\n]\n\nRelaunch lighttpd, and browse to `http://yourhost.example.org/trac` to access Trac.\n\nNote about running lighttpd with reduced permissions:\n\nIf nothing else helps and trac.fcgi doesn\'t start with lighttpd settings `server.username = \"www-data\"`, `server.groupname = \"www-data\"`, then in the `bin-environment` section set `PYTHON_EGG_CACHE` to the home directory of `www-data` or some other directory accessible to this account for writing.\n\n\n== Simple !LiteSpeed Configuration ==\n\nThe FastCGI front-end was developed primarily for use with alternative webservers, such as [http://www.litespeedtech.com/ LiteSpeed].\n\n!LiteSpeed web server is an event-driven asynchronous Apache replacement designed from the ground-up to be secure, scalable, and operate with minimal resources. !LiteSpeed can operate directly from an Apache config file and is targeted for business-critical environments.\n\n 1. Please make sure you have first have a working install of a Trac project. Test install with “tracd” first.\n\n 2. Create a Virtual Host for this setup. From now on we will refer to this vhost as !TracVhost. For this tutorial we will be assuming that your trac project will be accessible via:\n\n{{{\nhttp://yourdomain.com/trac/\n}}}\n\n 3. Go “!TracVhost → External Apps” tab and create a new “External Application”.\n\n{{{\nName: MyTracFCGI	\nAddress: uds://tmp/lshttpd/mytracfcgi.sock\nMax Connections: 10\nEnvironment: TRAC_ENV=/fullpathto/mytracproject/ <--- path to root folder of trac project\nInitial Request Timeout (secs): 30\nRetry Timeout (secs): 0\nPersistent Connection	Yes\nConnection Keepalive Timeout: 30\nResponse Bufferring: No	\nAuto Start: Yes\nCommand: /usr/share/trac/cgi-bin/trac.fcgi  <--- path to trac.fcgi\nBack Log: 50\nInstances: 10\n}}}\n\n 4. Optional. If you need to use htpasswd based authentication. Go to “!TracVhost → Security” tab and create a new security “Realm”.\n\n{{{\nDB Type: Password File\nRealm Name: MyTracUserDB               <--- any name you wish and referenced later\nUser DB Location: /fullpathto/htpasswd <--- path to your htpasswd file\n}}}\n\nIf you don’t have a htpasswd file or don’t know how to create the entries within one, go to http://sherylcanter.com/encrypt.php, to generate the user:password combos.\n\n 5. Go to “!PythonVhost → Contexts” and create a new “FCGI Context”.\n\n{{{\nURI: /trac/                              <--- URI path to bind to python fcgi app we created	\nFast CGI App: [VHost Level] MyTractFCGI  <--- select the trac fcgi extapp we just created\nRealm: TracUserDB                        <--- only if (4) is set. select realm created in (4)\n}}}\n\n 6. Modify `/fullpathto/mytracproject/conf/trac.ini`\n\n{{{\n#find/set base_rul, url, and link variables\nbase_url = http://yourdomain.com/trac/ <--- base url to generate correct links to\nurl = http://yourdomain.com/trac/      <--- link of project\nlink = http://yourdomain.com/trac/     <--- link of graphic logo\n}}}\n\n 7. Restart !LiteSpeed, “lswsctrl restart”, and access your new Trac project at: \n\n{{{\nhttp://yourdomain.com/trac/\n}}}\n\n\n== Simple Nginx Configuration ==\n\nNginx is able to communicate with FastCGI processes, but can not spawn them. So you need to start FastCGI server for Trac separately.\n\n 1. Nginx configuration with basic authentication handled by Nginx - confirmed to work on 0.6.32\n{{{\n    server {\n        listen       10.9.8.7:443;\n        server_name  trac.example;\n\n        ssl                  on;\n        ssl_certificate      /etc/ssl/trac.example.crt;\n        ssl_certificate_key  /etc/ssl/trac.example.key;\n\n        ssl_session_timeout  5m;\n\n        ssl_protocols  SSLv2 SSLv3 TLSv1;\n        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n        ssl_prefer_server_ciphers   on;\n\n        # (Or ``^/some/prefix/(.*)``.\n        if ($uri ~ ^/(.*)) {\n             set $path_info /$1;\n        }\n\n        # it makes sense to serve static resources through Nginx\n        location /chrome/ {\n             alias /home/trac/instance/static/htdocs/;\n        }\n\n        # You can copy this whole location to ``location [/some/prefix]/login``\n        # and remove the auth entries below if you want Trac to enforce\n        # authorization where appropriate instead of needing to authenticate\n        # for accessing the whole site.\n        # (Or ``location /some/prefix``.)\n        location / {\n            auth_basic            \"trac realm\";\n            auth_basic_user_file /home/trac/htpasswd;\n\n            # socket address\n            fastcgi_pass   unix:/home/trac/run/instance.sock;\n\n            # python - wsgi specific\n            fastcgi_param HTTPS on;\n\n            ## WSGI REQUIRED VARIABLES\n            # WSGI application name - trac instance prefix.\n	    # (Or ``fastcgi_param  SCRIPT_NAME  /some/prefix``.)\n            fastcgi_param  SCRIPT_NAME        \"\";\n            fastcgi_param  PATH_INFO          $path_info;\n\n            ## WSGI NEEDED VARIABLES - trac warns about them\n            fastcgi_param  REQUEST_METHOD     $request_method;\n            fastcgi_param  SERVER_NAME        $server_name;\n            fastcgi_param  SERVER_PORT        $server_port;\n            fastcgi_param  SERVER_PROTOCOL    $server_protocol;\n            fastcgi_param  QUERY_STRING       $query_string;\n\n            # For Nginx authentication to work - do not forget to comment these\n            # lines if not using Nginx for authentication\n            fastcgi_param  AUTH_USER          $remote_user;\n            fastcgi_param  REMOTE_USER        $remote_user;\n\n            # for ip to work\n            fastcgi_param REMOTE_ADDR         $remote_addr;\n\n            # For attchments to work\n            fastcgi_param    CONTENT_TYPE     $content_type;\n            fastcgi_param    CONTENT_LENGTH   $content_length;\n        }\n    }\n}}}\n\n 2. Modified trac.fcgi:\n\n{{{\n#!/usr/bin/env python\nimport os\nsockaddr = \'/home/trac/run/instance.sock\'\nos.environ[\'TRAC_ENV\'] = \'/home/trac/instance\'\n\ntry:\n     from trac.web.main import dispatch_request\n     import trac.web._fcgi\n\n     fcgiserv = trac.web._fcgi.WSGIServer(dispatch_request, \n          bindAddress = sockaddr, umask = 7)\n     fcgiserv.run()\n\nexcept SystemExit:\n    raise\nexcept Exception, e:\n    print \'Content-Type: text/plain\\r\\n\\r\\n\',\n    print \'Oops...\'\n    print\n    print \'Trac detected an internal error:\'\n    print\n    print e\n    print\n    import traceback\n    import StringIO\n    tb = StringIO.StringIO()\n    traceback.print_exc(file=tb)\n    print tb.getvalue()\n\n}}}\n\n 3. reload nginx and launch trac.fcgi like that:\n\n{{{\ntrac@trac.example ~ $ ./trac-standalone-fcgi.py \n}}}\n\nThe above assumes that:\n * There is a user named \'trac\' for running trac instances and keeping trac environments in its home directory.\n * `/home/trac/instance` contains a trac environment\n * `/home/trac/htpasswd` contains authentication information\n * `/home/trac/run` is owned by the same group the nginx runs under\n  * and if your system is Linux the `/home/trac/run` has setgid bit set (`chmod g+s run`)\n  * and patch from ticket #T7239 is applied, or you\'ll have to fix the socket file permissions every time\n\nUnfortunately nginx does not support variable expansion in fastcgi_pass directive. \nThus it is not possible to serve multiple trac instances from one server block. \n\nIf you worry enough about security, run trac instances under separate users. \n\nAnother way to run trac as a FCGI external application is offered in ticket #T6224\n\n----\nSee also:  TracGuide, TracInstall, [wiki:TracModWSGI ModWSGI], [wiki:TracCgi CGI], [wiki:TracModPython ModPython], [trac:TracNginxRecipe TracNginxRecipe]\n',NULL,NULL),('TracFineGrainedPermissions',1,1291894092000000,'trac','127.0.0.1','= Fine grained permissions =\n\nBefore Trac 0.11, it was only possible to define fine-grained permissions checks on the repository browser sub-system.\n\nSince 0.11, there\'s a general mechanism in place that allows custom permission policy plugins to grant or deny any action on any kind of Trac resources, even at the level of specific versions of such resources.\n\n== Permission Policies ==\n\n=== !AuthzPolicy ===\n\nAn example policy based on an Authz-style system has been added. See\n[trac:source:branches/0.11-stable/sample-plugins/permissions/authz_policy.py authz_policy.py] for details (current version requires >= Python 2.4). (See also [trac:source:branches/0.11-stable/sample-plugins/permissions sample-plugins/permissions] for more samples.)\n\n - Install [http://www.voidspace.org.uk/python/configobj.html ConfigObj] (required).\n - Copy authz_policy.py into your plugins directory.\n - Put a [http://swapoff.org/files/authzpolicy.conf authzpolicy.conf] file somewhere (preferably on a secured location on the server, not readable for others than the webuser.\n - Update your `trac.ini`:\n   1. modify the [TracIni#trac-section permission_policies] entry in the `[trac]` section\n{{{\n[trac]\n...\npermission_policies = AuthzPolicy, DefaultPermissionPolicy, LegacyAttachmentPolicy\n}}}\n   2. add a new `[authz_policy]` section\n{{{\n[authz_policy]\nauthz_file = /some/trac/env/conf/authzpolicy.conf\n}}}\n   3. enable the single file plugin\n{{{\n[components]\n...\nauthz_policy.* = enabled\n}}}\n\nNote that the order in which permission policies are specified is quite critical, \nas policies will be examined in the sequence provided.\n\nA policy will return either `True`, `False` or `None` for a given permission check.\nOnly if the return value is `None` will the \'\'next\'\' permission policy be consulted.\nIf no policy explicitly grants the permission, the final result will be `False` \n(i.e. no permission).\n\nFor example, if the `authz_file` contains:\n{{{\n[wiki:WikiStart@*]\n* = WIKI_VIEW\n\n[wiki:PrivatePage@*]\njohn = WIKI_VIEW\n* =\n}}}\nand the default permissions are set like this:\n{{{\njohn           WIKI_VIEW\njack           WIKI_VIEW\n# anonymous has no WIKI_VIEW\n}}}\n\nThen: \n - All versions of WikiStart will be viewable by everybody (including anonymous)\n - !PrivatePage will be viewable only by john\n - other pages will be viewable only by john and jack\n\n\n=== mod_authz_svn-like permission policy ===\n\nAt the time of this writing, the old fine grained permissions system from Trac 0.10 and before used for restricting access to the repository has not yet been converted to a permission policy component, but from the user point of view, this makes little if no difference.\n\nThat kind of fine-grained permission control needs a definition file, which is the one used by Subversion\'s mod_authz_svn. \nMore information about this file format and about its usage in Subversion is available in the  [http://svnbook.red-bean.com/en/1.5/svn.serverconfig.pathbasedauthz.html Path-Based Authorization] section in the Server Configuration chapter of the svn book.\n\nExample:\n{{{\n[/]\n* = r\n\n[/branches/calc/bug-142]\nharry = rw\nsally = r\n\n[/branches/calc/bug-142/secret]\nharry =\n}}}\n\n * \'\'\'/\'\'\' = \'\'Everyone has read access by default\'\'\n * \'\'\'/branches/calc/bug-142\'\'\' = \'\'harry has read/write access, sally read only\'\'\n * \'\'\'/branches/calc/bug-142/secret\'\'\' = \'\'harry has no access, sally has read access (inherited as a sub folder permission)\'\'\n\n==== Trac Configuration ====\n\nTo activate fine grained permissions you __must__ specify the {{{authz_file}}} option in the {{{[trac]}}} section of trac.ini. If this option is set to null or not specified the permissions will not be used.\n\n{{{\n[trac]\nauthz_file = /path/to/svnaccessfile\n}}}\n\nif you want to support the use of the `[`\'\'modulename\'\'`:/`\'\'some\'\'`/`\'\'path\'\'`]` syntax within the `authz_file`, add \n\n{{{\nauthz_module_name = modulename\n}}}\n\nwhere \'\'modulename\'\' refers to the same repository indicated by the `repository_dir` entry in the `[trac]` section.\n\n\'\'\'Note:\'\'\' Usernames inside the Authz file __must__ be the same as those used inside trac. \n\n==== Subversion Configuration ====\n\nThe same access file is typically applied to the corresponding Subversion repository using an Apache directive like this:\n{{{\n<Location /repos>\n  DAV svn\n  SVNParentPath /usr/local/svn\n\n  # our access control policy\n  AuthzSVNAccessFile /path/to/svnaccessfile\n</Location>\n}}}\n\nFor information about how to restrict access to entire projects in a multiple project environment see [trac:wiki:TracMultipleProjectsSVNAccess]\n\n== Getting TracFineGrainedPermissions to work ==\n\nDon\'t forget to restart Trac engine to apply new configuration if you are running tracd standalone server.\n\n----\nSee also: TracPermissions\nhttp://trac-hacks.org/wiki/FineGrainedPageAuthzEditorPlugin for a simple editor plugin.',NULL,NULL),('TracFineGrainedPermissions',2,1397068026273075,'trac','127.0.0.1','[[PageOutline(2-5, Contents, floated)]]\n= Fine grained permissions =\n\nBefore Trac 0.11, it was only possible to define fine-grained permissions checks on the repository browser sub-system.\n\nSince 0.11, there\'s a general mechanism in place that allows custom **permission policy plugins** to grant or deny any action on any kind of Trac resources, even at the level of specific versions of such resources.\n\nNote that for Trac 0.12, `authz_policy` has been integrated as an optional module (in `tracopt.perm.authz_policy.*`), so it\'s installed by default and can simply be activated via the //Plugins// panel in the Trac administration module.\n\n\n== Permission Policies ==\n\nA great diversity of permission policies can be implemented, and Trac comes with a few examples. \n\nWhich policies are currently active is determined by a configuration setting in TracIni:\ne.g.\n{{{\n[trac]\npermission_policies = AuthzSourcePolicy, DefaultPermissionPolicy, LegacyAttachmentPolicy\n}}}\nThis lists the [#AuthzSourcePolicy] described below as the first policy, followed by the !DefaultPermissionPolicy which checks for the traditional coarse grained style permissions described in TracPermissions, and the !LegacyAttachmentPolicy which knows how to use the coarse grained permissions for checking the permissions available on attachments.\n\nAmong the possible optional choices, there is [#AuthzPolicy], a very generic permission policy, based on an Authz-style system. See\n[trac:source:branches/0.12-stable/tracopt/perm/authz_policy.py authz_policy.py] for details. \n\nAnother popular permission policy [#AuthzSourcePolicy], re-implements the pre-0.12 support for checking fine-grained permissions limited to Subversion repositories in terms of the new system.\n\nSee also [trac:source:branches/0.12-stable/sample-plugins/permissions sample-plugins/permissions] for more examples.\n\n\n=== !AuthzPolicy === \n==== Configuration ====\n* Install [http://www.voidspace.org.uk/python/configobj.html ConfigObj] (still needed for 0.12).\n* Copy authz_policy.py into your plugins directory (only for Trac 0.11).\n* Put a [http://swapoff.org/files/authzpolicy.conf authzpolicy.conf] file somewhere, preferably on a secured location on the server, not readable for others than the webuser. If the  file contains non-ASCII characters, the UTF-8 encoding should be used.\n* Update your `trac.ini`:\n  1. modify the [TracIni#trac-section permission_policies] entry in the `[trac]` section\n{{{\n[trac]\n...\npermission_policies = AuthzPolicy, DefaultPermissionPolicy, LegacyAttachmentPolicy\n}}}\n  1. add a new `[authz_policy]` section\n{{{\n[authz_policy]\nauthz_file = /some/trac/env/conf/authzpolicy.conf\n}}}\n  1. enable the plugin through [/admin/general/plugin WebAdmin] or by editing the `[components]` section\n{{{\n[components]\n...\n# Trac 0.12\ntracopt.perm.authz_policy.* = enabled\n# for Trac 0.11 use this\n#authz_policy.* = enabled \n}}}\n\n\n==== Usage Notes ====\nNote that the order in which permission policies are specified is quite critical, \nas policies will be examined in the sequence provided.\n\nA policy will return either `True`, `False` or `None` for a given permission check. `True` is returned if the policy explicitly grants the permission. `False` is returned if the policy explicitly denies the permission. `None` is returned if the policy is unable to either grant or deny the permission.\n\nNOTE: Only if the return value is `None` will the \'\'next\'\' permission policy be consulted.\nIf none of the policies explicitly grants the permission, the final result will be `False` \n(i.e. permission denied).\n\nThe `authzpolicy.conf` file is a `.ini` style configuration file:\n{{{\n[wiki:PrivatePage@*]\njohn = WIKI_VIEW, !WIKI_MODIFY\njack = WIKI_VIEW\n* =\n}}}\n* Each section of the config is a glob pattern used to match against a Trac resource\n  descriptor. These descriptors are in the form:\n{{{\n<realm>:<id>@<version>[/<realm>:<id>@<version> ...]\n}}}\n  Resources are ordered left to right, from parent to child. If any\n  component is inapplicable, `*` is substituted. If the version pattern is\n  not specified explicitely, all versions (`@*`) is added implicitly\n\n  Example: Match the WikiStart page\n{{{\n[wiki:*]\n[wiki:WikiStart*]\n[wiki:WikiStart@*]\n[wiki:WikiStart]\n}}}\n\n  Example: Match the attachment `wiki:WikiStart@117/attachment/FOO.JPG@*`\n  on WikiStart\n{{{\n[wiki:*]\n[wiki:WikiStart*]\n[wiki:WikiStart@*]\n[wiki:WikiStart@*/attachment/*]\n[wiki:WikiStart@117/attachment/FOO.JPG]\n}}}\n\n* Sections are checked against the current Trac resource descriptor \'\'\'IN ORDER\'\'\' of\n  appearance in the configuration file. \'\'\'ORDER IS CRITICAL\'\'\'.\n\n* Once a section matches, the current username is matched against the keys \n  (usernames) of the section, \'\'\'IN ORDER\'\'\'. \n  * If a key (username) is prefixed with a `@`, it is treated as a group. \n  * If a value (permission) is prefixed with a `!`, the permission is\n    denied rather than granted.\n\n  The username will match any of \'anonymous\', \'authenticated\', <username> or \'*\', using normal Trac permission rules. || \'\'\'Note:\'\'\' Other groups which are created by user (e.g. by \'adding subjects to groups\' on web interface page //Admin / Permissions//) cannot be used. See [trac:ticket:5648 #5648] for details about this missing feature ||\n\nFor example, if the `authz_file` contains:\n{{{\n[wiki:WikiStart@*]\n* = WIKI_VIEW\n\n[wiki:PrivatePage@*]\njohn = WIKI_VIEW\n* = !WIKI_VIEW\n}}}\nand the default permissions are set like this:\n{{{\njohn           WIKI_VIEW\njack           WIKI_VIEW\n# anonymous has no WIKI_VIEW\n}}}\n\nThen: \n  * All versions of WikiStart will be viewable by everybody (including anonymous)\n  * !PrivatePage will be viewable only by john\n  * other pages will be viewable only by john and jack\n\nGroups:\n{{{\n[groups]\nadmins = john, jack\ndevs = alice, bob\n\n[wiki:Dev@*]\n@admins = TRAC_ADMIN\n@devs = WIKI_VIEW\n* =\n\n[*]\n@admins = TRAC_ADMIN\n* =\n}}}\n\nThen:\n- everything is blocked (whitelist approach), but\n- admins get all TRAC_ADMIN everywhere and\n- devs can view wiki pages.\n\nSome repository examples (Browse Source specific):\n{{{\n# A single repository:\n[repository:test_repo@*]\njohn = BROWSER_VIEW, FILE_VIEW\n# John has BROWSER_VIEW and FILE_VIEW for the entire test_repo\n\n# All repositories:\n[repository:*@*]\njack = BROWSER_VIEW, FILE_VIEW\n# John has BROWSER_VIEW and FILE_VIEW for all repositories\n}}}\n\nVery fine grain repository access:\n{{{\n# John has BROWSER_VIEW and FILE_VIEW access to trunk/src/some/location/ only\n[repository:test_repo@*/source:trunk/src/some/location/*@*]\njohn = BROWSER_VIEW, FILE_VIEW\n\n\n# John has BROWSER_VIEW and FILE_VIEW access to only revision 1 of all files at trunk/src/some/location only\n[repository:test_repo@*/source:trunk/src/some/location/*@1]\njohn = BROWSER_VIEW, FILE_VIEW\n\n\n# John has BROWSER_VIEW and FILE_VIEW access to all revisions of \'somefile\' at trunk/src/some/location only \n[repository:test_repo@*/source:trunk/src/some/location/somefile@*]\njohn = BROWSER_VIEW, FILE_VIEW\n\n\n# John has BROWSER_VIEW and FILE_VIEW access to only revision 1 of \'somefile\' at trunk/src/some/location only\n[repository:test_repo@*/source:trunk/src/some/location/somefile@1]\njohn = BROWSER_VIEW, FILE_VIEW\n}}}\n\nNote: In order for Timeline to work/visible for John, we must add CHANGESET_VIEW to the above permission list.\n\n\n==== Missing Features ====\nAlthough possible with the !DefaultPermissionPolicy handling (see Admin panel), fine-grained permissions still miss those grouping features (see [trac:ticket:9573 #9573], [trac:ticket:5648 #5648]). Patches are partially available, see forgotten authz_policy.2.patch  part of [trac:ticket:6680 #6680]).\n\nYou cannot do the following:\n{{{\n[groups]\nteam1 = a, b, c\nteam2 = d, e, f\nteam3 = g, h, i\ndepartmentA = team1, team2\n}}}\n\nPermission groups are not supported either. You cannot do the following:\n{{{\n[groups]\npermission_level_1 = WIKI_VIEW, TICKET_VIEW\npermission_level_2  = permission_level_1, WIKI_MODIFY, TICKET_MODIFY\n[*]\n@team1 = permission_level_1\n@team2 = permission_level_2\n@team3 = permission_level_2, TICKET_CREATE\n}}}\n\n=== !AuthzSourcePolicy  (mod_authz_svn-like permission policy) === #AuthzSourcePolicy\n\nAt the time of this writing, the old fine grained permissions system from Trac 0.11 and before used for restricting access to the repository has  been converted to a permission policy component, but from the user point of view, this makes little if no difference.\n\nThat kind of fine-grained permission control needs a definition file, which is the one used by Subversion\'s mod_authz_svn. \nMore information about this file format and about its usage in Subversion is available in the  [http://svnbook.red-bean.com/en/1.5/svn.serverconfig.pathbasedauthz.html Path-Based Authorization] section in the Server Configuration chapter of the svn book.\n\nExample:\n{{{\n[/]\n* = r\n\n[/branches/calc/bug-142]\nharry = rw\nsally = r\n\n[/branches/calc/bug-142/secret]\nharry =\n}}}\n\n * \'\'\'/\'\'\' = \'\'Everyone has read access by default\'\'\n * \'\'\'/branches/calc/bug-142\'\'\' = \'\'harry has read/write access, sally read only\'\'\n * \'\'\'/branches/calc/bug-142/secret\'\'\' = \'\'harry has no access, sally has read access (inherited as a sub folder permission)\'\'\n\n==== Trac Configuration ====\n\nTo activate fine grained permissions you __must__ specify the {{{authz_file}}} option in the {{{[trac]}}} section of trac.ini. If this option is set to null or not specified the permissions will not be used.\n\n{{{\n[trac]\nauthz_file = /path/to/svnaccessfile\n}}}\n\nIf you want to support the use of the `[`\'\'modulename\'\'`:/`\'\'some\'\'`/`\'\'path\'\'`]` syntax within the `authz_file`, add \n\n{{{\nauthz_module_name = modulename\n}}}\n\nwhere \'\'modulename\'\' refers to the same repository indicated by the `repository_dir` entry in the `[trac]` section. As an example, if the `repository_dir` entry in the `[trac]` section is {{{/srv/active/svn/blahblah}}}, that would yield the following:\n\n{{{ \n[trac]\nauthz_file = /path/to/svnaccessfile\nauthz_module_name = blahblah\n...\nrepository_dir = /srv/active/svn/blahblah \n}}}\n\nwhere the svn access file, {{{/path/to/svnaccessfile}}}, contains entries such as {{{[blahblah:/some/path]}}}.\n\n\'\'\'Note:\'\'\' Usernames inside the Authz file __must__ be the same as those used inside trac. \n\nAs of version 0.12, make sure you have \'\'!AuthzSourcePolicy\'\' included in the permission_policies list in trac.ini, otherwise the authz permissions file will be ignored.\n\n{{{ \n[trac]\npermission_policies = AuthzSourcePolicy, DefaultPermissionPolicy, LegacyAttachmentPolicy\n}}}\n\n==== Subversion Configuration ====\n\nThe same access file is typically applied to the corresponding Subversion repository using an Apache directive like this:\n{{{\n<Location /repos>\n  DAV svn\n  SVNParentPath /usr/local/svn\n\n  # our access control policy\n  AuthzSVNAccessFile /path/to/svnaccessfile\n</Location>\n}}}\n\nFor information about how to restrict access to entire projects in a multiple project environment see [trac:wiki:TracMultipleProjectsSVNAccess]\n\n== Debugging permissions\nIn trac.ini set:\n{{{\n[logging]\nlog_file = trac.log\nlog_level = DEBUG\nlog_type = file\n}}}\n\nAnd watch:\n{{{\ntail -n 0 -f log/trac.log | egrep \'\\[perm\\]|\\[authz_policy\\]\'\n}}}\n\nto understand what checks are being performed. See the sourced documentation of the plugin for more info.\n\n\n----\nSee also: TracPermissions,\n[http://trac-hacks.org/wiki/FineGrainedPageAuthzEditorPlugin TracHacks:FineGrainedPageAuthzEditorPlugin] for a simple editor plugin.',NULL,NULL),('TracGuide',1,1291894092000000,'trac','127.0.0.1','= The Trac User and Administration Guide =\n[[TracGuideToc]]\n\nThe TracGuide is meant to serve as a starting point for all documentation regarding Trac usage and development. The guide is a free document, a collaborative effort, and a part of the [http://trac.edgewall.org Trac Project] itself.\n\n== Table of Contents ==\nCurrently available documentation:\n * TracGuide (This page)  -- Documentation starting point.\n * \'\'\'Administrator Guide\'\'\'\n   * TracInstall -- How to install and run Trac.\n   * TracUpgrade -- How to upgrade existing installations.\n   * TracAdmin -- Administering a Trac project.\n   * TracImport -- Importing tickets from other bug databases.\n   * TracIni -- Trac configuration file reference. \n   * TracPermissions -- Access control and permissions.\n   * TracInterfaceCustomization -- Customizing the Trac interface.\n   * TracPlugins -- Installing and managing Trac extensions.\n   * TracLogging -- The Trac logging facility.\n   * TracNotification -- Email notification.\n   * TracWorkflow -- Configurable Ticket Workflow.\n * \'\'\'User Guide\'\'\'\n   * TracWiki -- How to use the built-in Wiki.\n   * TracTimeline -- The timeline provides a historic perspective on a project.\n   * TracRss -- RSS content syndication in Trac.\n   * \'\'The Version Control Subsystem\'\'\n     * TracBrowser -- Browsing source code with Trac.\n     * TracChangeset -- Viewing changes to source code.\n     * TracRevisionLog -- Viewing change history.\n   * \'\'The Ticket Subsystem\'\'\n     * TracTickets -- Using the issue tracker.\n     * TracReports -- Writing and using reports.\n     * TracQuery -- Executing custom ticket queries.\n     * TracRoadmap -- The roadmap helps tracking project progress.\n * [trac:TracFaq Trac FAQ] - A collection of Frequently Asked Questions (on the project website).\n\n== Support and Other Sources of Information ==\nIf you are looking for a good place to ask a question about Trac, look no further than the [http://trac.edgewall.org/wiki/MailingList MailingList]. It provides a friendly environment to discuss openly among Trac users and developers.\n\nSee also the TracSupport page for more information resources.\n\nFinally, developer documentation can be found in [trac:TracDev TracDev] and its sub-pages.\n\n',NULL,NULL),('TracGuide',2,1397068026233204,'trac','127.0.0.1','= The Trac User and Administration Guide =\n[[TracGuideToc]]\n{{{#!span style=\"font-size:90%\"\n//The TracGuide is meant to serve as a starting point for all documentation regarding Trac usage and development. The guide is a free document, a collaborative effort, and a part of the [http://trac.edgewall.org Trac Project] itself.//\n}}}\n\n== Introduction\n\nTrac is an enhanced wiki and issue tracking system for software development projects. Trac uses a minimalistic approach to web-based software project management. It strives to help developers write great software while staying out of the way. Trac should impose as little as possible on a team\'s established development process and policies.\n\nIt provides an interface to Subversion (and other version control systems), an integrated Wiki and convenient reporting facilities.\n\nTrac allows wiki markup in issue descriptions and commit messages, creating links and seamless references between bugs, tasks, changesets, files and wiki pages. A timeline shows all current and past project events in order, making the acquisition of an overview of the project and tracking progress very easy. The roadmap shows the road ahead, listing the upcoming milestones.\n== User Guide\n   * Using the Wiki subsystem\n     * TracWiki — How to use the built-in Wiki.\n     * WikiFormatting — Reference to the wiki syntax used throughout.\n   * Using the Version Control subsystem\n     * TracBrowser — Browsing source code with Trac.\n     * TracChangeset — Viewing changes to source code.\n     * TracRevisionLog — Viewing change history.\n   * Using the Ticket subsystem\n     * TracTickets — Using the issue tracker.\n     * TracRoadmap — The roadmap helps tracking project progress.\n     * TracReports — Writing and using reports.\n     * TracQuery — Executing custom ticket queries.\n     * TracBatchModify - Modifying a batch of tickets in one request.\n   * Other modules and general topics\n     * TracSearch — Full text search in all content.\n     * TracTimeline — The timeline provides a historic perspective on a project.\n     * TracRss — RSS content syndication in Trac.\n     * TracAccessibility — Accessibility keys support\n\n\n== Administrator Guide\n   * Installation and upgrade\n     * TracInstall — How to install and run Trac.\n     * TracUpgrade — How to upgrade existing installations.\n     * TracImport — Importing tickets from other bug databases.\n     * TracPlugins — Installing and managing Trac extensions.\n   * Configuration and customization\n     * TracIni — Trac configuration file reference. \n     * TracPermissions — Access control and permissions.\n     * TracNavigation — Customize main navigation menus.\n     * TracInterfaceCustomization — Customizing the Trac interface.\n     * TracLogging — The Trac logging facility.\n   * Administering the Version Control subsystem\n     * TracRepositoryAdmin — Management of Source Code Repositories.\n   * Administering the Ticket subsystem\n     * TracTicketsCustomFields — Expanding tickets with customized fields.\n     * TracNotification — Email notification.\n     * TracWorkflow — Configurable Ticket Workflow.\n   * Reference\n     * TracEnvironment — All you need to know about Trac environments\n     * TracAdmin — Administering a Trac project via the command-line.\n\n== Support and Other Sources of Information ==\n\n * [trac:TracFaq Trac FAQ] — A collection of Frequently Asked Questions (on the project website).\n * [trac:TracDev] and [trac:TracDev/ApiDocs API docs] — Trac Developer documentation\n * TracSupport — How to get more information\n\nIf you are looking for a good place to ask a question about Trac, look no further than the [http://trac.edgewall.org/wiki/MailingList MailingList]. It provides a friendly environment to discuss openly among Trac users and developers.\n',NULL,NULL),('TracImport',1,1291894092000000,'trac','127.0.0.1','= Importing ticket data =\n\n== Bugzilla ==\n\nTicket data can be imported from Bugzilla using the [http://trac.edgewall.org/browser/trunk/contrib/bugzilla2trac.py bugzilla2trac.py] script, available in the contrib/ directory of the Trac distribution.\n\n{{{\n$ bugzilla2trac.py\nbugzilla2trac - Imports a bug database from Bugzilla into Trac.\n\nUsage: bugzilla2trac.py [options]\n\nAvailable Options:\n  --db <MySQL dbname>              - Bugzilla\'s database\n  --tracenv /path/to/trac/env      - full path to Trac db environment\n  -h | --host <MySQL hostname>     - Bugzilla\'s DNS host name\n  -u | --user <MySQL username>     - effective Bugzilla\'s database user\n  -p | --passwd <MySQL password>   - Bugzilla\'s user password\n  -c | --clean                     - remove current Trac tickets before importing\n  --help | help                    - this help info\n\nAdditional configuration options can be defined directly in the script.\n}}}\n\nCurrently, the following data is imported from Bugzilla:\n\n  * bugs\n  * bug activity (field changes)\n  * bug attachments\n  * user names and passwords (put into a htpasswd file)\n\nThe script provides a number of features to ease the conversion, such as:\n\n  * PRODUCT_KEYWORDS:  Trac doesn\'t have the concept of products, so the script provides the ability to attach a ticket keyword instead.\n\n  * IGNORE_COMMENTS:  Don\'t import Bugzilla comments that match a certain regexp.\n\n  * STATUS_KEYWORDS:  Attach ticket keywords for the Bugzilla statuses not available in Trac.  By default, the \'VERIFIED\' and \'RELEASED\' Bugzilla statuses are translated into Trac keywords.\n\nFor more details on the available options, see the configuration section at the top of the script.\n\n== Sourceforge ==\n\nTicket data can be imported from Sourceforge using the [http://trac.edgewall.org/browser/trunk/contrib/sourceforge2trac.py sourceforge2trac.py] script, available in the contrib/ directory of the Trac distribution.\n\n== Mantis ==\n\nNB! The mantis2trac script now lives at http://trac-hacks.org/wiki/MantisImportScript . You can always get the latest version from http://trac-hacks.org/changeset/latest/mantisimportscript?old_path=/&filename=mantisimportscript&format=zip\n\nMantis bugs can be imported using the attached script.\n\nCurrently, the following data is imported from Mantis:\n  * bugs\n  * bug comments\n  * bug activity (field changes)\n  * attachments (as long as the files live in the mantis db, not on the filesystem) \n\nIf you use the script, please read the NOTES section (at the top of the file) and make sure you adjust the config parameters for your environment.\n\nmantis2trac.py has the same parameters as the bugzilla2trac.py script:\n{{{\nmantis2trac - Imports a bug database from Mantis into Trac.\n\nUsage: mantis2trac.py [options] \n\nAvailable Options:\n  --db <MySQL dbname>              - Mantis database\n  --tracenv /path/to/trac/env      - Full path to Trac db environment\n  -h | --host <MySQL hostname>     - Mantis DNS host name\n  -u | --user <MySQL username>     - Effective Mantis database user\n  -p | --passwd <MySQL password>   - Mantis database user password\n  -c | --clean                     - Remove current Trac tickets before importing\n  --help | help                    - This help info\n\nAdditional configuration options can be defined directly in the script.\n}}} \n\n== Other ==\n\nSince trac uses a SQL database to store the data, you can import from other systems by examining the database tables. Just go into [http://www.sqlite.org/sqlite.html sqlite] command line to look at the tables and import into them from your application.\n\n=== Using a comma delimited file - CSV ===\nSee [http://trac.edgewall.org/attachment/wiki/TracSynchronize/csv2trac.2.py] for details.  This approach is particularly useful if one needs to enter a large number of tickets by hand. (note that the ticket type type field, (task etc...) is also needed for this script to work with more recent Trac releases)\n\n',NULL,NULL),('TracImport',2,1397068026251144,'trac','127.0.0.1','= Importing ticket data =\n[[PageOutline]]\n\nBy means of migrating from other issue-tracking systems, perform some external actions over tickets or simply synchronize different data bases, there are some available tools, plug-ins or scripts which lets you import or up-date tickets into Trac.\n\nBelow, follows a collection of some of those.\n\n== !TicketImportPlugin ==\n\n [http://trac-hacks.org/wiki/TicketImportPlugin TicketImportPlugin] :: mainly, but not only, this plug-in lets you import or up-date into Trac a series of tickets from a \'\'\'CSV file\'\'\' or (if the [http://pypi.python.org/pypi/xlrd xlrd library] is installed) from an \'\'\'Excel file\'\'\'. \n\n== !ExportImportXlsPlugin ==\n\n [http://trac-hacks.org/wiki/ExportImportXlsPlugin ExportImportXlsPlugin] :: this plug-in add an admin panel for export and import tickets via \'\'\'XLS file\'\'\'.\n  * It depends on the python packages xlwt/rxld.\n\n== Bugzilla ==\n\n [http://trac-hacks.org/wiki/BugzillaIssueTrackingPlugin BugzillaIssueTrackingPlugin] :: integrates Bugzilla into Trac keeping TracLinks\n\nTicket data can be imported from Bugzilla using the [http://trac.edgewall.org/browser/trunk/contrib/bugzilla2trac.py bugzilla2trac.py] script, available in the contrib/ directory of the Trac distribution.\n\n{{{\n$ bugzilla2trac.py\nbugzilla2trac - Imports a bug database from Bugzilla into Trac.\n\nUsage: bugzilla2trac.py [options]\n\nAvailable Options:\n  --db <MySQL dbname>              - Bugzilla\'s database\n  --tracenv /path/to/trac/env      - full path to Trac db environment\n  -h | --host <MySQL hostname>     - Bugzilla\'s DNS host name\n  -u | --user <MySQL username>     - effective Bugzilla\'s database user\n  -p | --passwd <MySQL password>   - Bugzilla\'s user password\n  -c | --clean                     - remove current Trac tickets before importing\n  --help | help                    - this help info\n\nAdditional configuration options can be defined directly in the script.\n}}}\n\nCurrently, the following data is imported from Bugzilla:\n\n  * bugs\n  * bug activity (field changes)\n  * bug attachments\n  * user names and passwords (put into a htpasswd file)\n\nThe script provides a number of features to ease the conversion, such as:\n\n  * PRODUCT_KEYWORDS:  Trac doesn\'t have the concept of products, so the script provides the ability to attach a ticket keyword instead.\n\n  * IGNORE_COMMENTS:  Don\'t import Bugzilla comments that match a certain regexp.\n\n  * STATUS_KEYWORDS:  Attach ticket keywords for the Bugzilla statuses not available in Trac.  By default, the \'VERIFIED\' and \'RELEASED\' Bugzilla statuses are translated into Trac keywords.\n\nFor more details on the available options, see the configuration section at the top of the script.\n\n== Jira ==\n\n [http://trac-hacks.org/wiki/JiraToTracIntegration JiraToTracIntegration] :: provides tools to import Atlassian Jira backup files into Trac. The plug-in consists of a Python 3.1 commandline tool that:\n   - Parses the Jira backup XML file\n   - Sends the imported Jira data and attachments to Trac using the [http://trac-hacks.org/wiki/XmlRpcPlugin XmlRpcPlugin]\n   - Generates a htpasswd file containing the imported Jira users and their SHA-512 base64 encoded passwords\n\n== Mantis ==\n\n [http://trac-hacks.org/wiki/MantisImportScript MantisImportScript] :: script to import from Mantis into Trac the following data:\n  * bugs\n  * bug comments\n  * bug activity (field changes)\n  * attachments (as long as the files live in the mantis db, not on the filesystem) .\n\n== !PlanetForge ==\n\n [http://trac-hacks.org/wiki/PlanetForgeImportExportPlugin PlanetForgeImportExportPlugin] :: this plugin exports Trac data (wiki, tickets, compoments, permissions, repositories, etc.) using the open format designed by the COCLICO project. It extends the webadmin panel and the \'trac admin ...\' command. Still has no \'import\' feature. \n\n== Scarab ==\n\n [http://trac-hacks.org/wiki/ScarabToTracScript ScarabToTracScript] :: script that migrates Scarab issues to Trac tickets\n    * Requires [http://trac-hacks.org/wiki/XmlRpcPlugin XmlRpcPlugin]\n\n== Sourceforge ==\n\n [http://trac-hacks.org/wiki/SfnToTracScript SfnToTracScript] :: importer of !SourceForge\'s new backup file (originated from #Trac3521)\n\nAlso, ticket data can be imported from Sourceforge using the [http://trac.edgewall.org/browser/trunk/contrib/sourceforge2trac.py sourceforge2trac.py] script, available in the contrib/ directory of the Trac distribution.\n\n== Other ==\n\nSince trac uses a SQL database to store the data, you can import from other systems by examining the database tables. Just go into [http://www.sqlite.org/sqlite.html sqlite] command line to look at the tables and import into them from your application.\n\n=== Comma delimited file - CSV ===\nSee [http://trac.edgewall.org/attachment/wiki/TracSynchronize/csv2trac.2.py csv2trac.2.py] for details.  This approach is particularly useful if one needs to enter a large number of tickets by hand. (note that the ticket type type field, (task etc...) is also needed for this script to work with more recent Trac releases)\nComments on script: The script has an error on line 168, (\'Ticket\' needs to be \'ticket\').  Also, the listed values for severity and priority are swapped. \n\n----\nSee also: \n * to import/export wiki pages: TracAdmin, \n * to export tickets: TracTickets, TracQuery',NULL,NULL),('TracIni',1,1291894092000000,'trac','127.0.0.1','= The Trac Configuration File =\n[[TracGuideToc]]\n\nTrac configuration is done by editing the \'\'\'`trac.ini`\'\'\' config file, located in `<projectenv>/conf/trac.ini`.  Changes to the configuration are usually reflected immediately, though changes to the `[components]` or `[logging]` sections will require restarting the web server. You may also need to restart the web server after creating a global configuration file when none was previously present.\n\nThe `trac.ini` configuration file should be writable by the web server, as Trac currently relies on the possibility to trigger a complete environment reload to flush its caches.\n\n== Global Configuration ==\n\nIn versions prior to 0.11, the global configuration was by default located in `$prefix/share/trac/conf/trac.ini` or /etc/trac/trac.ini, depending on the distribution. If you\'re upgrading, you may want to specify that file to inherit from.  Literally, when you\'re upgrading to 0.11, you have to add an `[inherit]` section to your project\'s `trac.ini` file. Additionally, you have to move your customized templates and common images from `$prefix/share/trac/...` to the new location.\n\nGlobal options will be merged with the environment-specific options, where local options override global options. The options file is specified as follows:\n{{{\n[inherit]\nfile = /usr/share/trac/conf/trac.ini\n}}}\n\nNote that you can also specify a global option file when creating a new project,  by adding the option `--inherit=/path/to/global/options` to [TracAdmin trac-admin]\'s `initenv` command.  If do not do this but nevertheless intend to use a global option file with your new environment, you will have to go through the newly generated conf/trac.ini file and delete the entries that will otherwise override those set in the global file.\n\n\n== Reference ==\n\nThis is a brief reference of available configuration options.\n\n \'\'Note that the [bitten], [spam-filter] and [vote] sections below are added by plugins enabled on this Trac, and therefore won\'t be part of a default installation.\'\'\n\n[[TracIni()]]\n\n\n== [components] == #components-section\nThis section is used to enable or disable components provided by plugins, as well as by Trac itself. The component to enable/disable is specified via the name of the option. Whether its enabled is determined by the option value; setting the value to `enabled` or `on` will enable the component, any other value (typically `disabled` or `off`) will disable the component.\n\nThe option name is either the fully qualified name of the components or the module/package prefix of the component. The former enables/disables a specific component, while the latter enables/disables any component in the specified package/module.\n\nConsider the following configuration snippet:\n{{{\n[components]\ntrac.ticket.report.ReportModule = disabled\nwebadmin.* = enabled\n}}}\n\nThe first option tells Trac to disable the [wiki:TracReports report module]. The second option instructs Trac to enable all components in the `webadmin` package. Note that the trailing wildcard is required for module/package matching.\n\nSee the \'\'Plugins\'\' page on \'\'About Trac\'\' to get the list of active components (requires `CONFIG_VIEW` [wiki:TracPermissions permissions].)\n\nSee also: TracPlugins\n\n== [ticket-custom] == #ticket-custom-section\n\nIn this section, you can define additional fields for tickets. See TracTicketsCustomFields for more details.\n\n== [ticket-workflow] == #ticket-workflow-section\n\'\'(since 0.11)\'\'\n\nThe workflow for tickets is controlled by plugins. \nBy default, there\'s only a `ConfigurableTicketWorkflow` component in charge. \nThat component allows the workflow to be configured via this section in the trac.ini file.\nSee TracWorkflow for more details.\n\n== [milestone-groups] == #milestone-groups-section\n\'\'(since 0.11)\'\'\n\nAs the workflow for tickets is now configurable, there can be many ticket states,\nand simply displaying closed tickets vs. all the others is maybe not appropriate \nin all cases. This section enables one to easily create \'\'groups\'\' of states \nthat will be shown in different colors in the milestone progress bar.\n\nExample configuration (the default only has closed and active):\n{{{\nclosed = closed\n# sequence number in the progress bar\nclosed.order = 0\n# optional extra param for the query (two additional columns: created and modified and sort on created)\ngroup=resolution,order=time,col=id,col=summary,col=owner,col=type,col=priority,col=component,col=severity,col=time,col=changetime\n# indicates groups that count for overall completion \nclosed.overall_completion = truepercentage\n\nnew = new\nnew.order = 1\nnew.css_class = new\nnew.label = new\n\n# one catch-all group is allowed\nactive = *\nactive.order = 2\n# CSS class for this interval\nactive.css_class = open\n# Displayed label for this group\nactive.label = in progress\n}}}\n\nThe definition consists in a comma-separated list of accepted status.\nAlso, \'*\' means any status and could be used to associate all remaining\nstates to one catch-all group.\n\nThe CSS class can be one of: new (yellow), open (no color) or\nclosed (green). New styles can easily be added using the following\nselector:  `table.progress td.<class>`\n\n== [svn:externals] == #svn:externals-section\n\'\'(since 0.11)\'\'\n\nThe TracBrowser for Subversion can interpret the `svn:externals` property of folders out of the box.\nHowever, if those externals are \'\'not\'\' using the `http:` or `https:` protocol, or if a link to a different repository browser such as another Trac or [http://www.viewvc.org/ ViewVC] is desired, then Trac needs to be able to map an external prefix to this other URL.\n\nThis mapping is done in the `[svn:externals]` section of the TracIni\n\nExample:\n{{{\n[svn:externals]\n1 = svn://server/repos1 http://trac/proj1/browser/$path?rev=$rev\n2 = svn://server/repos2 http://trac/proj2/browser/$path?rev=$rev\n3 = http://theirserver.org/svn/eng-soft       http://ourserver/viewvc/svn/$path/?pathrev=25914\n4 = svn://anotherserver.com/tools_repository  http://ourserver/tracs/tools/browser/$path?rev=$rev\n}}}\nWith the above, the `svn://anotherserver.com/tools_repository/tags/1.1/tools` external will be mapped to `http://ourserver/tracs/tools/browser/tags/1.1/tools?rev=` (and `rev` will be set to the appropriate revision number if the external additionally specifies a revision, see the [http://svnbook.red-bean.com/en/1.4/svn.advanced.externals.html SVN Book on externals] for more details).\n\nNote that the number used as a key in the above section is purely used as a place holder, as the URLs themselves can\'t be used as a key due to various limitations in the configuration file parser.\n\nFinally, the relative URLs introduced in [http://subversion.tigris.org/svn_1.5_releasenotes.html#externals Subversion 1.5] are not yet supported.\n\n----\nSee also: TracGuide, TracAdmin, TracEnvironment\n',NULL,NULL),('TracIni',2,1397068026246045,'trac','127.0.0.1','= The Trac Configuration File =\n\n \'\'[Note To Editors] Please discuss documentation changes in the [#Discussion] section. Even better, send us [TracDev/SubmittingPatches documentation patches] against the \'\'code\'\' (i.e. where the configuration entries are documented), either on Trac-dev or on new tickets. \'\'\n\n[[TracGuideToc]]\n[[PageOutline]]\n\nTrac configuration is done by editing the \'\'\'`trac.ini`\'\'\' config file, located in `<projectenv>/conf/trac.ini`.  Changes to the configuration are usually reflected immediately, though changes to the `[components]` or `[logging]` sections will require restarting the web server. You may also need to restart the web server after creating a global configuration file when none was previously present.\n\nThe `trac.ini` configuration file and its parent directory should be writable by the web server, as Trac currently relies on the possibility to trigger a complete environment reload to flush its caches.\n\n== Global Configuration ==\n\nIn versions prior to 0.11, the global configuration was by default located in `$prefix/share/trac/conf/trac.ini` or /etc/trac/trac.ini, depending on the distribution. If you\'re upgrading, you may want to specify that file to inherit from.  Literally, when you\'re upgrading to 0.11, you have to add an `[inherit]` section to your project\'s `trac.ini` file. Additionally, you have to move your customized templates and common images from `$prefix/share/trac/...` to the new location.\n\nGlobal options will be merged with the environment-specific options, where local options override global options. The options file is specified as follows:\n{{{\n[inherit]\nfile = /path/to/global/trac.ini\n}}}\nMultiple files can be specified using a comma-separated list.\n\nNote that you can also specify a global option file when creating a new project,  by adding the option `--inherit=/path/to/global/trac.ini` to [TracAdmin#initenv trac-admin]\'s `initenv` command.  If you do not do this but nevertheless intend to use a global option file with your new environment, you will have to go through the newly generated `conf/trac.ini` file and delete the entries that will otherwise override those set in the global file.\n\nThere are two more entries in the [[#inherit-section| [inherit] ]] section, `templates_dir` for sharing global templates and `plugins_dir`, for sharing plugins. Those entries can themselves be specified in the shared configuration file, and in fact, configuration files can even be chained if you specify another `[inherit] file` there.\n\nNote that the templates found in the `templates/` directory of the TracEnvironment have precedence over those found in `[inherit] templates_dir`. In turn, the latter have precedence over the installed templates, so be careful about what you put there, notably if you override a default template be sure to refresh your modifications when you upgrade to a new version of Trac (the preferred way to perform TracInterfaceCustomization being still to write a custom plugin doing an appropriate `ITemplateStreamFilter` transformation).\n\n== Reference for settings\n\nThis is a brief reference of available configuration options, and their default settings.\n\n[[TracIni]]\n\n----\nSee also: TracGuide, TracAdmin, TracEnvironment\n',NULL,NULL),('TracInstall',1,1291894092000000,'trac','127.0.0.1','= Trac Installation Guide for 0.11 = \n[[TracGuideToc]]\n\n\nTrac is written in the Python programming language and needs a database, [http://sqlite.org/ SQLite], [http://postgresql.org/ PostgreSQL], [http://mysql.com/ MySQL]. For HTML rendering, Trac uses the [http://genshi.edgewall.org Genshi] templating system.\n\nWhat follows are generic instructions for installing and setting up Trac and its requirements. While you can find instructions for installing Trac on specific systems at TracInstallPlatforms on the main Trac site, please be sure to \'\'\'first read through these general instructions\'\'\' to get a good understanding of the tasks involved.\n\nSee TracUpgrade for instructions on how to upgrade an existing installation.\n\n\n== Quick Install a Released Version ==\nFor a quick install, first make sure you have [http://python.org/download Python] (2.3-2.6) and [http://peak.telecommunity.com/DevCenter/EasyInstall#installing-easy-install easy_install].\n\nThen enter (\'\'omitting \'sudo\' if not applicable\'\')\n{{{\nsudo easy_install Trac\n}}}\nto install Trac, SQLite, and Genshi.\n\n\n== Requirements ==\nThe hardware requirements for running Trac obviously depend on the expected data volume (number of wiki pages, tickets, revisions) and traffic. Very small projects will run fine with a 500MHz processor and 128MB RAM using SQLite. In general, the more RAM, the better. A fast hard disk also helps.\n\nTo install Trac, the following software packages must be installed:\n\n * [http://www.python.org/ Python], version >=2.3 (<3.0)\n   * if using mod_python together with xml-related things, use python-2.5. expat is namespaced there and does not cause apache to crash any more(see [http://www.dscpl.com.au/wiki/ModPython/Articles/ExpatCausingApacheCrash here] for details).\n   * For RPM-based systems you might also need the `python-devel` and `python-xml` packages.\n   * See instructions in [trac:wiki:TracOnWindows/Python2.5 TracOnWindows/Python2.5]\n * [wiki:setuptools], version >= 0.6\n * [http://genshi.edgewall.org/wiki/Download Genshi], version >= 0.5 (was version >= 0.4.1 on previous 0.11 release candidates)\n * You also need a database system and the corresponding python drivers for it.\n   The database can be either SQLite, PostgreSQL or MySQL.\n * Optional if some plugins require it: [http://www.clearsilver.net/ ClearSilver]\n\n==== For SQLite ====\n\nIf you\'re using Python 2.5 or 2.6, you already have everything you need.\n\nIf you\'re using Python 2.3 or 2.4 and need pysqlite, you can download from \n[http://code.google.com/p/pysqlite/downloads/list google code] the Windows\ninstallers or the tar.gz archive for building from source: \n{{{\n$ tar xvfz <version>.tar.gz \n$ cd <version> \n$ python setup.py build_static install \n}}}\n \nThat way, the latest SQLite version will be downloaded and built into the \nbindings. \n\nIf you\'re still using SQLite 2.x, you\'ll need pysqlite 1.0.x, although this \npackage is not easy to find anymore. For SQLite 3.x, try not to use\npysqlite 1.1.x, which has been deprecated in favor of pysqlite 2.x.\n\nSee additional information in [trac:PySqlite PySqlite].\n\n==== For PostgreSQL ====\n\n * [http://www.postgresql.org/ PostgreSQL]\n * [http://initd.org/projects/psycopg2 psycopg2]\n * See [trac:wiki:DatabaseBackend#Postgresql DatabaseBackend]\n\n\'\'\'Warning\'\'\': PostgreSQL 8.3 uses a strict type checking mechanism. To use Trac with the 8.3 Version of PostgreSQL, you will need [http://trac.edgewall.org/changeset/6512 trac-0.11] or later.\n\n==== For MySQL ====\n\n * [http://mysql.com/ MySQL], version 4.1 or later ([http://askmonty.org/wiki/index.php/MariaDB MariaDB] might work as well)\n * [http://sf.net/projects/mysql-python MySQLdb], version 1.2.1 or later\n\nSee [trac:MySqlDb MySqlDb] for more detailed information.\nIt is \'\'very\'\' important to read carefully that page before creating the database.\n\n== Optional Requirements ==\n\n==== Version Control System ====\n\n\'\'\'Please note:\'\'\' if using Subversion, Trac must be installed on the \'\'\'same machine\'\'\'. Remote repositories are currently not supported (although Windows UNC paths such as {{{\\\\machine_name\\path\\to\\svn}}} do work).\n\n * [http://subversion.tigris.org/ Subversion], version >= 1.0. (versions recommended: 1.2.4, 1.3.2 or 1.4.2) and the \'\'\'\'\'corresponding\'\'\'\'\' Python bindings. For troubleshooting, check [trac:TracSubversion TracSubversion]\n   * Trac uses the [http://svnbook.red-bean.com/svnbook-1.1/ch08s02.html#svn-ch-8-sect-2.3 SWIG] bindings included in the Subversion distribution, \'\'\'not\'\'\' [http://pysvn.tigris.org/ PySVN] (which is sometimes confused with the standard SWIG bindings).\n   * If Subversion was already installed without the SWIG bindings, on Unix you\'ll need to re-`configure` Subversion and `make swig-py`, `make install-swig-py`.\n   * There are [http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91 pre-compiled bindings] available for win32. \n * Support for other version control systems is provided via third-parties. See [trac:PluginList PluginList] and [trac:VersioningSystemBackend VersioningSystemBackend].\n\n==== Web Server ====\n * A CGI-capable web server (see TracCgi), or\n * a [http://www.fastcgi.com/ FastCGI]-capable web server (see TracFastCgi), or\n * an [http://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html AJP]-capable web server (see [trac:TracOnWindowsIisAjp TracOnWindowsIisAjp]), or\n * [http://httpd.apache.org/ Apache] with [http://code.google.com/p/modwsgi/ mod_wsgi] (see [wiki:TracModWSGI] or http://code.google.com/p/modwsgi/wiki/IntegrationWithTrac) or\n    * This should work with Apache 1.3, 2.0 or 2.2 and promises to deliver more performance than using mod_python. A little less mature than mod_python.\n * [http://httpd.apache.org/ Apache] with [http://www.modpython.org/ mod_python 3.1.3+] (see TracModPython)\n    * When installing mod_python the development versions of Python and Apache are required (actually the libraries and header files)\n\nFor those stuck with Apache 1.3, it is also possible to get Trac working with [http://www.modpython.org/ mod_python 2.7] (see [trac:wiki:TracModPython2.7 TracModPython2.7]). This guide hasn\'t been updated since 0.84, so it may or may not work.\n\n==== Other Python Utilities ====\n * [http://docutils.sourceforge.net/ docutils], version >= 0.3.9 for WikiRestructuredText.\n * [http://pygments.pocoo.org Pygments] for \'\'\'syntax highlighting\'\'\', although [http://silvercity.sourceforge.net/ SilverCity] >= 0.9.7 and/or [http://gnu.org/software/enscript/enscript.html GNU Enscript] are also possible. Refer to TracSyntaxColoring for details.\n * [http://pytz.sf.net pytz] to get a complete list of time zones, otherwise Trac will fall back on a shorter list from an internal time zone implementation.\n\n\'\'\'Attention\'\'\': The various available versions of these dependencies are not necessarily interchangable, so please pay attention to the version numbers above. If you are having trouble getting Trac to work please double-check all the dependencies before asking for help on the [trac:MailingList MailingList] or [trac:IrcChannel IrcChannel].\n\nPlease refer to the documentation of these packages to find out how they are best installed. In addition, most of the [trac:TracInstallPlatforms platform-specific instructions] also describe the installation of the dependencies. Keep in mind however that the information there \'\'probably concern older versions of Trac than the one you\'re installing\'\' (there are even some pages that are still talking about Trac 0.8!).\n\n== Installing Trac ==\n\nOne way to install Trac is using `setuptools`.\nWith setuptools you can install Trac from the subversion repository; for example,\nto install release version 0.11 do:\n{{{\neasy_install http://svn.edgewall.org/repos/trac/tags/trac-0.11\n}}}\n\nBut of course the python-typical setup at the top of the source directory also works:\n{{{\n$ python ./setup.py install\n}}}\n\n\'\'Note: you\'ll need root permissions or equivalent for this step.\'\'\n\nThis will byte-compile the python source code and install it as an .egg file or folder in the `site-packages` directory\nof your Python installation. The .egg will also contain all other resources needed by standard Trac, such as htdocs and templates.\n\nThe script will also install the [wiki:TracAdmin trac-admin] command-line tool, used to create and maintain [wiki:TracEnvironment project environments], as well as the [wiki:TracStandalone tracd] standalone server.\n\n==== Advanced Options ====\n\nTo install Trac to a custom location, or find out about other advanced installation options, run:\n{{{\neasy_install --help\n}}}\n\nAlso see [http://docs.python.org/inst/inst.html Installing Python Modules] for detailed information.\n\nSpecifically, you might be interested in:\n{{{\neasy_install --prefix=/path/to/installdir\n}}}\nor, if installing Trac to a Mac OS X system:\n{{{\neasy_install --prefix=/usr/local --install-dir=/Library/Python/2.5/site-packages\n}}}\n\nThe above will place your `tracd` and `trac-admin` commands into `/usr/local/bin` and will install the Trac libraries and dependencies into `/Library/Python/2.5/site-packages`, which is Apple\'s preferred location for third-party Python application installations.\n\n== Creating a Project Environment ==\n\nA [wiki:TracEnvironment Trac environment] is the backend storage where Trac stores information like wiki pages, tickets, reports, settings, etc. An environment is basically a directory that contains a human-readable configuration file and various other files and directories.\n\nA new environment is created using [wiki:TracAdmin trac-admin]:\n{{{\n$ trac-admin /path/to/myproject initenv\n}}}\n\n[wiki:TracAdmin trac-admin] will prompt you for the information it needs to create the environment, such as the name of the project, the type and the path to an existing [wiki:TracEnvironment#SourceCodeRepository source code repository], the [wiki:TracEnvironment#DatabaseConnectionStrings database connection string], and so on. If you\'re not sure what to specify for one of these options, just leave it blank to use the default value. The database connection string in particular will always work as long as you have SQLite installed. Leaving the path to the source code repository empty will disable any functionality related to version control, but you can always add that back when the basic system is running.\n\nAlso note that the values you specify here can be changed later by directly editing the [wiki:TracIni] configuration file.\n\n\'\'Note: The user account under which the web server runs will require write permissions to the environment directory and all the files inside.  On Linux, with the web server running as user apache and group apache, enter:\'\'\n\n  chown -R apache.apache /path/to/myproject\n\n== Running the Standalone Server ==\n\nAfter having created a Trac environment, you can easily try the web interface by running the standalone server [wiki:TracStandalone tracd]:\n{{{\n$ tracd --port 8000 /path/to/myproject\n}}}\n\nThen, fire up a browser and visit `http://localhost:8000/`. You should get a simple listing of all environments that tracd knows about. Follow the link to the environment you just created, and you should see Trac in action. If you only plan on managing a single project with trac you can have the standalone server skip the environment list by starting it like this:\n{{{\n$ tracd -s --port 8000 /path/to/myproject\n}}}\n\n== Running Trac on a Web Server ==\n\nTrac provides three options for connecting to a \"real\" web server: [wiki:TracCgi CGI], [wiki:TracFastCgi FastCGI] and [wiki:TracModPython mod_python]. For decent performance, it is recommended that you use either FastCGI or mod_python.\n\nIf you\'re not afraid of running newer code, you can also try running Trac on [wiki:TracModWSGI mod_wsgi]. This should deliver even better performance than mod_python, but the module isn\'t as extensively tested as mod_python.\n\nTrac also supports [trac:TracOnWindowsIisAjp AJP] which may be your choice if you want to connect to IIS.\n\n==== Generating the Trac cgi-bin directory ====\n\nIn order for Trac to function properly with FastCGI or mod_python, you need to have a trac.cgi file. This is an executable which loads the appropriate Python code. It can be generated using the `deploy` option of [wiki:TracAdmin trac-admin].\n\nThere is, however, a bit of a chicken-and-egg problem. The [wiki:TracAdmin trac-admin] command requires an existing environment to function, but complains if the deploy directory already exists. This is a problem, because environments are often stored in a subdirectory of the deploy. The solution is to do something like this:\n{{{\nmkdir -p /usr/share/trac/projects/my-project\ntrac-admin /usr/share/trac/projects/my-project initenv\ntrac-admin /usr/share/trac/projects/my-project deploy /tmp/deploy\nmv /tmp/deploy/* /usr/share/trac\n}}}\n\n==== Setting up the Plugin Cache ====\n\nSome Python plugins need to be extracted to a cache directory. By default the cache resides in the home directory of the current user. When running Trac on a Web Server as a dedicated user (which is highly recommended) who has no home directory, this might prevent the plugins from starting. To override the cache location you can set the PYTHON_EGG_CACHE environment variable. Refer to your server documentation for detailed instructions.\n\n== Configuring Authentication ==\n\nThe process of adding, removing, and configuring user accounts for authentication depends on the specific way you run Trac. The basic procedure is described in the [wiki:TracCgi#AddingAuthentication \"Adding Authentication\"] section on the TracCgi page. To learn how to setup authentication for the frontend you\'re using, please refer to one of the following pages:\n\n * TracStandalone if you use the standalone server, `tracd`.\n * TracCgi if you use the CGI or FastCGI methods.\n * TracModPython if you use the mod_python method.\n\n== Automatic reference to the SVN changesets in Trac tickets ==\n\nYou can configure SVN to automatically add a reference to the changeset into the ticket comments, whenever files are committed to the repository. The description of the commit needs to contain one of the following formulas:\n * \'\'\'Refs #123\'\'\' - to reference this changeset in #123 ticket\n * \'\'\'Fixes #123\'\'\' - to reference this changeset and close #123 ticket with the default status \'\'fixed\'\'\n\nAll you have to do is to edit the \'\'post-commit\'\' hook in your SVN repository and make it execute \'\'trac-post-commit-hook\'\' coming with Trac.\n\nIf you are editing the \'\'post-commit\'\' hook for the first time you need to navigate to your SVN repository\'s hooks subfolder and rename existing there \'\'post-commit\'\' template:\n\n{{{\n$ cd /path/to/svn/repository/hooks\n$ mv post-commit.tmpl post-commit\n$ chmod 755 post-commit\n}}}\n\nNext open it in any text editor and add a line with path to the Trac environment connected with this SVN repository and another line executing the \'\'trac-post-commit-hook\'\' script:\n\n{{{\nREPOS=\"$1\"\nREV=\"$2\"\nTRAC_ENV=\"/path/to/your/trac/project\"\n\n/usr/bin/python /usr/local/bin/trac-post-commit-hook -p \"$TRAC_ENV\" -r \"$REV\"\n}}}\n\nMake sure that \'\'trac-post-commit-hook\'\' exists in above path with execution permissions for the same user which SVN is running from. This script can be found in contrib subfolder of your Trac distribution and the latest version can be always downloaded from [source:trunk/contrib/trac-post-commit-hook].\n\n\n== Platform-specifics installations ==\n\n * See [trac:TracInstallPlatforms TracInstallPlatforms]\n \n\n== Using Trac ==\n\nOnce you have your Trac site up and running, you should be able to browse your subversion repository, create tickets, view the timeline, etc.\n\nKeep in mind that anonymous (not logged in) users can by default access most but not all of the features. You will need to configure authentication and grant additional [wiki:TracPermissions permissions] to authenticated users to see the full set of features.\n\n\'\' Enjoy! \'\'\n\n[trac:TracTeam The Trac Team]\n\n----\nSee also: [trac:TracInstallPlatforms TracInstallPlatforms], TracGuide, TracCgi, TracFastCgi, TracModPython, [wiki:TracModWSGI], TracUpgrade, TracPermissions\n\n',NULL,NULL);
INSERT INTO `wiki` VALUES ('TracInstall',2,1397068026237734,'trac','127.0.0.1','= Trac Installation Guide for 1.0 = \n[[TracGuideToc]]\n\nTrac is written in the Python programming language and needs a database, [http://sqlite.org/ SQLite], [http://www.postgresql.org/ PostgreSQL], or [http://mysql.com/ MySQL]. For HTML rendering, Trac uses the [http://genshi.edgewall.org Genshi] templating system.\n\nSince version 0.12, Trac can also be localized, and there\'s probably a translation available for your language. If you want to be able to use the Trac interface in other languages, then make sure you have installed the optional package [#OtherPythonPackages Babel]. Pay attention to the extra steps for localization support in the [#InstallingTrac Installing Trac] section below. Lacking Babel, you will only get the default english version, as usual.\n\nIf you\'re interested in contributing new translations for other languages or enhance the existing translations, then please have a look at [[trac:TracL10N]].\n\nWhat follows are generic instructions for installing and setting up Trac and its requirements. While you may find instructions for installing Trac on specific systems at [trac:TracInstallPlatforms TracInstallPlatforms] on the main Trac site, please be sure to \'\'\'first read through these general instructions\'\'\' to get a good understanding of the tasks involved.\n\n[[PageOutline(2-3,Installation Steps,inline)]]\n\n== Dependencies ==\n=== Mandatory Dependencies\nTo install Trac, the following software packages must be installed:\n\n * [http://www.python.org/ Python], version >= 2.5 and < 3.0\n   (note that we dropped the support for Python 2.4 in this release)\n * [http://peak.telecommunity.com/DevCenter/setuptools setuptools], version >= 0.6, or better yet, [http://pypi.python.org/pypi/distribute distribute]\n * [http://genshi.edgewall.org/wiki/Download Genshi], version >= 0.6 (unreleased version 0.7dev should work as well)\n\nYou also need a database system and the corresponding python bindings.\nThe database can be either SQLite, PostgreSQL or MySQL.\n\n==== For the SQLite database #ForSQLite\n\nAs you must be using Python 2.5, 2.6 or 2.7, you already have the SQLite database bindings bundled with the standard distribution of Python (the `sqlite3` module).\n\nHowever, if you\'d like, you can download the latest and greatest version of [[trac:Pysqlite]] from \n[http://code.google.com/p/pysqlite/downloads/list google code], where you\'ll find the Windows\ninstallers or the `tar.gz` archive for building from source: \n{{{\n$ tar xvfz <version>.tar.gz \n$ cd <version> \n$ python setup.py build_static install \n}}}\n \nThis will download the latest SQLite code and build the bindings. \n\nSQLite 2.x is no longer supported.\n\nA known bug PySqlite versions 2.5.2-4 prohibits upgrade of trac databases\nfrom 0.11.x to 0.12. Please use versions 2.5.5 and newer or 2.5.1 and\nolder. See #9434 for more detail.\n\nSee additional information in [trac:PySqlite PySqlite].\n\n==== For the PostgreSQL database #ForPostgreSQL\n\nYou need to install the database and its Python bindings:\n * [http://www.postgresql.org/ PostgreSQL], version 8.0 or later\n * [http://pypi.python.org/pypi/psycopg2 psycopg2]\n\nSee [trac:DatabaseBackend#Postgresql DatabaseBackend] for details.\n\n\n==== For the MySQL database #ForMySQL\n\nTrac can now work quite well with MySQL, provided you follow the guidelines.\n\n * [http://mysql.com/ MySQL], version 5.0 or later\n * [http://sf.net/projects/mysql-python MySQLdb], version 1.2.2 or later\n\nIt is \'\'\'very\'\'\' important to read carefully the  [trac:MySqlDb] page before creating the database.\n\n=== Optional Dependencies\n\n==== Version Control System ====\n\n===== Subversion =====\n * [http://subversion.apache.org/ Subversion], 1.5.x or 1.6.x and the \'\'\'\'\'corresponding\'\'\'\'\' Python bindings. Older versions starting from 1.0, like 1.2.4, 1.3.2 or 1.4.2, etc. should still work. For troubleshooting information, check the [trac:TracSubversion#Troubleshooting TracSubversion] page.\n\nThere are [http://subversion.apache.org/packages.html pre-compiled SWIG bindings] available for various platforms. (Good luck finding precompiled SWIG bindings for any Windows package at that listing. TracSubversion points you to [http://alagazam.net Algazam], which works for me under Python 2.6.)\n\nNote that Trac \'\'\'doesn\'t\'\'\' use [http://pysvn.tigris.org/ PySVN], neither does it work yet with the newer `ctype`-style bindings. \n\n\n\'\'\'Please note:\'\'\' if using Subversion, Trac must be installed on the \'\'\'same machine\'\'\'. Remote repositories are currently [trac:ticket:493 not supported].\n\n\n===== Others =====\n\nSupport for other version control systems is provided via third-parties. See [trac:PluginList] and [trac:VersionControlSystem].\n\n==== Web Server ====\nA web server is optional because Trac is shipped with a server included, see the [#RunningtheStandaloneServer Running the Standalone Server ] section below.\n\nAlternatively you configure Trac to run in any of the following environments.\n * [http://httpd.apache.org/ Apache] with \n   - [http://code.google.com/p/modwsgi/ mod_wsgi], see [wiki:TracModWSGI] and \n     http://code.google.com/p/modwsgi/wiki/IntegrationWithTrac\n   - [http://modpython.org/ mod_python 3.3.1], deprecated: see TracModPython)\n * a [http://www.fastcgi.com/ FastCGI]-capable web server (see TracFastCgi)\n * an [http://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html AJP]-capable web\n   server (see [trac:TracOnWindowsIisAjp TracOnWindowsIisAjp])\n * a CGI-capable web server (see TracCgi), \'\'\'but usage of Trac as a cgi script \n   is highly discouraged\'\'\', better use one of the previous options. \n   \n\n==== Other Python Packages ====\n\n * [http://babel.edgewall.org Babel], version >= 0.9.5, \n   needed for localization support (unreleased version 1.0dev should work as well)\n * [http://docutils.sourceforge.net/ docutils], version >= 0.3.9 \n   for WikiRestructuredText.\n * [http://pygments.pocoo.org Pygments] for \n   [wiki:TracSyntaxColoring syntax highlighting].\n   [http://silvercity.sourceforge.net/ SilverCity] and/or \n   [http://gnu.org/software/enscript/enscript.html Enscript] may still be used\n   but are deprecated and you really should be using Pygments.\n * [http://pytz.sf.net pytz] to get a complete list of time zones,\n   otherwise Trac will fall back on a shorter list from \n   an internal time zone implementation.\n\n\'\'\'Attention\'\'\': The various available versions of these dependencies are not necessarily interchangable, so please pay attention to the version numbers above. If you are having trouble getting Trac to work please double-check all the dependencies before asking for help on the [trac:MailingList] or [trac:IrcChannel].\n\nPlease refer to the documentation of these packages to find out how they are best installed. In addition, most of the [trac:TracInstallPlatforms platform-specific instructions] also describe the installation of the dependencies. Keep in mind however that the information there \'\'probably concern older versions of Trac than the one you\'re installing\'\' (there are even some pages that are still talking about Trac 0.8!).\n\n\n== Installing Trac ==\n=== Using `easy_install`\nOne way to install Trac is using [http://pypi.python.org/pypi/setuptools setuptools].\nWith setuptools you can install Trac from the subversion repository; \n\nA few examples:\n\n - install Trac 1.0:\n   {{{\n   easy_install Trac==1.0\n   }}}\n   (NOT YET ENABLED)\n - install latest development version 1.0dev:\n   {{{\n   easy_install Trac==dev\n   }}}\n   Note that in this case you won\'t have the possibility to run a localized version of Trac;\n   either use a released version or install from source \n\n=== Using `pip`\n\'pip\' is an easy_install replacement that is very useful to quickly install python packages.\nTo get a trac installation up and running in less than 5 minutes:\n\nAssuming you want to have your entire pip installation in `/opt/user/trac`\n\n - \n{{{\npip -E /opt/user/trac install trac psycopg2 \n}}}\nor\n - \n{{{\npip -E /opt/user/trac install trac mysql-python \n}}}\n\nMake sure your OS specific headers are available for pip to automatically build PostgreSQL (libpq-dev) or MySQL (libmysqlclient-dev) bindings.\n\npip will automatically resolve all dependencies (like Genshi, pygments, etc.) and download the latest packages on pypi.python.org and create a self contained installation in `/opt/user/trac`.\n\nAll commands (`tracd`, `trac-admin`) are available in `/opt/user/trac/bin`. This can also be leveraged for `mod_python` (using `PythonHandler` directive) and `mod_wsgi` (using `WSGIDaemonProcess` directive)\n\nAdditionally, you can install several trac plugins (listed [http://pypi.python.org/pypi?:action=search&term=trac&submit=search here]) through pip.\n\n\n\n=== From source\nOf course, using the python-typical setup at the top of the source directory also works.\n\nYou can obtain the source for a .tar.gz or .zip file corresponding to a release (e.g. Trac-1.0.tar.gz), or you can get the source directly from the repository (see Trac:SubversionRepository for details).\n\n{{{\n$ python ./setup.py install\n}}}\n\n\'\'You\'ll need root permissions or equivalent for this step.\'\'\n\nThis will byte-compile the python source code and install it as an .egg file or folder in the `site-packages` directory\nof your Python installation. The .egg will also contain all other resources needed by standard Trac, such as htdocs and templates.\n\nThe script will also install the [wiki:TracAdmin trac-admin] command-line tool, used to create and maintain [wiki:TracEnvironment project environments], as well as the [wiki:TracStandalone tracd] standalone server.\n\nIf you install from source and want to make Trac available in other languages, make sure  Babel is installed. Only then, perform the `install` (or simply redo the `install` once again afterwards if you realize Babel was not yet installed):\n{{{\n$ python ./setup.py install\n}}}\nAlternatively, you can do a `bdist_egg` and copy the .egg from dist/ to the place of your choice, or you can create a Windows installer (`bdist_wininst`).\n\n=== Advanced Options ===\n\nTo install Trac to a custom location, or find out about other advanced installation options, run:\n{{{\neasy_install --help\n}}}\n\nAlso see [http://docs.python.org/inst/inst.html Installing Python Modules] for detailed information.\n\nSpecifically, you might be interested in:\n{{{\neasy_install --prefix=/path/to/installdir\n}}}\nor, if installing Trac to a Mac OS X system:\n{{{\neasy_install --prefix=/usr/local --install-dir=/Library/Python/2.5/site-packages\n}}}\nNote: If installing on Mac OS X 10.6 running {{{ easy_install http://svn.edgewall.org/repos/trac/trunk }}} will install into {{{ /usr/local }}} and {{{ /Library/Python/2.6/site-packages }}} by default\n\nThe above will place your `tracd` and `trac-admin` commands into `/usr/local/bin` and will install the Trac libraries and dependencies into `/Library/Python/2.5/site-packages`, which is Apple\'s preferred location for third-party Python application installations.\n\n\n== Creating a Project Environment ==\n\nA [TracEnvironment Trac environment] is the backend storage where Trac stores information like wiki pages, tickets, reports, settings, etc. An environment is basically a directory that contains a human-readable [TracIni configuration file], and various other files and directories.\n\nA new environment is created using [wiki:TracAdmin trac-admin]:\n{{{\n$ trac-admin /path/to/myproject initenv\n}}}\n\n[TracAdmin trac-admin] will prompt you for the information it needs to create the environment, such as the name of the project and the [TracEnvironment#DatabaseConnectionStrings database connection string]. If you\'re not sure what to specify for one of these options, just press `<Enter>` to use the default value. \n\nUsing the default database connection string in particular will always work as long as you have SQLite installed.\nFor the other [DatabaseBackend database backends] you should plan ahead and already have a database ready to use at this point.\n\nSince 0.12, Trac doesn\'t ask for a [TracEnvironment#SourceCodeRepository source code repository] anymore when creating an environment. Repositories can be [TracRepositoryAdmin added] afterward, or the version control support can be disabled completely if you don\'t need it.\n\nAlso note that the values you specify here can be changed later by directly editing the [TracIni conf/trac.ini] configuration file.\n\nFinally, make sure the user account under which the web front-end runs will have \'\'\'write permissions\'\'\' to the environment directory and all the files inside. This will be the case if you run `trac-admin ... initenv` as this user. If not, you should set the correct user afterwards. For example on Linux, with the web server running as user `apache` and group `apache`, enter:\n{{{\n# chown -R apache.apache /path/to/myproject\n}}}\n\n{{{#!div class=important\n\'\'\'Warning:\'\'\' Please only use ASCII-characters for account name and project path, unicode characters are not supported there.\n}}}\n\n\n== Deploying Trac\n\n=== Running the Standalone Server ===\n\nAfter having created a Trac environment, you can easily try the web interface by running the standalone server [wiki:TracStandalone tracd]:\n{{{\n$ tracd --port 8000 /path/to/myproject\n}}}\n\nThen, fire up a browser and visit `http://localhost:8000/`. You should get a simple listing of all environments that `tracd` knows about. Follow the link to the environment you just created, and you should see Trac in action. If you only plan on managing a single project with Trac you can have the standalone server skip the environment list by starting it like this:\n{{{\n$ tracd -s --port 8000 /path/to/myproject\n}}}\n\n=== Running Trac on a Web Server ===\n\nTrac provides various options for connecting to a \"real\" web server: \n - [wiki:TracFastCgi FastCGI]\n - [wiki:TracModWSGI mod_wsgi] \n - //[wiki:TracModPython mod_python] (no longer recommended, as mod_python is not actively maintained anymore)//\n - //[wiki:TracCgi CGI] (should not be used, as the performance is far from optimal)//\n\nTrac also supports [trac:TracOnWindowsIisAjp AJP] which may be your choice if you want to connect to IIS. Other deployment scenarios are possible: [trac:TracNginxRecipe nginx], [http://projects.unbit.it/uwsgi/wiki/Example#Traconapacheinasub-uri uwsgi], [trac:TracOnWindowsIisIsapi Isapi-wsgi] etc.\n\n==== Generating the Trac cgi-bin directory ==== #cgi-bin\n\nIn order for Trac to function properly with FastCGI you need to have a `trac.fcgi` file and for mod_wsgi a `trac.wsgi` file. These are Python scripts which load the appropriate Python code. They can be generated using the `deploy` option of [wiki:TracAdmin trac-admin].\n\nThere is, however, a bit of a chicken-and-egg problem. The [wiki:TracAdmin trac-admin] command requires an existing environment to function, but complains if the deploy directory already exists. This is a problem, because environments are often stored in a subdirectory of the deploy. The solution is to do something like this:\n{{{\nmkdir -p /usr/share/trac/projects/my-project\ntrac-admin /usr/share/trac/projects/my-project initenv\ntrac-admin /usr/share/trac/projects/my-project deploy /tmp/deploy\nmv /tmp/deploy/* /usr/share/trac\n}}}\n\n\n==== Mapping Static Resources ====\n\nOut of the box, Trac will pass static resources such as style sheets or images through itself. For anything but a tracd only based deployment, this is far from optimal as the web server could be set up to directly serve those static resources (for CGI setup, this is \'\'\'highly undesirable\'\'\' and will cause abysmal performance).\n\nWeb servers such as [http://httpd.apache.org/ Apache] allow you to create “Aliases” to resources, giving them a virtual URL that doesn\'t necessarily reflect the layout of the servers file system. We also can map requests for static resources directly to the directory on the file system, avoiding processing these requests by Trac itself.\n\nThere are two primary URL paths for static resources - `/chrome/common` and `/chrome/site`. Plugins can add their own resources, usually accessible by `/chrome/<plugin>` path, so its important to override only known paths and not try to make universal `/chrome` alias for everything.\n\nNote that in order to get those static resources on the filesystem, you need first to extract the relevant resources from Trac using the [TracAdmin trac-admin]` <environment> deploy` command:\n[[TracAdminHelp(deploy)]]\n\nThe target `<directory>` will then contain an `htdocs` directory with:\n - `site/` - a copy of the environment\'s directory `htdocs/` \n - `common/` - the static resources of Trac itself\n - `<plugins>/` - one directory for each resource directory managed by the plugins enabled for this environment\n\n===== Example: Apache and `ScriptAlias` ===== #ScriptAlias-example\n\nAssuming the deployment has been done this way:\n{{{\n$ trac-admin /var/trac/env deploy /path/to/trac/htdocs/common\n}}}\n\nAdd the following snippet to Apache configuration \'\'before\'\' the `ScriptAlias` or `WSGIScriptAlias` (which map all the other requests to the Trac application), changing paths to match your deployment:\n{{{\nAlias /trac/chrome/common /path/to/trac/htdocs/common\nAlias /trac/chrome/site /path/to/trac/htdocs/site\n\n<Directory \"/path/to/www/trac/htdocs\">\n  Order allow,deny\n  Allow from all\n</Directory>\n}}}\n\nIf using mod_python, you might want to add this too (otherwise, the alias will be ignored):\n{{{\n<Location \"/trac/chrome/common/\">\n  SetHandler None\n</Location>\n}}}\n\nNote that we mapped `/trac` part of the URL to the `trac.*cgi` script, and the path `/trac/chrome/common` is the path you have to append to that location to intercept requests to the static resources. \n\nSimilarly, if you have static resources in a project\'s `htdocs` directory (which is referenced by `/trac/chrome/site` URL in themes), you can configure Apache to serve those resources (again, put this \'\'before\'\' the `ScriptAlias` or `WSGIScriptAlias` for the .*cgi scripts, and adjust names and locations to match your installation):\n{{{\nAlias /trac/chrome/site /path/to/projectenv/htdocs\n\n<Directory \"/path/to/projectenv/htdocs\">\n  Order allow,deny\n  Allow from all\n</Directory>\n}}}\n\nAlternatively to aliasing `/trac/chrome/common`, you can tell Trac to generate direct links for those static resources (and only those), using the [[wiki:TracIni#trac-section| [trac] htdocs_location]] configuration setting:\n{{{\n[trac]\nhtdocs_location = http://static.example.org/trac-common/\n}}}\nNote that this makes it easy to have a dedicated domain serve those static resources (preferentially [http://code.google.com/speed/page-speed/docs/request.html#ServeFromCookielessDomain cookie-less]).\n\nOf course, you still need to make the Trac `htdocs/common` directory available through the web server at the specified URL, for example by copying (or linking) the directory into the document root of the web server:\n{{{\n$ ln -s /path/to/trac/htdocs/common /var/www/static.example.org/trac-common\n}}}\n\n\n==== Setting up the Plugin Cache ====\n\nSome Python plugins need to be extracted to a cache directory. By default the cache resides in the home directory of the current user. When running Trac on a Web Server as a dedicated user (which is highly recommended) who has no home directory, this might prevent the plugins from starting. To override the cache location you can set the PYTHON_EGG_CACHE environment variable. Refer to your server documentation for detailed instructions on how to set environment variables.\n\n== Configuring Authentication ==\n\nTrac uses HTTP authentication. You\'ll need to configure your webserver to request authentication when the `.../login` URL is hit (the virtual path of the \"login\" button). Trac will automatically pick the REMOTE_USER variable up after you provide your credentials. Therefore, all user management goes through your web server configuration. Please consult the documentation of your web server for more info.\n\nThe process of adding, removing, and configuring user accounts for authentication depends on the specific way you run Trac. \n\nPlease refer to one of the following sections:\n * TracStandalone#UsingAuthentication if you use the standalone server, `tracd`.\n * [wiki:TracModWSGI#ConfiguringAuthentication TracModWSGI#ConfiguringAuthentication] if you use the Apache web server, with any of its front end: `mod_wsgi` of course, but the same instructions applies also for `mod_python`, `mod_fcgi` or `mod_fastcgi`.\n * TracFastCgi if you\'re using another web server with FCGI support (Cherokee, Lighttpd, !LiteSpeed, nginx)\n\n== Granting admin rights to the admin user\nGrant admin rights to user admin:\n{{{\n$ trac-admin /path/to/myproject permission add admin TRAC_ADMIN\n}}}\nThis user will have an \"Admin\" entry menu that will allow you to admin your trac project.\n\n== Finishing the install\n\n=== Automatic reference to the SVN changesets in Trac tickets ===\n\nYou can configure SVN to automatically add a reference to the changeset into the ticket comments, whenever changes are committed to the repository. The description of the commit needs to contain one of the following formulas:\n * \'\'\'`Refs #123`\'\'\' - to reference this changeset in `#123` ticket\n * \'\'\'`Fixes #123`\'\'\' - to reference this changeset and close `#123` ticket with the default status \'\'fixed\'\'\n\nThis functionality requires a post-commit hook to be installed as described in [wiki:TracRepositoryAdmin#ExplicitSync TracRepositoryAdmin], and enabling the optional commit updater components by adding the following line to the `[components]` section of your [wiki:TracIni#components-section trac.ini], or enabling the components in the \"Plugins\" admin panel.\n{{{\ntracopt.ticket.commit_updater.* = enabled\n}}}\nFor more information, see the documentation of the `CommitTicketUpdater` component in the \"Plugins\" admin panel.\n\n=== Using Trac ===\n\nOnce you have your Trac site up and running, you should be able to create tickets, view the timeline, browse your version control repository if configured, etc.\n\nKeep in mind that //anonymous// (not logged in) users can by default access only a few of the features, in particular they will have a read-only access to the resources. You will need to configure authentication and grant additional [wiki:TracPermissions permissions] to authenticated users to see the full set of features.\n\n\'\' Enjoy! \'\'\n\n[trac:TracTeam The Trac Team]\n\n----\nSee also: [trac:TracInstallPlatforms TracInstallPlatforms], TracGuide, TracUpgrade, TracPermissions\n',NULL,NULL),('TracInterfaceCustomization',1,1291894092000000,'trac','127.0.0.1','= Customizing the Trac Interface =\n[[TracGuideToc]]\n\n== Introduction ==\nThis page is meant to give users suggestions on how they can customize the look of Trac.  Topics on this page cover editing the HTML templates and CSS files, but not the program code itself.  The topics are intended to show users how they can modify the look of Trac to meet their specific needs.  Suggestions for changes to Trac\'s interface applicable to all users should be filed as tickets, not listed on this page.\n\n== Project Logo and Icon ==\nThe easiest parts of the Trac interface to customize are the logo and the site icon.  Both of these can be configured with settings in [wiki:TracIni trac.ini].\n\nThe logo or icon image should be put in a folder named \"htdocs\" in your project\'s environment folder.  (\'\'Note: in projects created with a Trac version prior to 0.9 you will need to create this folder\'\')\n\n \'\'Note: you can actually put the logo and icon anywhere on your server (as long as it\'s accessible through the web server), and use their absolute or server-relative URLs in the configuration.\'\'\n\nNow configure the appropriate section of your [wiki:TracIni trac.ini]:\n\n=== Logo ===\nChange the `src` setting to `site/` followed by the name of your image file.  The `width` and `height` settings should be modified to match your image\'s dimensions (the Trac chrome handler uses \"`site/`\" for files within the project directory `htdocs` and \"`common/`\" for the common ones).\n\n{{{\n[header_logo]\nsrc = site/my_logo.gif\nalt = My Project\nwidth = 300\nheight = 100\n}}}\n\n=== Icon ===\nIcons should be a 16x16 image in `.gif` or `.ico` format.  Change the `icon` setting to `site/` followed by the name of your icon file.  Icons will typically be displayed by your web browser next to the site\'s URL and in the `Bookmarks` menu.\n\n{{{\n[project]\nicon = site/my_icon.ico\n}}}\n\nNote though that this icon is ignored by Internet Explorer, which only accepts a file named ``favicon.ico`` at the root of the host. To make the project icon work in both IE and other browsers, you can store the icon in the document root of the host, and reference it from ``trac.ini`` as follows:\n\n{{{\n[project]\nicon = /favicon.ico\n}}}\n\n== Custom Navigation Entries ==\nThe new [mainnav] and [metanav] can now be used to customize the text and link used for the navigation items, or even to disable them (but not for adding new ones).\n\nIn the following example, we rename the link to the Wiki start \"Home\", and hide the \"Help/Guide\". We also make the \"View Tickets\" entry link to a specific report .\n{{{\n[mainnav]\nwiki.label = Home\ntickets.href = /report/24\n\n[metanav]\nhelp = disabled\n}}}\n\nSee also TracNavigation for a more detailed explanation of the mainnav and metanav terms.\n\n== Site Appearance == #SiteAppearance\n\nTrac is using [http://genshi.edgewall.org Genshi] as the templating engine. Documentation is yet to be written, in the meantime the following tip should work.\n\nSay you want to add a link to a custom stylesheet, and then your own\nheader and footer. Save the following content as \'site.html\' inside your projects templates directory (each Trac project can have their own site.html), e.g. {{{/path/to/env/templates/site.html}}}:\n\n{{{\n#!xml\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\n      xmlns:py=\"http://genshi.edgewall.org/\"\n      py:strip=\"\">\n\n  <!--! Add site-specific style sheet -->\n  <head py:match=\"head\" py:attrs=\"select(\'@*\')\">\n    ${select(\'*|comment()|text()\')}\n    <link rel=\"stylesheet\" type=\"text/css\"\n          href=\"${href.chrome(\'site/style.css\')}\" />\n  </head>\n\n  <body py:match=\"body\" py:attrs=\"select(\'@*\')\">\n    <!--! Add site-specific header -->\n    <div id=\"siteheader\">\n      <!--! Place your header content here... -->\n    </div>\n\n    ${select(\'*|text()\')}\n\n    <!--! Add site-specific footer -->\n    <div id=\"sitefooter\">\n      <!--! Place your footer content here... -->\n    </div>\n  </body>\n</html>\n}}}\n\nThose who are familiar with XSLT may notice that Genshi templates bear some similarities. However, there are some Trac specific features - for example \'\'\'${href.chrome(\'site/style.css\')}\'\'\' attribute references template placed into environment\'s \'\'htdocs/\'\'  In a similar fashion \'\'\'${chrome.htdocs_location}\'\'\' is used to specify common \'\'htdocs/\'\' directory from Trac installation.\n\nsite.html is one file to contain all your modifications. It usually works by the py:match (element of attribute), and it allows you to modify the page as it renders - the matches hook onto specific sections depending on what it tries to find\nand modify them. A site.html can contain any number of such py:match sections for whatever you need to modify. This is all [http://genshi.edgewall.org/ Genshi], so the docs on the exact syntax can be found there. \n\n\nExample snippet of adding introduction text to the new ticket form (hide when preview):\n\n{{{\n#!xml\n<form py:match=\"div[@id=\'content\' and @class=\'ticket\']/form\" py:attrs=\"select(\'@*\')\">\n  <py:if test=\"req.environ[\'PATH_INFO\'] == \'/newticket\' and (not \'preview\' in req.args)\">\n    <p>Please make sure to search for existing tickets before reporting a new one!</p>\n  </py:if>\n  ${select(\'*\')} \n</form>\n}}}\n\nThis example illustrates a technique of using \'\'\'`req.environ[\'PATH_INFO\']`\'\'\' to limit scope of changes to one view only. For instance, to make changes in site.html only for timeline and avoid modifying other sections - use  \'\'`req.environ[\'PATH_INFO\'] == \'/timeline\'`\'\' condition in <py:if> test.\n\nIf the environment is upgraded from 0.10 and a `site_newticket.cs` file already exists, it can actually be loaded by using a workaround - providing it contains no ClearSilver processing. In addition, as only one element can be imported, the content needs some sort of wrapper such as a `<div>` block or other similar parent container. The XInclude namespace must be specified to allow includes, but that can be moved to document root along with the others:\n{{{\n#!xml\n<form py:match=\"div[@id=\'content\' and @class=\'ticket\']/form\" py:attrs=\"select(\'@*\')\"\n        xmlns:xi=\"http://www.w3.org/2001/XInclude\">\n  <py:if test=\"req.environ[\'PATH_INFO\'] == \'/newticket\' and (not \'preview\' in req.args)\"> \n    <xi:include href=\"site_newticket.cs\"><xi:fallback /></xi:include>\n  </py:if>\n  ${select(\'*\')} \n</form>\n}}}\n\nAlso note that the `site.html` (despite its name) can be put in a common templates directory - see the `[inherit] templates_dir` option. This could provide easier maintainence (and a migration path from 0.10 for larger installations) as one new global `site.html` file can be made to include any existing header, footer and newticket snippets.\n\n== Project List == #ProjectList\n\nYou can use a custom Genshi template to display the list of projects if you are using Trac with multiple projects.  \n\nThe following is the basic template used by Trac to display a list of links to the projects.  For projects that could not be loaded it displays an error message. You can use this as a starting point for your own index template.\n\n{{{\n#!text/html\n<!DOCTYPE html\n    PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\n      xmlns:py=\"http://genshi.edgewall.org/\"\n      xmlns:xi=\"http://www.w3.org/2001/XInclude\">\n  <head>\n    <title>Available Projects</title>\n  </head>\n  <body>\n    <h1>Available Projects</h1>\n    <ul>\n      <li py:for=\"project in projects\" py:choose=\"\">\n        <a py:when=\"project.href\" href=\"$project.href\"\n           title=\"$project.description\">$project.name</a>\n        <py:otherwise>\n          <small>$project.name: <em>Error</em> <br /> ($project.description)</small>\n        </py:otherwise>\n      </li>\n    </ul>\n  </body>\n</html>\n}}}\n\nOnce you\'ve created your custom template you will need to configure the webserver to tell Trac where the template is located (pls verify ... not yet changed to 0.11):\n\nFor [wiki:TracFastCgi FastCGI]:\n{{{\nFastCgiConfig -initial-env TRAC_ENV_PARENT_DIR=/parent/dir/of/projects \\\n              -initial-env TRAC_ENV_INDEX_TEMPLATE=/path/to/template\n}}}\n\nFor [wiki:TracModPython mod_python]:\n{{{\nPythonOption TracEnvParentDir /parent/dir/of/projects\nPythonOption TracEnvIndexTemplate /path/to/template\n}}}\n\nFor [wiki:TracCgi CGI]:\n{{{\nSetEnv TRAC_ENV_INDEX_TEMPLATE /path/to/template\n}}}\n\nFor [wiki:TracStandalone], you\'ll need to set up the `TRAC_ENV_INDEX_TEMPLATE` environment variable in the shell used to launch tracd:\n - Unix\n   {{{\n#!sh\n$ export TRAC_ENV_INDEX_TEMPLATE=/path/to/template\n   }}}\n - Windows\n   {{{\n#!sh\n$ set TRAC_ENV_INDEX_TEMPLATE=/path/to/template\n   }}}\n\n== Project Templates ==\n\nThe appearance of each individual Trac environment (that is, instance of a project) can be customized independently of other projects, even those hosted by the same server. The recommended way is to use a `site.html` template (see [#SiteAppearance]) whenever possible. Using `site.html` means changes are made to the original templates as they are rendered, and you should not normally need to redo modifications whenever Trac is upgraded. If you do make a copy of `theme.html` or any other Trac template, you need to migrate your modifiations to the newer version - if not, new Trac features or bug fixes may not work as expected.\n\nWith that word of caution, any Trac template may be copied and customized. The default Trac templates are located inside the installed Trac egg (`/usr/lib/pythonVERSION/site-packages/Trac-VERSION.egg/trac/templates, .../trac/ticket/templates, .../trac/wiki/templates, ++`). The [#ProjectList] template file is called `index.html`, while the template responsible for main layout is called `theme.html`. Page assets such as images and CSS style sheets are located in the egg\'s `trac/htdocs` directory.\n\nHowever, do not edit templates or site resources inside the Trac egg - installing Trac again can completely delete your modifications. Instead use one of two alternatives:\n * For a modification to one project only, copy the template to project `templates` directory.\n * For a modification shared by several projects, copy the template to a shared location and have each project point to this location using the `[inherit] templates_dir =` trac.ini option.\n\nTrac resolves requests for a template by first looking inside the project, then in any inherited templates location, and finally inside the Trac egg.\n\nTrac caches templates in memory by default to improve performance. To apply a template you need to restart the server.\n----\nSee also TracGuide, TracIni\n',NULL,NULL),('TracInterfaceCustomization',2,1397068026267364,'trac','127.0.0.1','= Customizing the Trac Interface =\n[[TracGuideToc]]\n[[PageOutline]]\n\n== Introduction ==\nThis page is meant to give users suggestions on how they can customize the look of Trac.  Topics on this page cover editing the HTML templates and CSS files, but not the program code itself.  The topics are intended to show users how they can modify the look of Trac to meet their specific needs.  Suggestions for changes to Trac\'s interface applicable to all users should be filed as tickets, not listed on this page.\n\n== Project Logo and Icon ==\nThe easiest parts of the Trac interface to customize are the logo and the site icon.  Both of these can be configured with settings in [wiki:TracIni trac.ini].\n\nThe logo or icon image should be put in a folder named \"htdocs\" in your project\'s environment folder.  (\'\'Note: in projects created with a Trac version prior to 0.9 you will need to create this folder\'\')\n\n \'\'Note: you can actually put the logo and icon anywhere on your server (as long as it\'s accessible through the web server), and use their absolute or server-relative URLs in the configuration.\'\'\n\nNow configure the appropriate section of your [wiki:TracIni trac.ini]:\n\n=== Logo ===\nChange the `src` setting to `site/` followed by the name of your image file.  The `width` and `height` settings should be modified to match your image\'s dimensions (the Trac chrome handler uses \"`site/`\" for files within the project directory `htdocs`, and \"`common/`\" for the common `htdocs` directory belonging to a Trac installation). Note that \'site/\' is not a placeholder for your project name, it is the actual prefix that should be used (literally). For example, if your project is named \'sandbox\', and the image file is \'red_logo.gif\' then the \'src\' setting would be \'site/red_logo.gif\', not \'sandbox/red_logo.gif\'.\n\n{{{\n[header_logo]\nsrc = site/my_logo.gif\nalt = My Project\nwidth = 300\nheight = 100\n}}}\n\n=== Icon ===\nIcons should be a 32x32 image in `.gif` or `.ico` format.  Change the `icon` setting to `site/` followed by the name of your icon file.  Icons will typically be displayed by your web browser next to the site\'s URL and in the `Bookmarks` menu.\n\n{{{\n[project]\nicon = site/my_icon.ico\n}}}\n\nNote though that this icon is ignored by Internet Explorer, which only accepts a file named ``favicon.ico`` at the root of the host. To make the project icon work in both IE and other browsers, you can store the icon in the document root of the host, and reference it from ``trac.ini`` as follows:\n\n{{{\n[project]\nicon = /favicon.ico\n}}}\n\nShould your browser have issues with your favicon showing up in the address bar, you may put a \"?\" (less the quotation marks) after your favicon file extension. \n\n{{{\n[project]\nicon = /favicon.ico?\n}}}\n\n== Custom Navigation Entries ==\nThe new [mainnav] and [metanav] can now be used to customize the text and link used for the navigation items, or even to disable them (but not for adding new ones).\n\nIn the following example, we rename the link to the Wiki start \"Home\", and hide the \"!Help/Guide\". We also make the \"View Tickets\" entry link to a specific report .\n{{{\n[mainnav]\nwiki.label = Home\ntickets.href = /report/24\n\n[metanav]\nhelp = disabled\n}}}\n\nSee also TracNavigation for a more detailed explanation of the mainnav and metanav terms.\n\n== Site Appearance == #SiteAppearance\n\nTrac is using [http://genshi.edgewall.org Genshi] as the templating engine. Documentation is yet to be written, in the meantime the following tip should work.\n\nSay you want to add a link to a custom stylesheet, and then your own\nheader and footer. Save the following content as `site.html` inside your projects `templates/` directory (each Trac project can have their own `site.html`), e.g. {{{/path/to/env/templates/site.html}}}:\n\n{{{\n#!xml\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\n      xmlns:py=\"http://genshi.edgewall.org/\"\n      py:strip=\"\">\n\n  <!--! Add site-specific style sheet -->\n  <head py:match=\"head\" py:attrs=\"select(\'@*\')\">\n    ${select(\'*|comment()|text()\')}\n    <link rel=\"stylesheet\" type=\"text/css\"\n          href=\"${href.chrome(\'site/style.css\')}\" />\n  </head>\n\n  <body py:match=\"body\" py:attrs=\"select(\'@*\')\">\n    <!--! Add site-specific header -->\n    <div id=\"siteheader\">\n      <!--! Place your header content here... -->\n    </div>\n\n    ${select(\'*|text()\')}\n\n    <!--! Add site-specific footer -->\n    <div id=\"sitefooter\">\n      <!--! Place your footer content here... -->\n    </div>\n  </body>\n</html>\n}}}\n\nThose who are familiar with XSLT may notice that Genshi templates bear some similarities. However, there are some Trac specific features - for example `${href.chrome(\'site/style.css\')}` attribute references a CSS file placed into environment\'s `htdocs/` directory. In a similar fashion `${chrome.htdocs_location}` is used to specify the common `htdocs/` directory belonging to a Trac installation. That latter location can however be overriden using the [[TracIni#trac-config|[trac] htdocs_location]] configuration setting.\n\n`site.html` is one file to contain all your modifications. It usually works using the `py:match` directive (element or attribute), and it allows you to modify the page as it renders - the matches hook onto specific sections depending on what it tries to find\nand modify them.\nSee [http://groups.google.com/group/trac-users/browse_thread/thread/70487fb2c406c937/ this thread] for a detailed explanation of the above example `site.html`.\nA `site.html` can contain any number of such `py:match` sections for whatever you need to modify. This is all Genshi, so the [http://genshi.edgewall.org/wiki/Documentation/xml-templates.html docs on the exact syntax] can be found there.\n\n\nExample snippet of adding introduction text to the new ticket form (but not shown during preview):\n\n{{{#!xml\n<form py:match=\"div[@id=\'content\' and @class=\'ticket\']/form\" py:attrs=\"select(\'@*\')\">\n  <py:if test=\"req.environ[\'PATH_INFO\'] == \'/newticket\' and (not \'preview\' in req.args)\">\n    <p>Please make sure to search for existing tickets before reporting a new one!</p>\n  </py:if>\n  ${select(\'*\')} \n</form>\n}}}\n\nThis example illustrates a technique of using `req.environ[\'PATH_INFO\']` to limit scope of changes to one view only. For instance, to make changes in `site.html` only for timeline and avoid modifying other sections - use  `req.environ[\'PATH_INFO\'] == \'/timeline\'` condition in `<py:if>` test.\n\nMore examples snippets for `site.html` can be found at [trac:wiki:CookBook/SiteHtml CookBook/SiteHtml].\n\nExample snippets for `style.css` can be found at [trac:wiki:CookBook/SiteStyleCss CookBook/SiteStyleCss].\n\nIf the environment is upgraded from 0.10 and a `site_newticket.cs` file already exists, it can actually be loaded by using a workaround - providing it contains no ClearSilver processing. In addition, as only one element can be imported, the content needs some sort of wrapper such as a `<div>` block or other similar parent container. The XInclude namespace must be specified to allow includes, but that can be moved to document root along with the others:\n{{{\n#!xml\n<form py:match=\"div[@id=\'content\' and @class=\'ticket\']/form\" py:attrs=\"select(\'@*\')\"\n        xmlns:xi=\"http://www.w3.org/2001/XInclude\">\n  <py:if test=\"req.environ[\'PATH_INFO\'] == \'/newticket\' and (not \'preview\' in req.args)\"> \n    <xi:include href=\"site_newticket.cs\"><xi:fallback /></xi:include>\n  </py:if>\n  ${select(\'*\')} \n</form>\n}}}\n\nAlso note that the `site.html` (despite its name) can be put in a common templates directory - see the [[TracIni#inherit-section|[inherit] templates_dir]] option. This could provide easier maintainence (and a migration path from 0.10 for larger installations) as one new global `site.html` file can be made to include any existing header, footer and newticket snippets.\n\n== Project List == #ProjectList\n\nYou can use a custom Genshi template to display the list of projects if you are using Trac with multiple projects.  \n\nThe following is the basic template used by Trac to display a list of links to the projects.  For projects that could not be loaded it displays an error message. You can use this as a starting point for your own index template.\n\n{{{\n#!text/html\n<!DOCTYPE html\n    PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\n      xmlns:py=\"http://genshi.edgewall.org/\"\n      xmlns:xi=\"http://www.w3.org/2001/XInclude\">\n  <head>\n    <title>Available Projects</title>\n  </head>\n  <body>\n    <h1>Available Projects</h1>\n    <ul>\n      <li py:for=\"project in projects\" py:choose=\"\">\n        <a py:when=\"project.href\" href=\"$project.href\"\n           title=\"$project.description\">$project.name</a>\n        <py:otherwise>\n          <small>$project.name: <em>Error</em> <br /> ($project.description)</small>\n        </py:otherwise>\n      </li>\n    </ul>\n  </body>\n</html>\n}}}\n\nOnce you\'ve created your custom template you will need to configure the webserver to tell Trac where the template is located (pls verify ... not yet changed to 0.11):\n\nFor [wiki:TracModWSGI mod_wsgi]:\n{{{\nos.environ[\'TRAC_ENV_INDEX_TEMPLATE\'] = \'/path/to/template.html\'\n}}}\n\nFor [wiki:TracFastCgi FastCGI]:\n{{{\nFastCgiConfig -initial-env TRAC_ENV_PARENT_DIR=/parent/dir/of/projects \\\n              -initial-env TRAC_ENV_INDEX_TEMPLATE=/path/to/template\n}}}\n\nFor [wiki:TracModPython mod_python]:\n{{{\nPythonOption TracEnvParentDir /parent/dir/of/projects\nPythonOption TracEnvIndexTemplate /path/to/template\n}}}\n\nFor [wiki:TracCgi CGI]:\n{{{\nSetEnv TRAC_ENV_INDEX_TEMPLATE /path/to/template\n}}}\n\nFor [wiki:TracStandalone], you\'ll need to set up the `TRAC_ENV_INDEX_TEMPLATE` environment variable in the shell used to launch tracd:\n - Unix\n   {{{\n#!sh\n$ export TRAC_ENV_INDEX_TEMPLATE=/path/to/template\n   }}}\n - Windows\n   {{{\n#!sh\n$ set TRAC_ENV_INDEX_TEMPLATE=/path/to/template\n   }}}\n\n== Project Templates ==\n\nThe appearance of each individual Trac environment (that is, instance of a project) can be customized independently of other projects, even those hosted by the same server. The recommended way is to use a `site.html` template (see [#SiteAppearance]) whenever possible. Using `site.html` means changes are made to the original templates as they are rendered, and you should not normally need to redo modifications whenever Trac is upgraded. If you do make a copy of `theme.html` or any other Trac template, you need to migrate your modifiations to the newer version - if not, new Trac features or bug fixes may not work as expected.\n\nWith that word of caution, any Trac template may be copied and customized. The default Trac templates are located inside the installed Trac egg (`/usr/lib/pythonVERSION/site-packages/Trac-VERSION.egg/trac/templates, .../trac/ticket/templates, .../trac/wiki/templates, ++`). The [#ProjectList] template file is called `index.html`, while the template responsible for main layout is called `theme.html`. Page assets such as images and CSS style sheets are located in the egg\'s `trac/htdocs` directory.\n\nHowever, do not edit templates or site resources inside the Trac egg - installing Trac again can completely delete your modifications. Instead use one of two alternatives:\n * For a modification to one project only, copy the template to project `templates` directory.\n * For a modification shared by several projects, copy the template to a shared location and have each project point to this location using the `[inherit] templates_dir =` trac.ini option.\n\nTrac resolves requests for a template by first looking inside the project, then in any inherited templates location, and finally inside the Trac egg.\n\nTrac caches templates in memory by default to improve performance. To apply a template you need to restart the server.\n\n----\nSee also TracGuide, TracIni\n',NULL,NULL),('TracLinks',1,1291894092000000,'trac','127.0.0.1','= Trac Links =\n[[TracGuideToc]]\n\nTracLinks are a fundamental feature of Trac, because they allow easy hyperlinking between the various entities in the system—such as tickets, reports, changesets, Wiki pages, milestones, and source files—from anywhere WikiFormatting is used.\n\nTracLinks are generally of the form \'\'\'type:id\'\'\' (where \'\'id\'\' represents the\nnumber, name or path of the item) though some frequently used kinds of items\nalso have short-hand notations.\n\n== Where to use TracLinks ==\nYou can use TracLinks in:\n\n * Source code (Subversion) commit messages\n * Wiki pages\n * Full descriptions for tickets, reports and milestones\n\nand any other text fields explicitly marked as supporting WikiFormatting.\n\nSome examples:\n * Tickets: \'\'\'!#1\'\'\' or \'\'\'!ticket:1\'\'\'\n * Ticket comments: \'\'\'!comment:1:ticket:2\'\'\' \n * Reports: \'\'\'!{1}\'\'\' or \'\'\'!report:1\'\'\'\n * Changesets: \'\'\'!r1\'\'\', \'\'\'![1]\'\'\', \'\'\'!changeset:1\'\'\' or (restricted) \'\'\'![1/trunk]\'\'\', \'\'\'!changeset:1/trunk\'\'\'\n * Revision log: \'\'\'!r1:3\'\'\', \'\'\'![1:3]\'\'\' or \'\'\'!log:@1:3\'\'\', \'\'\'!log:trunk@1:3\'\'\', \'\'\'![2:5/trunk]\'\'\'\n * Diffs (requires [trac:milestone:0.10 0.10]): \'\'\'!diff:@1:3\'\'\', \'\'\'!diff:tags/trac-0.9.2/wiki-default//tags/trac-0.9.3/wiki-default\'\'\' or \'\'\'!diff:trunk/trac@3538//sandbox/vc-refactoring@3539\'\'\'\n * Wiki pages: \'\'\'!CamelCase\'\'\' or \'\'\'!wiki:CamelCase\'\'\'\n * Parent page: \'\'\'![..]\'\'\'\n * Milestones: \'\'\'!milestone:1.0\'\'\'\n * Attachment: \'\'\'!attachment:example.tgz\'\'\' (for current page attachment), \'\'\'!attachment:attachment.1073.diff:ticket:944\'\'\' \n(absolute path)\n * Files: \'\'\'!source:trunk/COPYING\'\'\'\n * A specific file revision: \'\'\'!source:/trunk/COPYING@200\'\'\'\n * A particular line of a specific file revision: \'\'\'!source:/trunk/COPYING@200#L25\'\'\'\nDisplay:\n * Tickets: #1 or ticket:1\n * Ticket comments: comment:1:ticket:2 \n * Reports: {1} or report:1\n * Changesets: r1, [1], changeset:1 or (restricted) [1/trunk], changeset:1/trunk\n * Revision log: r1:3, [1:3] or log:@1:3, log:trunk@1:3, [2:5/trunk]\n * Diffs (requires [milestone:0.10 0.10]): diff:@1:3, diff:tags/trac-0.9.2/wiki-default//tags/trac-0.9.3/wiki-default or diff:trunk/trac@3538//sandbox/vc-refactoring@3539\n * Wiki pages: CamelCase or wiki:CamelCase\n * Parent page: [..]\n * Milestones: milestone:1.0\n * Attachment: attachment:example.tgz (for current page attachment), attachment:attachment.1073.diff:ticket:944 \n(absolute path)\n * Files: source:trunk/COPYING\n * A specific file revision: source:/trunk/COPYING@200\n * A particular line of a specific file revision: source:/trunk/COPYING@200#L25\n\n\'\'\'Note:\'\'\' The wiki:CamelCase form is rarely used, but it can be convenient to refer to\npages whose names do not follow WikiPageNames rules, i.e., single words,\nnon-alphabetic characters, etc. See WikiPageNames for more about features specific\nto links to Wiki page names.\n\nTrac links using the full (non-shorthand) notation can also be given a custom\nlink title like this:\n\n{{{\n[ticket:1 This is a link to ticket number one].\n}}}\n\nDisplay: [ticket:1 This is a link to ticket number one].\n\nIf the title is omitted, only the id (the part after the colon) is displayed:\n\n{{{\n[ticket:1]\n}}}\n\nDisplay: [ticket:1]\n\n`wiki` is the default if the namespace part of a full link is omitted (\'\'since version 0.10\'\'):\n\n{{{\n[SandBox the sandbox]\n}}}\n\nDisplay: [SandBox the sandbox]\n\nTracLinks are a very simple idea, but actually allow quite a complex network of information. In practice, it\'s very intuitive and simple to use, and we\'ve found the \"link trail\" extremely helpful to better understand what\'s happening in a project or why a particular change was made.\n\n\n== Advanced use of TracLinks ==\n\n=== Relative links ===\n\nTo create a link to a specific anchor in a page, use \'#\':\n{{{\n [#Relativelinks relative links]\n}}}\nDisplays:\n  [#Relativelinks relative links]\n\nHint: when you move your mouse over the title of a section, a \'¶\' character will be displayed. This is a link to that specific section and you can use this to copy the `#...` part inside a relative link to an anchor.\n\nTo create a link to a [trac:SubWiki SubWiki]-page just use a \'/\':\n{{{\n WikiPage/SubWikiPage or ./SubWikiPage\n}}}\n\nTo link from a [trac:SubWiki SubWiki] page to a parent, simply use a \'..\':\n{{{\n  [..]\n}}}\n\nTo link from a [trac:SubWiki SubWiki] page to a sibling page, use a \'../\':\n{{{\n  [../Sibling see next sibling]\n}}}\n\n\'\'(Changed in 0.11)\'\' Note that in Trac 0.10, using e.g. `[../newticket]`  may have worked for linking to the /newticket top-level URL, but now in 0.11 it will stay in the wiki namespace and link to a sibling page. See [#Server-relativelinks] for the new syntax.\n\n=== InterWiki links ===\n\nOther prefixes can be defined freely and made to point to resources in other Web applications. The definition of those prefixes as well as the URLs of the corresponding Web applications is defined in a special Wiki page, the InterMapTxt page. Note that while this could be used to create links to other Trac environments, there\'s a more specialized way to register other Trac environments which offers greater flexibility.\n\n=== InterTrac links ===\n\nThis can be seen as a kind of InterWiki link specialized for targeting other Trac projects.\n\nAny type of Trac links could be written in one Trac environment and actually refer to resources present in another Trac environment, provided the Trac link is prefixed by the name of that other Trac environment followed by a colon. That other Trac environment must be registered, under its name or an alias. See InterTrac for details. \n\nA distinctive advantage of InterTrac links over InterWiki links is that the shorthand form of Trac links usually have a way to understand the InterTrac prefixes. For example, links to Trac tickets can be written #T234 (if T was set as an alias for Trac), links to Trac changesets can be written [trac 1508].\n\n=== Server-relative links ===\n\nIt is often useful to be able to link to objects in your project that\nhave no built-in Trac linking mechanism, such as static resources, `newticket`,\na shared `/register` page on the server, etc.\n\nTo link to resources inside the project, use either an absolute path from the project root, \nor a relative link from the URL of the current page (\'\'Changed in 0.11\'\'):\n\n{{{\n[/newticket Create a new ticket]\n[/ home]\n}}}\n\nDisplay: [/newticket Create a new ticket] [/ home]\n\nTo link to another location on the server (outside the project), use the \'//location\' link syntax (\'\'Changed in 0.11\'\'):\n\n{{{\n[//register Register Here]\n}}}\n\nDisplay: [//register Register Here]\n\n=== Quoting space in TracLinks ===\n\nImmediately after a TracLinks prefix, targets containing space characters should\nbe enclosed in a pair of quotes or double quotes.\nExamples:\n * !wiki:\"The whitespace convention\"\n * !attachment:\'the file.txt\' or\n * !attachment:\"the file.txt\" \n * !attachment:\"the file.txt:ticket:123\" \n\n=== Escaping Links ===\n\nTo prevent parsing of a !TracLink, you can escape it by preceding it with a \'!\' (exclamation mark).\n{{{\n !NoLinkHere.\n ![42] is not a link either.\n}}}\n\nDisplay:\n !NoLinkHere.\n ![42] is not a link either.\n\n\n=== Parameterized Trac links ===\n\nThe Trac links target Trac resources which have generally more than one way to be rendered, according to some extra parameters. For example, a Wiki page can accept a `version` or a `format` parameter, a report can make use of dynamic variables, etc.\n\nAny Trac links can support an arbitrary set of parameters, written in the same way as they would be for the corresponding URL. Some examples:\n - `wiki:WikiStart?format=txt`\n - `ticket:1?version=1`\n - `[/newticket?component=module1 create a ticket for module1]`\n\n\n== TracLinks Reference ==\nThe following sections describe the individual link types in detail, as well as several notes advanced usage of links.\n\n=== attachment: links ===\n\nThe link syntax for attachments is as follows:\n * !attachment:the_file.txt creates a link to the attachment the_file.txt of the current object\n * !attachment:the_file.txt:wiki:MyPage creates a link to the attachment the_file.txt of the !MyPage wiki page\n * !attachment:the_file.txt:ticket:753 creates a link to the attachment the_file.txt of the ticket 753\n\nNote that the older way, putting the filename at the end, is still supported: !attachment:ticket:753:the_file.txt.\n\nIf you\'d like to create a direct link to the content of the attached file instead of a link to the attachment page, simply use `raw-attachment:` instead of `attachment:`.\n\nThis can be useful for pointing directly to an HTML document, for example. Note that for this use case, you\'d have to allow the web browser to render the content by setting `[attachment] render_unsafe_content = yes` (see TracIni#attachment-section). Caveat: only do that in environments for which you\'re 100% confident you can trust the people who are able to attach files, as otherwise this would open up your site to [wikipedia:Cross-site_scripting cross-site scripting] attacks.\n\nSee also [#export:links].\n\n=== comment: links ===\n\nWhen you\'re inside a given tickets, you can simply write e.g. !comment:3 to link to the third change comment.\nIt\'s also possible to link to a comment of a specific ticket from anywhere using one of the following syntax:\n - !comment:3:ticket:123 \n - !ticket:123#comment:3 (note that you can\'t write !#123#!comment:3!)\n\n=== query: links ===\n\nSee TracQuery#UsingTracLinks and [#ticket:links].\n\n=== search: links ===\n\nSee TracSearch#SearchLinks \n\n=== ticket: links ===\n\nBesides the obvious `ticket:id` form, it is also possible to specify a list of tickets or even a range of tickets instead of the `id`. This generates a link to a custom query view containing this fixed set of tickets.\n\nExample: \n - `ticket:5000-6000`\n - `ticket:1,150`\n\n\'\'(since Trac 0.11)\'\'\n\n=== timeline: links ===\n\nLinks to the timeline can be created by specifying a date in the ISO:8601 format. The date can be optionally followed by a time specification. The time is interpreted as being UTC time, but alternatively you can specify your local time, followed by your timezone if you don\'t want to compute the UTC time.\n\nExamples:\n - `timeline:2008-01-29`\n - `timeline:2008-01-29T15:48`\n - `timeline:2008-01-29T15:48Z`\n - `timeline:2008-01-29T16:48+01`\n\n\'\'(since Trac 0.11)\'\'\n\n=== wiki: links ===\n\nSee WikiPageNames and [#QuotingspaceinTracLinks quoting space in TracLinks] above.\n\n=== Version Control related links ===\n==== source: links ====\n\nThe default behavior for a source:/some/path link is to open the directory browser \nif the path points to a directory and otherwise open the log view.\n\nIt\'s also possible to link directly to a specific revision of a file like this:\n - `source:/some/file@123` - link to the file\'s revision 123\n - `source:/some/file@head` - link explicitly to the latest revision of the file\n\nIf the revision is specified, one can even link to a specific line number:\n - `source:/some/file@123#L10`\n - `source:/tag/0.10@head#L10`\n\nFinally, one can also highlight an arbitrary set of lines:\n - `source:/some/file@123:10-20,100,103#L99` - highlight lines 10 to 20, and lines 100 and 103.\n\'\'(since 0.11)\'\'\n\n==== export: links ====\n\nTo force the download of a file in the repository, as opposed to displaying it in the browser, use the `export` link.  Several forms are available:\n * `export:/some/file` - get the HEAD revision of the specified file\n * `export:123:/some/file` - get revision 123 of the specified file\n * `export:/some/file@123` - get revision 123 of the specified file\n\nThis can be very useful for displaying XML or HTML documentation with correct stylesheets and images, in case that has been checked in into the repository. Note that for this use case, you\'d have to allow the web browser to render the content by setting `[browser] render_unsafe_content = yes` (see TracIni#browser-section), otherwise Trac will force the files to be downloaded as attachments for security concerns. \n\nIf the path is to a directory in the repository instead of a specific file, the source browser will be used to display the directory (identical to the result of `source:/some/dir`).\n\n==== log: links ====\n\nThe `log:` links are used to display revision ranges. In its simplest form, it can link to the latest revisions from the specified path, but it can also support displaying an arbitrary set of revisions.\n - `log:/` - the latest revisions starting at the root of the repository\n - `log:/trunk/tools` - the latest revisions in `trunk/tools`\n - `log:/trunk/tools@10000` - the revisions in `trunk/tools` starting from  revision 10000\n - `log:@20788,20791:20795` - list revision 20788 and the 20791 to 20795 revision range\n - `log:/trunk/tools@20788,20791:20795` - list revision 20788 and the revisions from the 20791 to 20795 range which affect the given path\n\nThere are short forms for revision ranges as well:\n - `[20788,20791:20795]`\n - `[20788,20791:20795/trunk/tools]`\n - `r20791:20795` (but not `r20788,20791:20795` nor `r20791:20795/trunk`)\n\nFinally, note that in all of the above, a revision range can be written indifferently `x:y` or `x-y`.\n\n----\nSee also: WikiFormatting, TracWiki, WikiPageNames, InterTrac, InterWiki\n \n',NULL,NULL),('TracLinks',2,1397068026265709,'trac','127.0.0.1','= Trac Links =\n[[TracGuideToc]]\n\nTracLinks are a fundamental feature of Trac, because they allow easy hyperlinking between the various entities in the system—such as tickets, reports, changesets, Wiki pages, milestones, and source files—from anywhere WikiFormatting is used.\n\nTracLinks are generally of the form \'\'\'type:id\'\'\' (where \'\'id\'\' represents the\nnumber, name or path of the item) though some frequently used kinds of items\nalso have short-hand notations.\n\n== Where to use TracLinks ==\nYou can use TracLinks in:\n\n * Source code (Subversion) commit messages\n * Wiki pages\n * Full descriptions for tickets, reports and milestones\n\nand any other text fields explicitly marked as supporting WikiFormatting.\n\n== Overview ==\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n Wiki pages :: `CamelCase` or `wiki:CamelCase`\n Parent page :: `[..]`\n Tickets :: `#1` or `ticket:1`\n Ticket comments :: `comment:1:ticket:2`\n Reports :: `{1}` or `report:1`\n Milestones :: `milestone:1.0`\n Attachment :: `attachment:example.tgz` (for current page attachment), `attachment:attachment.1073.diff:ticket:944` (absolute path)\n Changesets :: `r1`, `[1]`, `changeset:1` or (restricted) `[1/trunk]`, `changeset:1/trunk`\n Revision log :: `r1:3`, `[1:3]` or `log:@1:3`, `log:trunk@1:3`, `[2:5/trunk]`\n Diffs :: `diff:@1:3`, `diff:plugins/0.12/mercurial-plugin@9128:9953`,\n          `diff:tags/trac-0.9.2/wiki-default//tags/trac-0.9.3/wiki-default` \n          or `diff:trunk/trac@3538//sandbox/vc-refactoring@3539`\n Files :: `source:trunk/COPYING`, `source:/trunk/COPYING@200` (at version 200), `source:/trunk/COPYING@200#L25` (at version 200, line 25)\n}}}\n{{{#!td\n Wiki pages :: CamelCase or wiki:CamelCase\n Parent page :: [..]\n Tickets :: #1 or ticket:1\n Ticket comments :: comment:1:ticket:2 \n Reports :: {1} or report:1\n Milestones :: milestone:1.0\n Attachment :: attachment:example.tgz (for current page attachment), attachment:attachment.1073.diff:ticket:944 (absolute path)\n Changesets :: r1, [1], changeset:1 or (restricted) [1/trunk], changeset:1/trunk\n Revision log :: r1:3, [1:3] or log:@1:3, log:trunk@1:3, [2:5/trunk]\n Diffs :: diff:@1:3, diff:plugins/0.12/mercurial-plugin@9128:9953,\n          diff:tags/trac-0.9.2/wiki-default//tags/trac-0.9.3/wiki-default \n          or diff:trunk/trac@3538//sandbox/vc-refactoring@3539\n Files :: source:trunk/COPYING, source:/trunk/COPYING@200 (at version 200), source:/trunk/COPYING@200#L25 (at version 200, line 25)\n}}}\n\n\'\'\'Note:\'\'\' The wiki:CamelCase form is rarely used, but it can be convenient to refer to\npages whose names do not follow WikiPageNames rules, i.e., single words,\nnon-alphabetic characters, etc. See WikiPageNames for more about features specific\nto links to Wiki page names.\n\n\n{{{#!table class=\"\"\n|||| Trac links using the full (non-shorthand) notation can also be given a custom link title like this: ||\n{{{#!td\n{{{\n[ticket:1 This is a link to ticket number one] or\n[[ticket:1|This is another link to ticket number one]].\n}}}\n}}}\n{{{#!td\n[ticket:1 This is a link to ticket number one] or\n[[ticket:1|This is another link to ticket number one]].\n}}}\n|--------------------------------------------------------------------------------------\n|||| If the title is omitted, only the id (the part after the colon) is displayed:  ||\n{{{#!td\n{{{\n[ticket:1] or [[ticket:2]]\n}}}\n}}}\n{{{#!td\n[ticket:1] or [[ticket:2]]\n}}}\n|--------------------------------------------------------------------------------------\n|||| `wiki` is the default if the namespace part of a full link is omitted:  || \n{{{#!td\n{{{\n[SandBox the sandbox] or\n[[SandBox|the sandbox]]\n}}}\n}}}\n{{{#!td\n[SandBox the sandbox] or\n[[SandBox|the sandbox]]\n}}}\n|--------------------------------------------------------------------------------------\n|||| The short form \'\'realm:target\'\' can also be wrapped within a <...> pair, [[br]] which allow for arbitrary characters (i.e. anything but >)  ||\n{{{#!td\n{{{\n<wiki:Strange(page@!)>\n}}}\n}}}\n{{{#!td\n<wiki:Strange(page@!)>\n}}}\n}}}\n\nTracLinks are a very simple idea, but actually allow quite a complex network of information. In practice, it\'s very intuitive and simple to use, and we\'ve found the \"link trail\" extremely helpful to better understand what\'s happening in a project or why a particular change was made.\n\n\n== Advanced use of TracLinks ==\n\n=== Relative links ===\n\nTo create a link to a [trac:SubWiki SubWiki]-page just use a \'/\':\n{{{\n WikiPage/SubWikiPage or ./SubWikiPage\n}}}\n\nTo link from a [trac:SubWiki SubWiki] page to a parent, simply use a \'..\':\n{{{\n  [..] or [[..]]\n}}}\n  [..] or [[..]]\n\nTo link from a [trac:SubWiki SubWiki] page to a [=#sibling sibling] page, use a \'../\':\n{{{\n  [../Sibling see next sibling] or [[../Sibling|see next sibling]]\n}}}\n  [../Sibling see next sibling] or [[../Sibling|see next sibling]]\n\nBut in practice you often won\'t need to add the `../` prefix to link to a sibling page.\nFor resolving the location of a wiki link, it\'s the target page closest in the hierarchy\nto the page where the link is written which will be selected. So for example, within \na sub-hierarchy, a sibling page will be targeted in preference to a toplevel page.\nThis makes it easy to copy or move pages to a sub-hierarchy by [[WikiNewPage#renaming|renaming]] without having to adapt the links.\n\nIn order to link explicitly to a [=#toplevel toplevel] Wiki page,\nuse the `wiki:/` prefix.\nBe careful **not** to use the `/` prefix alone, as this corresponds to the\n[#Server-relativelinks] syntax and with such a link you will lack the `/wiki/` \npart in the resulting URL.\n\n\'\'(Changed in 0.11)\'\' Note that in Trac 0.10, using e.g. `[../newticket]`  may have worked for linking to the `/newticket` top-level URL, but since 0.11, such a link will stay in the wiki namespace and therefore link to a sibling page. \nSee [#Server-relativelinks] for the new syntax.\n\n=== Link anchors ===\n\nTo create a link to a specific anchor in a page, use \'#\':\n{{{\n [#Linkanchors Link anchors] or [[#Linkanchors|Link anchors]]\n}}}\n  [#Linkanchors Link anchors] or [[#Linkanchors|Link anchors]]\n\nHint: when you move your mouse over the title of a section, a \'¶\' character will be displayed. This is a link to that specific section and you can use this to copy the `#...` part inside a relative link to an anchor.\n\nTo create a link to the first or last occurrence of a term on a page, use a \'\'pseudo anchor\'\' starting with \'#/\' or \'#?\':\n{{{\n [#/Milestone first occurrence of Milestone] or\n [#?Milestone last occurrence of Milestone]\n}}}\n [#/Milestone first occurrence of Milestone] or\n [#?Milestone last occurrence of Milestone]\nThis will also highlight all other matches on the linked page. By default only case sensitive matches are considered. To include case insensitive matches append \'/i\':\n{{{\n [#/Milestone/i first occurrence of Milestone or milestone] or\n [#?Milestone/i last occurrence of Milestone or milestone]\n}}}\n [#/Milestone/i first occurrence of Milestone or milestone] or\n [#?Milestone/i last occurrence of Milestone or milestone]\n\n\'\'(since Trac 1.0)\'\'\n\nSuch anchors can be very useful for linking to specific lines in a file in the source browser:\n{{{\n [trac:source:tags/trac-0.12/trac/wiki/api.py#L127 Line 127] or\n [trac:source:tags/trac-0.12/trac/ticket/roadmap.py#L47 Line 47]\n}}}\n [trac:source:tags/trac-0.12/trac/wiki/api.py#L127 Line 127] or\n [trac:source:tags/trac-0.12/trac/ticket/roadmap.py#L47 Line 47]\n(Hint: The line numbers displayed in the source browser are links to anchors on the respective lines.)\n\nSince such links become outdated when the file changes, it can be useful to link using a \'#/\' pseudo anchor instead:\n{{{\n [trac:source:trunk/trac/wiki/api.py#/IWikiSyntaxProvider IWikiSyntaxProvider] or\n [trac:source:trunk/trac/env.py#/ISystemInfoProvider ISystemInfoProvider]\n}}}\n [trac:source:trunk/trac/wiki/api.py#/IWikiSyntaxProvider IWikiSyntaxProvider] or\n [trac:source:trunk/trac/env.py#/ISystemInfoProvider ISystemInfoProvider]\n\n=== InterWiki links ===\n\nOther prefixes can be defined freely and made to point to resources in other Web applications. The definition of those prefixes as well as the URLs of the corresponding Web applications is defined in a special Wiki page, the InterMapTxt page. Note that while this could be used to create links to other Trac environments, there\'s a more specialized way to register other Trac environments which offers greater flexibility.\n\n=== InterTrac links ===\n\nThis can be seen as a kind of InterWiki link specialized for targeting other Trac projects.\n\nAny type of Trac link can be written in one Trac environment and actually refer to resources in another Trac environment. All that is required is to prefix the Trac link with the name of the other Trac environment followed by a colon. The other Trac environment must be registered on the InterTrac page. \n\nA distinctive advantage of InterTrac links over InterWiki links is that the shorthand form of Trac links (e.g. `{}`, `r`, `#`) can also be used. For example if T was set as an alias for Trac, links to Trac tickets can be written #T234, links to Trac changesets can be written [trac 1508].\nSee InterTrac for the complete details. \n\n=== Server-relative links ===\n\nIt is often useful to be able to link to objects in your project that\nhave no built-in Trac linking mechanism, such as static resources, `newticket`,\na shared `/register` page on the server, etc.\n\nTo link to resources inside the project, use either an absolute path from the project root, \nor a relative link from the URL of the current page (\'\'Changed in 0.11\'\'):\n\n{{{\n[/newticket Create a new ticket] or [[//newticket|Create a new ticket]]\n[/ home] or [[/|home]]\n}}}\n\nDisplay: [/newticket Create a new ticket] or [[//newticket|Create a new ticket]]\n[/ home] or [[/|home]]\n\nTo link to another location on the server (possibly outside the project but on the same host), use the `//` prefix (\'\'Changed in 0.11\'\'):\n\n{{{\n[//register Register Here] or [[//register|Register Here]]\n}}}\n\nDisplay: [//register Register Here] or [[//register|Register Here]]\n\n=== Quoting space in TracLinks ===\n\nImmediately after a TracLinks prefix, targets containing space characters should\nbe enclosed in a pair of quotes or double quotes.\nExamples:\n * !wiki:\"The whitespace convention\"\n * !attachment:\'the file.txt\' or\n * !attachment:\"the file.txt\" \n * !attachment:\"the file.txt:ticket:123\" \n\nNote that by using [trac:WikiCreole] style links, it\'s quite natural to write links containing spaces:\n * ![[The whitespace convention]]\n * ![[attachment:the file.txt]]\n\n=== Escaping Links ===\n\nTo prevent parsing of a !TracLink, you can escape it by preceding it with a \'!\' (exclamation mark).\n{{{\n !NoLinkHere.\n ![42] is not a link either.\n}}}\n\nDisplay:\n !NoLinkHere.\n ![42] is not a link either.\n\n\n=== Parameterized Trac links ===\n\nMany Trac resources have more than one way to be rendered, depending on some extra parameters. For example, a Wiki page can accept a `version` or a `format` parameter, a report can make use of dynamic variables, etc.\n\nTrac links can support an arbitrary set of parameters, written in the same way as they would be for the corresponding URL. Some examples:\n - `wiki:WikiStart?format=txt`\n - `ticket:1?version=1`\n - `[/newticket?component=module1 create a ticket for module1]`\n - `[/newticket?summary=Add+short+description+here create a ticket with URL with spaces]`\n\n\n== TracLinks Reference ==\nThe following sections describe the individual link types in detail, as well as notes on advanced usage of links.\n\n=== attachment: links ===\n\nThe link syntax for attachments is as follows:\n * !attachment:the_file.txt creates a link to the attachment the_file.txt of the current object\n * !attachment:the_file.txt:wiki:MyPage creates a link to the attachment the_file.txt of the !MyPage wiki page\n * !attachment:the_file.txt:ticket:753 creates a link to the attachment the_file.txt of the ticket 753\n\nNote that the older way, putting the filename at the end, is still supported: !attachment:ticket:753:the_file.txt.\n\nIf you\'d like to create a direct link to the content of the attached file instead of a link to the attachment page, simply use `raw-attachment:` instead of `attachment:`.\n\nThis can be useful for pointing directly to an HTML document, for example. Note that for this use case, you\'d have to allow the web browser to render the content by setting `[attachment] render_unsafe_content = yes` (see TracIni#attachment-section). Caveat: only do that in environments for which you\'re 100% confident you can trust the people who are able to attach files, as otherwise this would open up your site to [wikipedia:Cross-site_scripting cross-site scripting] attacks.\n\nSee also [#export:links].\n\n=== comment: links ===\n\nWhen you\'re inside a given ticket, you can simply write e.g. !comment:3 to link to the third change comment.\nIt is possible to link to a comment of a specific ticket from anywhere using one of the following syntax:\n - `comment:3:ticket:123` \n - `ticket:123#comment:3` (note that you can\'t write `#123#!comment:3`!)\nIt is also possible to link to the ticket\'s description using one of the following syntax:\n - `comment:description` (within the ticket)\n - `comment:description:ticket:123`\n - `ticket:123#comment:description`\n\n=== htdocs: links ===\n\nUse `htdocs:path/to/file` to reference files in the `htdocs` directory of the Trac environment, the [TracEnvironment#DirectoryStructure web resource directory].\n\n=== query: links ===\n\nSee TracQuery#UsingTracLinks and [#ticket:links].\n\n=== search: links ===\n\nSee TracSearch#SearchLinks \n\n=== ticket: links ===\n \'\'alias:\'\' `bug:`\n\nBesides the obvious `ticket:id` form, it is also possible to specify a list of tickets or even a range of tickets instead of the `id`. This generates a link to a custom query view containing this fixed set of tickets.\n\nExample: \n - `ticket:5000-6000`\n - `ticket:1,150`\n\n\'\'(since Trac 0.11)\'\'\n\n=== timeline: links ===\n\nLinks to the timeline can be created by specifying a date in the ISO:8601 format. The date can be optionally followed by a time specification. The time is interpreted as being UTC time, but alternatively you can specify your local time, followed by your timezone if you don\'t want to compute the UTC time.\n\nExamples:\n - `timeline:2008-01-29`\n - `timeline:2008-01-29T15:48`\n - `timeline:2008-01-29T15:48Z`\n - `timeline:2008-01-29T16:48+01`\n\n\'\'(since Trac 0.11)\'\'\n\n=== wiki: links ===\n\nSee WikiPageNames and [#QuotingspaceinTracLinks quoting space in TracLinks] above. It is possible to create a link to a specific page revision using the syntax WikiStart@1.\n\n=== Version Control related links ===\n\nIt should be noted that multiple repository support works by creating a kind of virtual namespace for versioned files in which the toplevel folders correspond to the repository names. Therefore, in presence of multiple repositories, a \'\'/path\'\' specification in the syntax of links detailed below should start with the name of the repository. If omitted, the default repository is used. In case a toplevel folder of the default repository has the same name as a repository, the latter \"wins\". One can always access such folder by fully qualifying it (the default repository can be an alias of a named repository, or conversely, it is always possible to create an alias for the default repository, ask your Trac administrator).\n\nFor example, `source:/trunk/COPYING` targets the path `/trunk/COPYING` in the default repository, whereas `source:/projectA/trunk/COPYING` targets the path `/trunk/COPYING` in the repository named `projectA`. This can be the same file if `\'projectA\'` is an alias to the default repository or if `\'\'` (the default repository) is an alias to `\'projectA\'`.\n\n==== source: links ====\n \'\'aliases:\'\' `browser:`, `repos:`\n\nThe default behavior for a source:/some/path link is to open the browser in that directory directory \nif the path points to a directory or to show the latest content of the file.\n\nIt\'s also possible to link directly to a specific revision of a file like this:\n - `source:/some/file@123` - link to the file\'s revision 123\n - `source:/some/file@head` - link explicitly to the latest revision of the file\n\nIf the revision is specified, one can even link to a specific line number:\n - `source:/some/file@123#L10`\n - `source:/tag/0.10@head#L10`\n\nFinally, one can also highlight an arbitrary set of lines:\n - `source:/some/file@123:10-20,100,103#L99` - highlight lines 10 to 20, and lines 100 and 103.\n   \'\'(since 0.11)\'\'\n\nNote that in presence of multiple repositories, the name of the repository is simply integrated in the path you specify for `source:` (e.g. `source:reponame/trunk/README`). \'\'(since 0.12)\'\'\n\n==== export: links ====\n\nTo force the download of a file in the repository, as opposed to displaying it in the browser, use the `export` link.  Several forms are available:\n * `export:/some/file` - get the HEAD revision of the specified file\n * `export:123:/some/file` - get revision 123 of the specified file\n * `export:/some/file@123` - get revision 123 of the specified file\n\nThis can be very useful for displaying XML or HTML documentation with correct stylesheets and images, in case that has been checked in into the repository. Note that for this use case, you\'d have to allow the web browser to render the content by setting `[browser] render_unsafe_content = yes` (see TracIni#browser-section), otherwise Trac will force the files to be downloaded as attachments for security concerns. \n\nIf the path is to a directory in the repository instead of a specific file, the source browser will be used to display the directory (identical to the result of `source:/some/dir`).\n\n==== log: links ====\n\nThe `log:` links are used to display revision ranges. In its simplest form, it can link to the latest revisions of the specified path, but it can also support displaying an arbitrary set of revisions.\n - `log:/` - the latest revisions starting at the root of the repository\n - `log:/trunk/tools` - the latest revisions in `trunk/tools`\n - `log:/trunk/tools@10000` - the revisions in `trunk/tools` starting from  revision 10000\n - `log:@20788,20791:20795` - list revision 20788 and the revisions from 20791 to 20795 \n - `log:/trunk/tools@20788,20791:20795` - list revision 20788 and the revisions from 20791 to 20795 which affect the given path\n\nThere are short forms for revision ranges as well:\n - `[20788,20791:20795]`\n - `[20788,20791:20795/trunk/tools]`\n - `r20791:20795` (but not `r20788,20791:20795` nor `r20791:20795/trunk`)\n\nFinally, note that in all of the above, a revision range can be written either as `x:y` or `x-y`.\n\nIn the presence of multiple repositories, the name of the repository should be specified as the first part of the path, e.g. `log:repos/branches` or `[20-40/repos]`.\n\n----\nSee also: WikiFormatting, TracWiki, WikiPageNames, InterTrac, InterWiki\n \n',NULL,NULL),('TracLogging',1,1291894092000000,'trac','127.0.0.1','= Trac Logging =\n[[TracGuideToc]]\n\nTrac supports logging of system messages using the standard [http://docs.python.org/lib/module-logging.html logging module] that comes with Python.\n\nLogging is configured in the `[logging]` section in [wiki:TracIni#logging-section trac.ini].\n\n== Supported Logging Methods ==\n\nThe log method is set using the `log_type` option in [wiki:TracIni#logging-section trac.ini], which takes any of the following values:\n\n \'\'\'none\'\':: Suppress all log messages.\n \'\'\'file\'\'\':: Log messages to a file, specified with the `log_file` option in [wiki:TracIni#logging-section trac.ini]. \n \'\'\'stderr\'\'\':: Output all log entries to console ([wiki:TracStandalone tracd] only).\n \'\'\'syslog\'\'\':: (UNIX) Send all log messages to the local syslogd via named pipe `/dev/log`. By default, syslog will write them to the file /var/log/messages.\n \'\'\'eventlog\'\'\':: (Windows) Use the system\'s NT Event Log for Trac logging.\n\n== Log Levels ==\n\nThe verbosity level of logged messages can be set using the `log_level` option in [wiki:TracIni#logging-section trac.ini]. The log level defines the minimum level of urgency required for a message to be logged, and those levels are:\n\n \'\'\'CRITICAL\'\'\':: Log only the most critical (typically fatal) errors.\n \'\'\'ERROR\'\'\':: Log failures, bugs and errors. \n \'\'\'WARN\'\'\':: Log warnings, non-interrupting events.\n \'\'\'INFO\'\'\':: Diagnostic information, log information about all processing.\n \'\'\'DEBUG\'\'\':: Trace messages, profiling, etc.\n\nNote that starting with Trac 0.11.5 you can in addition enable logging of SQL statements, at debug level. This is turned off by default, as it\'s very verbose (set `[trac] debug_sql = yes` in TracIni to activate).\n\n== Log Format ==\n\nStarting with Trac 0.10.4 (see [trac:#2844 #2844]), it is possible to set the output format for log entries. This can be done through the `log_format` option in [wiki:TracIni#logging-section trac.ini]. The format is a string which can contain any of the [http://docs.python.org/lib/node422.html Python logging Formatter variables]. Additonally, the following Trac-specific variables can be used:\n \'\'\'$(basename)s\'\'\':: The last path component of the current environment.\n \'\'\'$(path)s\'\'\':: The absolute path for the current environment.\n \'\'\'$(project)s\'\'\':: The originating project\'s name.\n\nNote that variables are identified using a dollar sign (`$(...)s`) instead of percent sign (`%(...)s`).\n\nThe default format is:\n{{{\nlog_format = Trac[$(module)s] $(levelname)s: $(message)s\n}}}\n\nIn a multi-project environment where all logs are sent to the same place (e.g. `syslog`), it makes sense to add the project name. In this example we use `basename` since that can generally be used to identify a project:\n{{{\nlog_format = Trac[$(basename)s:$(module)s] $(levelname)s: $(message)s\n}}}\n\n----\nSee also: TracIni, TracGuide, TracEnvironment\n',NULL,NULL),('TracLogging',2,1397068026263767,'trac','127.0.0.1','= Trac Logging =\n[[TracGuideToc]]\n\nTrac supports logging of system messages using the standard [http://docs.python.org/library/logging.html logging module] that comes with Python.\n\nLogging is configured in the `[logging]` section in [wiki:TracIni#logging-section trac.ini].\n\n== Supported Logging Methods ==\n\nThe log method is set using the `log_type` option in [wiki:TracIni#logging-section trac.ini], which takes any of the following values:\n\n \'\'\'none\'\':: Suppress all log messages.\n \'\'\'file\'\'\':: Log messages to a file, specified with the `log_file` option in [wiki:TracIni#logging-section trac.ini]. Relative paths in `log_file` are resolved relative to the `log` directory of the environment.\n \'\'\'stderr\'\'\':: Output all log entries to console ([wiki:TracStandalone tracd] only).\n \'\'\'syslog\'\'\':: (UNIX) Send all log messages to the local syslogd via named pipe `/dev/log`. By default, syslog will write them to the file /var/log/messages.\n \'\'\'eventlog\'\'\':: (Windows) Use the system\'s NT Event Log for Trac logging.\n\n== Log Levels ==\n\nThe verbosity level of logged messages can be set using the `log_level` option in [wiki:TracIni#logging-section trac.ini]. The log level defines the minimum level of urgency required for a message to be logged, and those levels are:\n\n \'\'\'CRITICAL\'\'\':: Log only the most critical (typically fatal) errors.\n \'\'\'ERROR\'\'\':: Log failures, bugs and errors. \n \'\'\'WARN\'\'\':: Log warnings, non-interrupting events.\n \'\'\'INFO\'\'\':: Diagnostic information, log information about all processing.\n \'\'\'DEBUG\'\'\':: Trace messages, profiling, etc.\n\nNote that starting with Trac 0.11.5 you can in addition enable logging of SQL statements, at debug level. This is turned off by default, as it\'s very verbose (set `[trac] debug_sql = yes` in TracIni to activate).\n\n== Log Format ==\n\nStarting with Trac 0.10.4 (see [trac:#2844 #2844]), it is possible to set the output format for log entries. This can be done through the `log_format` option in [wiki:TracIni#logging-section trac.ini]. The format is a string which can contain any of the [http://docs.python.org/library/logging.html#logrecord-attributes Python logging Formatter variables]. Additonally, the following Trac-specific variables can be used:\n \'\'\'$(basename)s\'\'\':: The last path component of the current environment.\n \'\'\'$(path)s\'\'\':: The absolute path for the current environment.\n \'\'\'$(project)s\'\'\':: The originating project\'s name.\n\nNote that variables are identified using a dollar sign (`$(...)s`) instead of percent sign (`%(...)s`).\n\nThe default format is:\n{{{\nlog_format = Trac[$(module)s] $(levelname)s: $(message)s\n}}}\n\nIn a multi-project environment where all logs are sent to the same place (e.g. `syslog`), it makes sense to add the project name. In this example we use `basename` since that can generally be used to identify a project:\n{{{\nlog_format = Trac[$(basename)s:$(module)s] $(levelname)s: $(message)s\n}}}\n\n----\nSee also: TracIni, TracGuide, TracEnvironment',NULL,NULL),('TracModPython',1,1291894092000000,'trac','127.0.0.1','= Trac and mod_python =\n[[TracGuideToc]]\n\nTrac supports [http://www.modpython.org/ mod_python], which speeds up Trac\'s response times considerably, especially compared to [TracCgi CGI], and permits use of many Apache features not possible with [wiki:TracStandalone tracd]/mod_proxy.\n\nThese instructions are for Apache 2; if you are still using Apache 1.3, you may have some luck with [trac:wiki:TracModPython2.7 TracModPython2.7].\n\n== Simple configuration ==\n\nIf you just installed mod_python, you may have to add a line to load the module in the Apache configuration:\n{{{\nLoadModule python_module modules/mod_python.so\n}}}\n\n\'\'Note: The exact path to the module depends on how the HTTPD installation is laid out.\'\'\n\nOn Debian using apt-get\n{{{\napt-get install libapache2-mod-python libapache2-mod-python-doc\n}}}\n(Still on Debian) after you have installed mod_python, you must enable the modules in apache2 (equivalent of the above Load Module directive):\n{{{\na2enmod mod_python\n}}}\nOn Fedora use, using yum:\n{{{\nyum install mod_python\n}}}\nYou can test your mod_python installation by adding the following to your httpd.conf.  You should remove this when you are done testing for security reasons. Note: mod_python.testhandler is only available in mod_python 3.2+.\n{{{\n#!xml\n<Location /mpinfo>\n   SetHandler mod_python\n   PythonInterpreter main_interpreter\n   PythonHandler mod_python.testhandler\n</Location>\n}}}\n\nA simple setup of Trac on mod_python looks like this:\n{{{\n#!xml\n<Location /projects/myproject>\n   SetHandler mod_python\n   PythonInterpreter main_interpreter\n   PythonHandler trac.web.modpython_frontend \n   PythonOption TracEnv /var/trac/myproject\n   PythonOption TracUriRoot /projects/myproject\n</Location>\n}}}\n\nThe option \'\'\'`TracUriRoot`\'\'\' may or may not be necessary in your setup. Try your configuration without it; if the URLs produced by Trac look wrong, if Trac does not seem to recognize URLs correctly, or you get an odd \"No handler matched request to...\" error, add the \'\'\'`TracUriRoot`\'\'\' option.  You will notice that the `Location` and \'\'\'`TracUriRoot`\'\'\' have the same path.\n\nThe options available are\n{{{\n    # For a single project\n    PythonOption TracEnv /var/trac/myproject\n    # For multiple projects\n    PythonOption TracEnvParentDir /var/trac/myprojects\n    # For the index of multiple projects\n    PythonOption TracEnvIndexTemplate /srv/www/htdocs/trac/project_list_template.html\n    # A space delimitted list, with a \",\" between key and value pairs.\n    PythonOption TracTemplateVars key1,val1 key2,val2\n    # Useful to get the date in the wanted order\n    PythonOption TracLocale en_GB.UTF8\n    # See description above        \n    PythonOption TracUriRoot /projects/myproject\n}}}\n\n=== Python Egg Cache ===\n\nCompressed python eggs like Genshi are normally extracted into a directory named `.python-eggs` in the users home directory. Since apache\'s home usually is not writable an alternate egg cache directory can be specified like this:\n{{{\nPythonOption PYTHON_EGG_CACHE /var/trac/myprojects/egg-cache\n}}}\n\nor you can uncompress the Genshi egg to resolve problems extracting from it.\n=== Configuring Authentication ===\n\nCreating password files and configuring authentication works similar to the process for [wiki:TracCgi#AddingAuthentication CGI]:\n{{{\n#!xml\n<Location /projects/myproject/login>\n  AuthType Basic\n  AuthName \"myproject\"\n  AuthUserFile /var/trac/myproject/.htpasswd\n  Require valid-user\n</Location>\n}}}\n\nConfiguration for mod_ldap authentication in Apache is a bit tricky (httpd 2.2.x and OpenLDAP: slapd 2.3.19)\n\n1. You need to load the following modules in Apache httpd.conf\n{{{\nLoadModule ldap_module modules/mod_ldap.so\nLoadModule authnz_ldap_module modules/mod_authnz_ldap.so\n}}}\n\n2. Your httpd.conf also needs to look something like:\n\n{{{\n#!xml\n<Location /trac/>\n  SetHandler mod_python\n  PythonInterpreter main_interpreter\n  PythonHandler trac.web.modpython_frontend\n  PythonOption TracEnv /home/trac/\n  PythonOption TracUriRoot /trac/\n  Order deny,allow\n  Deny from all\n  Allow from 192.168.11.0/24\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthBasicProvider \"ldap\"\n  AuthLDAPURL \"ldap://127.0.0.1/dc=example,dc=co,dc=ke?uid?sub?(objectClass=inetOrgPerson)\"\n  authzldapauthoritative Off\n  require valid-user\n</Location>\n}}}\n\nOr the LDAP interface to a Microsoft Active Directory:\n\n{{{\n#!xml\n<Location /trac/>\n  SetHandler mod_python\n  PythonInterpreter main_interpreter\n  PythonHandler trac.web.modpython_frontend\n  PythonOption TracEnv /home/trac/\n  PythonOption TracUriRoot /trac/\n  Order deny,allow\n  Deny from all\n  Allow from 192.168.11.0/24\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthBasicProvider \"ldap\"\n  AuthLDAPURL \"ldap://adserver.company.com:3268/DC=company,DC=com?sAMAccountName?sub?(objectClass=user)\"\n  AuthLDAPBindDN       ldap-auth-user@company.com\n  AuthLDAPBindPassword \"the_password\"\n  authzldapauthoritative Off\n  # require valid-user\n  require ldap-group CN=Trac Users,CN=Users,DC=company,DC=com\n</Location>\n}}}\n\nNote 1: This is the case where the LDAP search will get around the multiple OUs, conecting to Global Catalog Server portion of AD (Notice the port is 3268, not the normal LDAP 389). The GCS is basically a \"flattened\" tree which allows searching for a user without knowing to which OU they belong.\n\nNote 2: Active Directory requires an authenticating user/password to access records (AuthLDAPBindDN and AuthLDAPBindPassword).\n\nNote 3: The directive \"require ldap-group ...\"  specifies an AD group whose members are allowed access.\n\n\n=== Setting the Python Egg Cache ===\n\nIf the Egg Cache isn\'t writeable by your Web server, you\'ll either have to change the permissions, or point Python to a location where Apache can write. This can manifest itself as a \'\'500 internal server error\'\' and/or a complaint in the syslog. \n\n{{{\n#!xml\n<Location /projects/myproject>\n  ...\n  PythonOption PYTHON_EGG_CACHE /tmp \n  ...\n</Location>\n}}}\n\n\n=== Setting the !PythonPath ===\n\nIf the Trac installation isn\'t installed in your Python path, you\'ll have to tell Apache where to find the Trac mod_python handler  using the `PythonPath` directive:\n{{{\n#!xml\n<Location /projects/myproject>\n  ...\n  PythonPath \"sys.path + [\'/path/to/trac\']\"\n  ...\n</Location>\n}}}\n\nBe careful about using the !PythonPath directive, and \'\'not\'\' `SetEnv PYTHONPATH`, as the latter won\'t work.\n\n== Setting up multiple projects ==\n\nThe Trac mod_python handler supports a configuration option similar to Subversion\'s `SvnParentPath`, called `TracEnvParentDir`:\n{{{\n#!xml\n<Location /projects>\n  SetHandler mod_python\n  PythonInterpreter main_interpreter\n  PythonHandler trac.web.modpython_frontend \n  PythonOption TracEnvParentDir /var/trac\n  PythonOption TracUriRoot /projects\n</Location>\n}}}\n\nWhen you request the `/projects` URL, you will get a listing of all subdirectories of the directory you set as `TracEnvParentDir` that look like Trac environment directories. Selecting any project in the list will bring you to the corresponding Trac environment.\n\nIf you don\'t want to have the subdirectory listing as your projects home page you can use a\n{{{\n#!xml\n<LocationMatch \"/.+/\">\n}}}\n\nThis will instruct Apache to use mod_python for all locations different from root while having the possibility of placing a custom home page for root in your !DocumentRoot folder.\n\nYou can also use the same authentication realm for all of the projects using a `<LocationMatch>` directive:\n{{{\n#!xml\n<LocationMatch \"/projects/[^/]+/login\">\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthUserFile /var/trac/.htpasswd\n  Require valid-user\n</LocationMatch>\n}}}\n\n== Virtual Host Configuration ==\n\nBelow is the sample configuration required to set up your trac as a virtual server (i.e. when you access it at the URLs like\n!http://trac.mycompany.com):\n\n{{{\n#!xml\n<VirtualHost * >\n    DocumentRoot /var/www/myproject\n    ServerName trac.mycompany.com\n    <Location />\n        SetHandler mod_python\n        PythonInterpreter main_interpreter\n        PythonHandler trac.web.modpython_frontend\n        PythonOption TracEnv /var/trac/myproject\n        PythonOption TracUriRoot /\n    </Location>\n    <Location /login>\n        AuthType Basic\n        AuthName \"MyCompany Trac Server\"\n        AuthUserFile /var/trac/myproject/.htpasswd\n        Require valid-user\n    </Location>\n</VirtualHost>\n}}}\n\nThis does not seem to work in all cases. What you can do if it does not:\n * Try using `<LocationMatch>` instead of `<Location>`\n * <Location /> may, in your server setup, refer to the complete host instead of simple the root of the server. This means that everything (including the login directory referenced below) will be sent to python and authentication does not work (i.e. you get the infamous Authentication information missing error). If this applies to you, try using a sub-directory for trac instead of the root (i.e. /web/ and /web/login instead of / and /login).\n * Depending on apache\'s `NameVirtualHost` configuration, you may need to use `<VirtualHost *:80>` instead of `<VirtualHost *>`.\n\nFor a virtual host that supports multiple projects replace \"`TracEnv`\" /var/trac/myproject with \"`TracEnvParentDir`\" /var/trac/\n\nNote: !DocumentRoot should not point to your Trac project env. As Asmodai wrote on #trac: \"suppose there\'s a webserver bug that allows disclosure of !DocumentRoot they could then leech the entire Trac environment\".\n\n== Troubleshooting ==\n\nIn general, if you get server error pages, you can either check the Apache error log, or enable the `PythonDebug` option:\n{{{\n#!xml\n<Location /projects/myproject>\n  ...\n  PythonDebug on\n</Location>\n}}}\n\nFor multiple projects, try restarting the server as well.\n\n=== Expat-related segmentation faults === #expat\n\nThis problem will most certainly hit you on Unix when using Python 2.4.\nIn Python 2.4, some version of Expat (an XML parser library written in C) is used, \nand if Apache is using another version, this results in segmentation faults.\nAs Trac 0.11 is using Genshi, which will indirectly use Expat, that problem\ncan now hit you even if everything was working fine before with Trac 0.10.\n\nSee Graham Dumpleton\'s detailed [http://www.dscpl.com.au/wiki/ModPython/Articles/ExpatCausingApacheCrash explanation and workarounds] for the issue.\n\n=== Form submission problems ===\n\nIf you\'re experiencing problems submitting some of the forms in Trac (a common problem is that you get redirected to the start page after submission), check whether your {{{DocumentRoot}}} contains a folder or file with the same path that you mapped the mod_python handler to. For some reason, mod_python gets confused when it is mapped to a location that also matches a static resource.\n\n=== Problem with virtual host configuration ===\n\nIf the <Location /> directive is used, setting the `DocumentRoot` may result in a \'\'403 (Forbidden)\'\' error. Either remove the `DocumentRoot` directive, or make sure that accessing the directory it points is allowed (in a corresponding `<Directory>` block).\n\nUsing <Location /> together with `SetHandler` resulted in having everything handled by mod_python, which leads to not being able download any CSS or images/icons. I used <Location /trac> `SetHandler None` </Location> to circumvent the problem, though I do not know if this is the most elegant solution.\n\n=== Using .htaccess ===\n\nAlthough it may seem trivial to rewrite the above configuration as a directory in your document root with a `.htaccess` file, this does not work. Apache will append a \"/\" to any Trac URLs, which interferes with its correct operation.\n\nIt may be possible to work around this with mod_rewrite, but I failed to get this working. In all, it is more hassle than it is worth. Stick to the provided instructions. :)\n\nA success story: For me it worked out-of-box, with following trivial config:\n{{{\nSetHandler mod_python\nPythonInterpreter main_interpreter\nPythonHandler trac.web.modpython_frontend \nPythonOption TracEnv /system/path/to/this/directory\nPythonOption TracUriRoot /path/on/apache\n\nAuthType Basic\nAuthName \"ProjectName\"\nAuthUserFile /path/to/.htpasswd\nRequire valid-user\n}}}\n\nThe `TracUriRoot` is obviously the path you need to enter to the browser to get to the trac (e.g. domain.tld/projects/trac)\n\n=== Additional .htaccess help ===\n\nIf you are using the .htaccess method you may have additional problems if your trac directory is inheriting .htaccess directives from another.  This may also help to add to your .htaccess file:\n\n{{{\n<IfModule mod_rewrite.c>\n  RewriteEngine Off\n</IfModule>\n}}}\n\n\n=== Win32 Issues ===\nIf you run trac with mod_python < 3.2 on Windows, uploading attachments will \'\'\'not\'\'\' work. This problem is resolved in mod_python 3.1.4 or later, so please upgrade mod_python to fix this.\n\n\n=== OS X issues ===\n\nWhen using mod_python on OS X you will not be able to restart Apache using `apachectl restart`. This is apparently fixed in mod_python 3.2, but there\'s also a patch available for earlier versions [http://www.dscpl.com.au/projects/vampire/patches.html here].\n\n=== SELinux issues ===\n\nIf Trac reports something like: \'\'Cannot get shared lock on db.lock\'\'\nThe security context on the repository may need to be set:\n\n{{{\nchcon -R -h -t httpd_sys_content_t PATH_TO_REPOSITORY\n}}}\n\nSee also [http://subversion.tigris.org/faq.html#reposperms]\n\n=== FreeBSD issues ===\nPay attention to the version of the installed mod_python and sqlite packages. Ports have both the new and old ones, but earlier versions of pysqlite and mod_python won\'t integrate as the former requires threaded support in python, and the latter requires a threadless install.\n\nIf you compiled and installed apache2, apache wouldn´t support threads (cause it doesn´t work very well on FreeBSD). You could force thread support when running ./configure for apache, using --enable-threads, but this isn´t recommendable.\nThe best option [http://modpython.org/pipermail/mod_python/2006-September/021983.html seems to be] adding to /usr/local/apache2/bin/ennvars the line \n\n{{{\nexport LD_PRELOAD=/usr/lib/libc_r.so\n}}}\n\n=== Subversion issues ===\n\nIf you get the following Trac Error `Unsupported version control system \"svn\"` only under mod_python, though it works well on the command-line and even with TracStandalone, chances are that you forgot to add the path to the Python bindings with the [TracModPython#ConfiguringPythonPath PythonPath] directive. (The better way is to add a link to the bindings in the Python `site-packages` directory, or create a `.pth` file in that directory.)\n\nIf this is not the case, it\'s possible that you\'re using Subversion libraries that are binary incompatible with the apache ones (an incompatibility of the `apr` libraries is usually the cause). In that case, you also won\'t be able to use the svn modules for Apache (`mod_dav_svn`).\n\nYou also need a recent version of `mod_python` in order to avoid a runtime error ({{{argument number 2: a \'apr_pool_t *\' is expected}}}) due to the default usage of multiple sub-interpreters. 3.2.8 \'\'should\'\' work, though it\'s probably better to use the workaround described in [trac:#3371 #3371], in order to force the use of the main interpreter:\n{{{\nPythonInterpreter main_interpreter\n}}}\nThis is anyway the recommended workaround for other well-known issues seen when using the Python bindings for Subversion within mod_python ([trac:#2611 #2611], [trac:#3455 #3455]). See in particular Graham Dumpleton\'s comment in [trac:comment:9:ticket:3455 #3455] explaining the issue.\n\n=== Page layout issues ===\n\nIf the formatting of the Trac pages look weird chances are that the style sheets governing the page layout are not handled properly by the web server. Try adding the following lines to your apache configuration:\n{{{\n#!xml\nAlias /myproject/css \"/usr/share/trac/htdocs/css\"\n<Location /myproject/css>\n    SetHandler None\n</Location>\n}}}\n\nNote: For the above configuration to have any effect it must be put after the configuration of your project root location, i.e. {{{<Location /myproject />}}}.\n\n=== HTTPS issues ===\n\nIf you want to run Trac fully under https you might find that it tries to redirect to plain http. In this case just add the following line to your apache configuration:\n{{{\n#!xml\n<VirtualHost * >\n    DocumentRoot /var/www/myproject\n    ServerName trac.mycompany.com\n    SetEnv HTTPS 1\n    ....\n</VirtualHost>\n}}}\n\n=== Fedora 7 Issues ===\nMake sure you install the \'python-sqlite2\' package as it seems to be required for TracModPython but not for tracd\n\n\n=== Segmentation fault with php5-mhash or other php5 modules ===\nYou may encounter segfaults (reported on debian etch) if php5-mhash module is installed. Try to remove it to see if this solves the problem. See debian bug report [http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=411487]\n\nSome people also have troubles when using php5 compiled with its own 3rd party libraries instead of system libraries. Check here [http://www.djangoproject.com/documentation/modpython/#if-you-get-a-segmentation-fault]\n\n----\nSee also:  TracGuide, TracInstall, [wiki:TracModWSGI ModWSGI], [wiki:TracFastCgi FastCGI], [wiki:TracModPython ModPython], [trac:TracNginxRecipe TracNginxRecipe]\n',NULL,NULL),('TracModPython',2,1397068026252614,'trac','127.0.0.1','= Trac and mod_python =\n[[TracGuideToc]]\n\nTrac supports [http://www.modpython.org/ mod_python], which speeds up Trac\'s response times considerably, especially compared to [TracCgi CGI], and permits use of many Apache features not possible with [wiki:TracStandalone tracd]/mod_proxy.\n\n{{{#!div class=\"important\"\n** A Word of Warning **\n\nAs of 16^th^ June 2010, the mod_python project is officially dead.  If you are considering using mod_python for a new installation, \'\'\'please don\'t\'\'\'!  There are known issues which will not be fixed and there are now better alternatives.  Check out the main TracInstall pages for your target version for more information.\n}}}\n\n\nThese instructions are for Apache 2; if you are still using Apache 1.3, you may have some luck with [trac:wiki:TracModPython2.7 TracModPython2.7], but you\'ll be totally on your own.\n\n[[PageOutline(2-3,Overview,inline)]]\n\n== Simple configuration: single project == #Simpleconfiguration\n\nIf you just installed mod_python, you may have to add a line to load the module in the Apache configuration:\n{{{\nLoadModule python_module modules/mod_python.so\n}}}\n\n\'\'Note: The exact path to the module depends on how the HTTPD installation is laid out.\'\'\n\nOn Debian using apt-get\n{{{\napt-get install libapache2-mod-python libapache2-mod-python-doc\n}}}\n(Still on Debian) after you have installed mod_python, you must enable the modules in apache2 (equivalent of the above Load Module directive):\n{{{\na2enmod python\n}}}\nOn Fedora use, using yum:\n{{{\nyum install mod_python\n}}}\nYou can test your mod_python installation by adding the following to your httpd.conf.  You should remove this when you are done testing for security reasons. Note: mod_python.testhandler is only available in mod_python 3.2+.\n{{{\n#!xml\n<Location /mpinfo>\n   SetHandler mod_python\n   PythonInterpreter main_interpreter\n   PythonHandler mod_python.testhandler\n   Order allow,deny\n   Allow from all\n</Location>\n}}}\n\nA simple setup of Trac on mod_python looks like this:\n{{{\n#!xml\n<Location /projects/myproject>\n   SetHandler mod_python\n   PythonInterpreter main_interpreter\n   PythonHandler trac.web.modpython_frontend \n   PythonOption TracEnv /var/trac/myproject\n   PythonOption TracUriRoot /projects/myproject\n   Order allow,deny\n   Allow from all\n</Location>\n}}}\n\nThe option \'\'\'`TracUriRoot`\'\'\' may or may not be necessary in your setup. Try your configuration without it; if the URLs produced by Trac look wrong, if Trac does not seem to recognize URLs correctly, or you get an odd \"No handler matched request to...\" error, add the \'\'\'`TracUriRoot`\'\'\' option.  You will notice that the `Location` and \'\'\'`TracUriRoot`\'\'\' have the same path.\n\nThe options available are\n{{{\n    # For a single project\n    PythonOption TracEnv /var/trac/myproject\n\n    # For multiple projects\n    PythonOption TracEnvParentDir /var/trac/myprojects\n\n    # For the index of multiple projects\n    PythonOption TracEnvIndexTemplate /srv/www/htdocs/trac/project_list_template.html\n\n    # A space delimitted list, with a \",\" between key and value pairs.\n    PythonOption TracTemplateVars key1,val1 key2,val2\n\n    # Useful to get the date in the wanted order\n    PythonOption TracLocale en_GB.UTF8\n\n    # See description above        \n    PythonOption TracUriRoot /projects/myproject\n}}}\n\n=== Python Egg Cache ===\n\nCompressed python eggs like Genshi are normally extracted into a directory named `.python-eggs` in the users home directory. Since apache\'s home usually is not writable an alternate egg cache directory can be specified like this:\n{{{\nPythonOption PYTHON_EGG_CACHE /var/trac/myprojects/egg-cache\n}}}\n\nor you can uncompress the Genshi egg to resolve problems extracting from it.\n\n=== Configuring Authentication ===\n\nSee corresponding section in the [wiki:TracModWSGI#ConfiguringAuthentication] page.\n\n\n== Advanced Configuration\n\n=== Setting the Python Egg Cache ===\n\nIf the Egg Cache isn\'t writeable by your Web server, you\'ll either have to change the permissions, or point Python to a location where Apache can write. This can manifest itself as a \'\'500 internal server error\'\' and/or a complaint in the syslog. \n\n{{{\n#!xml\n<Location /projects/myproject>\n  ...\n  PythonOption PYTHON_EGG_CACHE /tmp \n  ...\n</Location>\n}}}\n\n\n=== Setting the !PythonPath ===\n\nIf the Trac installation isn\'t installed in your Python path, you\'ll have to tell Apache where to find the Trac mod_python handler  using the `PythonPath` directive:\n{{{\n#!xml\n<Location /projects/myproject>\n  ...\n  PythonPath \"sys.path + [\'/path/to/trac\']\"\n  ...\n</Location>\n}}}\n\nBe careful about using the !PythonPath directive, and \'\'not\'\' `SetEnv PYTHONPATH`, as the latter won\'t work.\n\n=== Setting up multiple projects ===\n\nThe Trac mod_python handler supports a configuration option similar to Subversion\'s `SvnParentPath`, called `TracEnvParentDir`:\n{{{\n#!xml\n<Location /projects>\n  SetHandler mod_python\n  PythonInterpreter main_interpreter\n  PythonHandler trac.web.modpython_frontend \n  PythonOption TracEnvParentDir /var/trac\n  PythonOption TracUriRoot /projects\n</Location>\n}}}\n\nWhen you request the `/projects` URL, you will get a listing of all subdirectories of the directory you set as `TracEnvParentDir` that look like Trac environment directories. Selecting any project in the list will bring you to the corresponding Trac environment.\n\nIf you don\'t want to have the subdirectory listing as your projects home page you can use a\n{{{\n#!xml\n<LocationMatch \"/.+/\">\n}}}\n\nThis will instruct Apache to use mod_python for all locations different from root while having the possibility of placing a custom home page for root in your !DocumentRoot folder.\n\nYou can also use the same authentication realm for all of the projects using a `<LocationMatch>` directive:\n{{{\n#!xml\n<LocationMatch \"/projects/[^/]+/login\">\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthUserFile /var/trac/.htpasswd\n  Require valid-user\n</LocationMatch>\n}}}\n\n=== Virtual Host Configuration ===\n\nBelow is the sample configuration required to set up your trac as a virtual server (i.e. when you access it at the URLs like\n!http://trac.mycompany.com):\n\n{{{\n#!xml\n<VirtualHost * >\n    DocumentRoot /var/www/myproject\n    ServerName trac.mycompany.com\n    <Location />\n        SetHandler mod_python\n        PythonInterpreter main_interpreter\n        PythonHandler trac.web.modpython_frontend\n        PythonOption TracEnv /var/trac/myproject\n        PythonOption TracUriRoot /\n    </Location>\n    <Location /login>\n        AuthType Basic\n        AuthName \"MyCompany Trac Server\"\n        AuthUserFile /var/trac/myproject/.htpasswd\n        Require valid-user\n    </Location>\n</VirtualHost>\n}}}\n\nThis does not seem to work in all cases. What you can do if it does not:\n * Try using `<LocationMatch>` instead of `<Location>`\n * <Location /> may, in your server setup, refer to the complete host instead of simple the root of the server. This means that everything (including the login directory referenced below) will be sent to python and authentication does not work (i.e. you get the infamous Authentication information missing error). If this applies to you, try using a sub-directory for trac instead of the root (i.e. /web/ and /web/login instead of / and /login).\n * Depending on apache\'s `NameVirtualHost` configuration, you may need to use `<VirtualHost *:80>` instead of `<VirtualHost *>`.\n\nFor a virtual host that supports multiple projects replace \"`TracEnv`\" /var/trac/myproject with \"`TracEnvParentDir`\" /var/trac/\n\nNote: !DocumentRoot should not point to your Trac project env. As Asmodai wrote on #trac: \"suppose there\'s a webserver bug that allows disclosure of !DocumentRoot they could then leech the entire Trac environment\".\n\n== Troubleshooting ==\n\nIn general, if you get server error pages, you can either check the Apache error log, or enable the `PythonDebug` option:\n{{{\n#!xml\n<Location /projects/myproject>\n  ...\n  PythonDebug on\n</Location>\n}}}\n\nFor multiple projects, try restarting the server as well.\n\n=== Login Not Working ===\nIf you\'ve used `<Location />` directive, it will override any other directives, as well as `<Location /login>`.\nThe workaround is to use negation expression as follows (for multi project setups):\n{{{\n#!xml\n#this one for other pages\n<Location ~ \"/*(?!login)\">\n   SetHandler mod_python\n   PythonHandler trac.web.modpython_frontend\n   PythonOption TracEnvParentDir /projects\n   PythonOption TracUriRoot /\n\n</Location>\n#this one for login page\n<Location ~ \"/[^/]+/login\">\n   SetHandler mod_python\n   PythonHandler trac.web.modpython_frontend\n   PythonOption TracEnvParentDir /projects\n   PythonOption TracUriRoot /\n\n   #remove these if you don\'t want to force SSL\n   RewriteEngine On \n   RewriteCond %{HTTPS} off\n   RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}\n\n   AuthType Basic\n   AuthName \"Trac\"\n   AuthUserFile /projects/.htpasswd\n   Require valid-user\n</Location>\n}}}\n\n=== Expat-related segmentation faults === #expat\n\nThis problem will most certainly hit you on Unix when using Python 2.4.\nIn Python 2.4, some version of Expat (an XML parser library written in C) is used, \nand if Apache is using another version, this results in segmentation faults.\nAs Trac 0.11 is using Genshi, which will indirectly use Expat, that problem\ncan now hit you even if everything was working fine before with Trac 0.10.\n\nSee Graham Dumpleton\'s detailed [http://www.dscpl.com.au/wiki/ModPython/Articles/ExpatCausingApacheCrash explanation and workarounds] for the issue.\n\n=== Form submission problems ===\n\nIf you\'re experiencing problems submitting some of the forms in Trac (a common problem is that you get redirected to the start page after submission), check whether your {{{DocumentRoot}}} contains a folder or file with the same path that you mapped the mod_python handler to. For some reason, mod_python gets confused when it is mapped to a location that also matches a static resource.\n\n=== Problem with virtual host configuration ===\n\nIf the <Location /> directive is used, setting the `DocumentRoot` may result in a \'\'403 (Forbidden)\'\' error. Either remove the `DocumentRoot` directive, or make sure that accessing the directory it points is allowed (in a corresponding `<Directory>` block).\n\nUsing <Location /> together with `SetHandler` resulted in having everything handled by mod_python, which leads to not being able download any CSS or images/icons. I used <Location /trac> `SetHandler None` </Location> to circumvent the problem, though I do not know if this is the most elegant solution.\n\n=== Problem with zipped egg ===\n\nIt\'s possible that your version of mod_python will not import modules from zipped eggs. If you encounter an `ImportError: No module named trac` in your Apache logs but you think everything is where it should be, this might be your problem. Look in your site-packages directory; if the Trac module appears as a \'\'file\'\' rather than a \'\'directory\'\', then this might be your problem. To rectify, try installing Trac using the `--always-unzip` option, like this:\n\n{{{\neasy_install --always-unzip Trac-0.12b1.zip\n}}}\n\n=== Using .htaccess ===\n\nAlthough it may seem trivial to rewrite the above configuration as a directory in your document root with a `.htaccess` file, this does not work. Apache will append a \"/\" to any Trac URLs, which interferes with its correct operation.\n\nIt may be possible to work around this with mod_rewrite, but I failed to get this working. In all, it is more hassle than it is worth. Stick to the provided instructions. :)\n\nA success story: For me it worked out-of-box, with following trivial config:\n{{{#!xml\nSetHandler mod_python\nPythonInterpreter main_interpreter\nPythonHandler trac.web.modpython_frontend \nPythonOption TracEnv /system/path/to/this/directory\nPythonOption TracUriRoot /path/on/apache\n\nAuthType Basic\nAuthName \"ProjectName\"\nAuthUserFile /path/to/.htpasswd\nRequire valid-user\n}}}\n\nThe `TracUriRoot` is obviously the path you need to enter to the browser to get to the trac (e.g. domain.tld/projects/trac)\n\n=== Additional .htaccess help ===\n\nIf you are using the .htaccess method you may have additional problems if your trac directory is inheriting .htaccess directives from another.  This may also help to add to your .htaccess file:\n\n{{{\n<IfModule mod_rewrite.c>\n  RewriteEngine Off\n</IfModule>\n}}}\n\n=== Platform specific issues\n==== Win32 Issues ====\nIf you run trac with mod_python < 3.2 on Windows, uploading attachments will \'\'\'not\'\'\' work. This problem is resolved in mod_python 3.1.4 or later, so please upgrade mod_python to fix this.\n\n\n==== OS X issues ====\n\nWhen using mod_python on OS X you will not be able to restart Apache using `apachectl restart`. This is apparently fixed in mod_python 3.2, but there\'s also a patch available for earlier versions [http://www.dscpl.com.au/projects/vampire/patches.html here].\n\n==== SELinux issues ====\n\nIf Trac reports something like: \'\'Cannot get shared lock on db.lock\'\'\nThe security context on the repository may need to be set:\n\n{{{\nchcon -R -h -t httpd_sys_content_t PATH_TO_REPOSITORY\n}}}\n\nSee also [http://subversion.tigris.org/faq.html#reposperms]\n\n==== FreeBSD issues ====\nPay attention to the version of the installed mod_python and sqlite packages. Ports have both the new and old ones, but earlier versions of pysqlite and mod_python won\'t integrate as the former requires threaded support in python, and the latter requires a threadless install.\n\nIf you compiled and installed apache2, apache wouldn´t support threads (cause it doesn´t work very well on FreeBSD). You could force thread support when running ./configure for apache, using --enable-threads, but this isn´t recommendable.\nThe best option [http://modpython.org/pipermail/mod_python/2006-September/021983.html seems to be] adding to /usr/local/apache2/bin/ennvars the line \n\n{{{\nexport LD_PRELOAD=/usr/lib/libc_r.so\n}}}\n\n\n==== Fedora 7 Issues ====\nMake sure you install the \'python-sqlite2\' package as it seems to be required for TracModPython but not for tracd\n\n\n=== Subversion issues ===\n\nIf you get the following Trac Error `Unsupported version control system \"svn\"` only under mod_python, though it works well on the command-line and even with TracStandalone, chances are that you forgot to add the path to the Python bindings with the [TracModPython#ConfiguringPythonPath PythonPath] directive. (The better way is to add a link to the bindings in the Python `site-packages` directory, or create a `.pth` file in that directory.)\n\nIf this is not the case, it\'s possible that you\'re using Subversion libraries that are binary incompatible with the apache ones (an incompatibility of the `apr` libraries is usually the cause). In that case, you also won\'t be able to use the svn modules for Apache (`mod_dav_svn`).\n\nYou also need a recent version of `mod_python` in order to avoid a runtime error ({{{argument number 2: a \'apr_pool_t *\' is expected}}}) due to the default usage of multiple sub-interpreters. 3.2.8 \'\'should\'\' work, though it\'s probably better to use the workaround described in [trac:#3371 #3371], in order to force the use of the main interpreter:\n{{{\nPythonInterpreter main_interpreter\n}}}\nThis is anyway the recommended workaround for other well-known issues seen when using the Python bindings for Subversion within mod_python ([trac:#2611 #2611], [trac:#3455 #3455]). See in particular Graham Dumpleton\'s comment in [trac:comment:9:ticket:3455 #3455] explaining the issue.\n\n=== Page layout issues ===\n\nIf the formatting of the Trac pages look weird chances are that the style sheets governing the page layout are not handled properly by the web server. Try adding the following lines to your apache configuration:\n{{{\n#!xml\nAlias /myproject/css \"/usr/share/trac/htdocs/css\"\n<Location /myproject/css>\n    SetHandler None\n</Location>\n}}}\n\nNote: For the above configuration to have any effect it must be put after the configuration of your project root location, i.e. {{{<Location /myproject />}}}.\n\nAlso, setting `PythonOptimize On` seems to mess up the page headers and footers, in addition to hiding the documentation for macros and plugins (see #Trac8956). Considering how little effect the option has, it is probably a good idea to leave it `Off`.\n\n=== HTTPS issues ===\n\nIf you want to run Trac fully under https you might find that it tries to redirect to plain http. In this case just add the following line to your apache configuration:\n{{{\n#!xml\n<VirtualHost * >\n    DocumentRoot /var/www/myproject\n    ServerName trac.mycompany.com\n    SetEnv HTTPS 1\n    ....\n</VirtualHost>\n}}}\n\n\n=== Segmentation fault with php5-mhash or other php5 modules ===\nYou may encounter segfaults (reported on debian etch) if php5-mhash module is installed. Try to remove it to see if this solves the problem. See debian bug report [http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=411487]\n\nSome people also have troubles when using php5 compiled with its own 3rd party libraries instead of system libraries. Check here [http://www.djangoproject.com/documentation/modpython/#if-you-get-a-segmentation-fault]\n\n----\nSee also:  TracGuide, TracInstall, [wiki:TracModWSGI ModWSGI], [wiki:TracFastCgi FastCGI],  [trac:TracNginxRecipe TracNginxRecipe]\n',NULL,NULL),('TracModWSGI',1,1291894092000000,'trac','127.0.0.1','= Trac and mod_wsgi =\n\n\'\'\'Important note:\'\'\' \'\'Please use either version 1.6, 2.4 or later of `mod_wsgi`. Versions prior to 2.4 in the 2.X branch have problems with some Apache configurations that use WSGI file wrapper extension. This extension is used in Trac to serve up attachments and static media files such as style sheets. If you are affected by this problem attachments will appear to be empty and formatting of HTML pages will appear not to work due to style sheet files not loading properly. See mod_wsgi tickets [http://code.google.com/p/modwsgi/issues/detail?id=100 #100] and [http://code.google.com/p/modwsgi/issues/detail?id=132 #132].\'\'\n\n[http://code.google.com/p/modwsgi/ mod_wsgi] is an Apache module for running WSGI-compatible Python applications directly on top of Apache. The mod_wsgi adapter is written completely in C and provides significantly better performance than using existing WSGI adapters for mod_python or CGI.\n\nTrac can be run on top of mod_wsgi with the help of the following application script, which is just a Python file, though usually saved with a .wsgi extension). This file can be created using \'\'\'trac-admin <env> deploy <dir>\'\'\' command which automatically substitutes required paths.\n\n{{{\n#!python\nimport os\n\nos.environ[\'TRAC_ENV\'] = \'/usr/local/trac/mysite\'\nos.environ[\'PYTHON_EGG_CACHE\'] = \'/usr/local/trac/mysite/eggs\'\n\nimport trac.web.main\napplication = trac.web.main.dispatch_request\n}}}\n\nThe `TRAC_ENV` variable should naturally be the directory for your Trac environment (if you have several Trac environments in a directory, you can also use `TRAC_ENV_PARENT_DIR` instead), while the `PYTHON_EGG_CACHE` should be a directory where Python can temporarily extract Python eggs.\n\n\'\'\'Important note:\'\'\' If you\'re using multiple `.wsgi` files (for example one per Trac environment) you must \'\'not\'\' use `os.environ[\'TRAC_ENV\']` to set the path to the Trac environment. Using this method may lead to Trac delivering the content of another Trac environment. (The variable may be filled with the path of a previously viewed Trac environment.) To solve this problem, use the following `.wsgi` file instead:\n\n{{{\n#!python\nimport os\n\nos.environ[\'PYTHON_EGG_CACHE\'] = \'/usr/local/trac/mysite/eggs\'\n\nimport trac.web.main\ndef application(environ, start_response):\n  environ[\'trac.env_path\'] = \'/usr/local/trac/mysite\' \n  return trac.web.main.dispatch_request(environ, start_response)\n}}}\n\nFor clarity, you should give this file a `.wsgi` extension. You should probably put the file in it\'s own directory, since you will open up its directory to Apache. You can create a .wsgi files which handles all this for you by running the TracAdmin command `deploy`.\n\nIf you have installed trac and eggs in a path different from the standard one you should add that path by adding the following code on top of the wsgi script:\n\n{{{\n#!python\nimport site\nsite.addsitedir(\'/usr/local/trac/lib/python2.4/site-packages\')\n}}}\n\nChange it according to the path you installed the trac libs at.\n\nAfter you\'ve done preparing your wsgi-script, add the following to your httpd.conf.\n\n{{{\nWSGIScriptAlias /trac /usr/local/trac/mysite/apache/mysite.wsgi\n\n<Directory /usr/local/trac/mysite/apache>\n    WSGIApplicationGroup %{GLOBAL}\n    Order deny,allow\n    Allow from all\n</Directory>\n}}}\n\nHere, the script is in a subdirectory of the Trac environment. In order to let Apache run the script, access to the directory in which the script resides is opened up to all of Apache. Additionally, the {{{WSGIApplicationGroup}}} directive ensures that Trac is always run in the first Python interpreter created by mod_wsgi; this is necessary because the Subversion Python bindings, which are used by Trac, don\'t always work in other subinterpreters and may cause requests to hang or cause Apache to crash as a result. After adding this configuration, restart Apache, and then it should work.\n\nTo test the setup of Apache, mod_wsgi and Python itself (ie. without involving Trac and dependencies), this simple wsgi application can be used to make sure that requests gets served (use as only content in your .wsgi script):\n\n{{{\ndef application(environ, start_response):\n        start_response(\'200 OK\',[(\'Content-type\',\'text/html\')])\n        return [\'<html><body>Hello World!</body></html>\']\n}}}\n\nSee also the mod_wsgi [http://code.google.com/p/modwsgi/wiki/IntegrationWithTrac installation instructions] for Trac.\n\nFor troubleshooting tips, see the [TracModPython#Troubleshooting mod_python troubleshooting] section, as most Apache-related issues are quite similar, plus discussion of potential [http://code.google.com/p/modwsgi/wiki/ApplicationIssues application issues] when using mod_wsgi.\n\n\'\'Note: using mod_wsgi 2.5 and Python 2.6.1 gave an Internal Server Error on my system (Apache 2.2.11 and Trac 0.11.2.1). Upgrading to Python 2.6.2 (as suggested [http://www.mail-archive.com/modwsgi@googlegroups.com/msg01917.html here]) solved this for me[[BR]]-- Graham Shanks\'\'\n\n== Trac with PostgreSQL ==\n\nWhen using the mod_wsgi adapter with multiple Trac instances and PostgreSQL (or MySQL?) as a database back-end the server can get a lot of open database connections. (and thus PostgreSQL processes)\n\nA workable solution is to disabled connection pooling in Trac. This is done by setting poolable = False in trac.db.postgres_backend on the PostgreSQLConnection class.\n\nBut it\'s not necessary to edit the source of trac, the following lines in trac.wsgi will also work:\n\n{{{\nimport trac.db.postgres_backend\ntrac.db.postgres_backend.PostgreSQLConnection.poolable = False\n}}}\n\nNow Trac drops the connection after serving a page and the connection count on the database will be kept minimal.\n\n== Getting Trac to work nicely with SSPI and \'Require Group\' ==\nIf like me you\'ve set Trac up on Apache, Win32 and configured SSPI, but added a \'Require group\' option to your apache configuration, then the SSPIOmitDomain option is probably not working.  If its not working your usernames in trac are probably looking like \'DOMAIN\\user\' rather than \'user\'.\n\nThis WSGI script \'fixes\' things, hope it helps:\n{{{\nimport os\nimport trac.web.main\n\nos.environ[\'TRAC_ENV\'] = \'/usr/local/trac/mysite\'\nos.environ[\'PYTHON_EGG_CACHE\'] = \'/usr/local/trac/mysite/eggs\'\n\ndef application(environ, start_response):\n    if \"\\\\\" in environ[\'REMOTE_USER\']:\n        environ[\'REMOTE_USER\'] = environ[\'REMOTE_USER\'].split(\"\\\\\", 1)[1]\n    return trac.web.main.dispatch_request(environ, start_response)\n}}}\n----\nSee also:  TracGuide, TracInstall, [wiki:TracFastCgi FastCGI], [wiki:TracModPython ModPython], [trac:TracNginxRecipe TracNginxRecipe]\n',NULL,NULL),('TracModWSGI',2,1397068026274646,'trac','127.0.0.1','= Trac and mod_wsgi =\n\n\n[http://code.google.com/p/modwsgi/ mod_wsgi] is an Apache module for running WSGI-compatible Python applications directly on top of the Apache webserver. The mod_wsgi adapter is written completely in C and provides very good performances.\n\n[[PageOutline(2-3,Overview,inline)]]\n\n== The `trac.wsgi` script\n\nTrac can be run on top of mod_wsgi with the help of the following application script, which is just a Python file, though usually saved with a `.wsgi` extension). \n\n=== A very basic script\nIn its simplest form, the script could be:\n\n{{{#!python\nimport os\n\nos.environ[\'TRAC_ENV\'] = \'/usr/local/trac/mysite\'\nos.environ[\'PYTHON_EGG_CACHE\'] = \'/usr/local/trac/mysite/eggs\'\n\nimport trac.web.main\napplication = trac.web.main.dispatch_request\n}}}\n\nThe `TRAC_ENV` variable should naturally be the directory for your Trac environment (if you have several Trac environments in a directory, you can also use `TRAC_ENV_PARENT_DIR` instead), while the `PYTHON_EGG_CACHE` should be a directory where Python can temporarily extract Python eggs.\n\n=== A more elaborate script\n\nIf you\'re using multiple `.wsgi` files (for example one per Trac environment) you must \'\'not\'\' use `os.environ[\'TRAC_ENV\']` to set the path to the Trac environment. Using this method may lead to Trac delivering the content of another Trac environment, as the variable may be filled with the path of a previously viewed Trac environment. \n\nTo solve this problem, use the following `.wsgi` file instead:\n{{{#!python\nimport os\n\nos.environ[\'PYTHON_EGG_CACHE\'] = \'/usr/local/trac/mysite/eggs\'\n\nimport trac.web.main\ndef application(environ, start_response):\n  environ[\'trac.env_path\'] = \'/usr/local/trac/mysite\' \n  return trac.web.main.dispatch_request(environ, start_response)\n}}}\n\nFor clarity, you should give this file a `.wsgi` extension. You should probably put the file in its own directory, since you will expose it to Apache. \n\nIf you have installed Trac and eggs in a path different from the standard one you should add that path by adding the following code at the top of the wsgi script:\n\n{{{#!python\nimport site\nsite.addsitedir(\'/usr/local/trac/lib/python2.4/site-packages\')\n}}}\n\nChange it according to the path you installed the Trac libs at.\n\n=== Recommended `trac.wsgi` script\n\nA somewhat robust and generic version of this file can be created using the `trac-admin <env> deploy <dir>` command which automatically substitutes the required paths (see TracInstall#cgi-bin).\n\n\n== Mapping requests to the script\n\nAfter you\'ve done preparing your .wsgi script, add the following to your Apache configuration file (`httpd.conf` for example).\n\n{{{\nWSGIScriptAlias /trac /usr/local/trac/mysite/apache/mysite.wsgi\n\n<Directory /usr/local/trac/mysite/apache>\n    WSGIApplicationGroup %{GLOBAL}\n    Order deny,allow\n    Allow from all\n</Directory>\n}}}\n\nHere, the script is in a subdirectory of the Trac environment.\n\nIf you followed the directions [http://trac.edgewall.org/wiki/TracInstall#cgi-bin Generating the Trac cgi-bin directory], your Apache configuration file should look like following:\n\n{{{\nWSGIScriptAlias /trac /usr/share/trac/cgi-bin/trac.wsgi\n\n<Directory /usr/share/trac/cgi-bin>\n    WSGIApplicationGroup %{GLOBAL}\n    Order deny,allow\n    Allow from all\n</Directory>\n}}}\n\nIn order to let Apache run the script, access to the directory in which the script resides is opened up to all of Apache. Additionally, the `WSGIApplicationGroup` directive ensures that Trac is always run in the first Python interpreter created by mod_wsgi; this is necessary because the Subversion Python bindings, which are used by Trac, don\'t always work in other sub-interpreters and may cause requests to hang or cause Apache to crash as a result. After adding this configuration, restart Apache, and then it should work.\n\nTo test the setup of Apache, mod_wsgi and Python itself (ie. without involving Trac and dependencies), this simple wsgi application can be used to make sure that requests gets served (use as only content in your `.wsgi` script):\n\n{{{#!python\ndef application(environ, start_response):\n        start_response(\'200 OK\',[(\'Content-type\',\'text/html\')])\n        return [\'<html><body>Hello World!</body></html>\']\n}}}\n\nFor more information about using the mod_wsgi specific directives, see the [http://code.google.com/p/modwsgi/wiki/ mod_wsgi\'s wiki] and more specifically the [http://code.google.com/p/modwsgi/wiki/IntegrationWithTrac IntegrationWithTrac] page.\n\n\n== Configuring Authentication\n\nWe describe in the the following sections different methods for setting up authentication.\n\nSee also [http://httpd.apache.org/docs/2.2/howto/auth.html Authentication, Authorization and Access Control] in the Apache guide.\n\n=== Using Basic Authentication ===\n\nThe simplest way to enable authentication with Apache is to create a password file. Use the `htpasswd` program to create the password file:\n{{{\n$ htpasswd -c /somewhere/trac.htpasswd admin\nNew password: <type password>\nRe-type new password: <type password again>\nAdding password for user admin\n}}}\n\nAfter the first user, you dont need the \"-c\" option anymore:\n{{{\n$ htpasswd /somewhere/trac.htpasswd john\nNew password: <type password>\nRe-type new password: <type password again>\nAdding password for user john\n}}}\n\n  \'\'See the man page for `htpasswd` for full documentation.\'\'\n\nAfter you\'ve created the users, you can set their permissions using TracPermissions.\n\nNow, you\'ll need to enable authentication against the password file in the Apache configuration:\n{{{\n<Location \"/trac/login\">\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthUserFile /somewhere/trac.htpasswd\n  Require valid-user\n</Location>\n}}}\n\nIf you\'re hosting multiple projects you can use the same password file for all of them:\n{{{\n<LocationMatch \"/trac/[^/]+/login\">\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthUserFile /somewhere/trac.htpasswd\n  Require valid-user\n</LocationMatch>\n}}}\nNote that neither a file nor a directory named \'login\' needs to exist.[[BR]]\nSee also the [http://httpd.apache.org/docs/2.2/mod/mod_auth_basic.html mod_auth_basic] documentation.\n\n=== Using Digest Authentication ===\n\nFor better security, it is recommended that you either enable SSL or at least use the “digest” authentication scheme instead of “Basic”. \n\nYou\'ll have to create your `.htpasswd` file with the `htdigest` command instead of `htpasswd`, as follows:\n{{{\n# htdigest -c /somewhere/trac.htpasswd trac admin\n}}}\n\nThe \"trac\" parameter above is the \"realm\", and will have to be reused in the Apache configuration in the !AuthName directive:\n\n{{{\n<Location \"/trac/login\">\n\n    AuthType Digest\n    AuthName \"trac\"\n    AuthDigestDomain /trac\n    AuthUserFile /somewhere/trac.htpasswd\n    Require valid-user\n</Location>\n}}}\n\nFor multiple environments, you can use the same `LocationMatch` as described with the previous method.\n\nDon\'t forget to activate the mod_auth_digest. For example, on a Debian 4.0r1 (etch) system:\n{{{\n    LoadModule auth_digest_module /usr/lib/apache2/modules/mod_auth_digest.so\n}}}\n\n\nSee also the [http://httpd.apache.org/docs/2.2/mod/mod_auth_digest.html mod_auth_digest] documentation.\n\n=== Using LDAP Authentication \n\nConfiguration for [http://httpd.apache.org/docs/2.2/mod/mod_ldap.html mod_ldap] authentication in Apache is a bit tricky (httpd 2.2.x and OpenLDAP: slapd 2.3.19)\n\n1. You need to load the following modules in Apache httpd.conf\n{{{\nLoadModule ldap_module modules/mod_ldap.so\nLoadModule authnz_ldap_module modules/mod_authnz_ldap.so\n}}}\n\n2. Your httpd.conf also needs to look something like:\n\n{{{\n<Location /trac/>\n  # (if you\'re using it, mod_python specific settings go here)\n  Order deny,allow\n  Deny from all\n  Allow from 192.168.11.0/24\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthBasicProvider \"ldap\"\n  AuthLDAPURL \"ldap://127.0.0.1/dc=example,dc=co,dc=ke?uid?sub?(objectClass=inetOrgPerson)\"\n  authzldapauthoritative Off\n  Require valid-user\n</Location>\n}}}\n\n\n3. You can use the LDAP interface as a way to authenticate to a Microsoft Active Directory:\n\n\nUse the following as your LDAP URL:\n{{{\n    AuthLDAPURL \"ldap://directory.example.com:3268/DC=example,DC=com?sAMAccountName?sub?(objectClass=user)\"\n}}}\n\nYou will also need to provide an account for Apache to use when checking\ncredentials. As this password will be listed in plaintext in the\nconfig, you should be sure to use an account specifically for this task:\n{{{\n    AuthLDAPBindDN ldap-auth-user@example.com\n    AuthLDAPBindPassword \"password\"\n}}}\n\nThe whole section looks like:\n{{{\n<Location /trac/>\n  # (if you\'re using it, mod_python specific settings go here)\n  Order deny,allow\n  Deny from all\n  Allow from 192.168.11.0/24\n  AuthType Basic\n  AuthName \"Trac\"\n  AuthBasicProvider \"ldap\"\n  AuthLDAPURL \"ldap://adserver.company.com:3268/DC=company,DC=com?sAMAccountName?sub?(objectClass=user)\"\n  AuthLDAPBindDN       ldap-auth-user@company.com\n  AuthLDAPBindPassword \"the_password\"\n  authzldapauthoritative Off\n  # require valid-user\n  require ldap-group CN=Trac Users,CN=Users,DC=company,DC=com\n</Location>\n}}}\n\nNote 1: This is the case where the LDAP search will get around the multiple OUs, conecting to Global Catalog Server portion of AD (Notice the port is 3268, not the normal LDAP 389). The GCS is basically a \"flattened\" tree which allows searching for a user without knowing to which OU they belong.\n\nNote 2: You can also require the user be a member of a certain LDAP group, instead of\njust having a valid login:\n{{{\n    Require ldap-group CN=Trac Users,CN=Users,DC=example,DC=com\n}}}\n\nSee also:\n  - [http://httpd.apache.org/docs/2.2/mod/mod_authnz_ldap.html mod_authnz_ldap], documentation for mod_authnz_ldap\n    \n - [http://httpd.apache.org/docs/2.2/mod/mod_ldap.html mod_ldap], documentation for mod_ldap, which provides connection pooling and a shared cache.\n - [http://trac-hacks.org/wiki/LdapPlugin TracHacks:LdapPlugin] for storing TracPermissions in LDAP.\n\n=== Using SSPI Authentication\n\nIf you are using Apache on Windows, you can use mod_auth_sspi to provide\nsingle-sign-on. Download the module from the !SourceForge [http://sourceforge.net/projects/mod-auth-sspi/ mod-auth-sspi project] and then add the\nfollowing to your !VirtualHost:\n{{{\n    <Location /trac/login>\n        AuthType SSPI\n        AuthName \"Trac Login\"\n        SSPIAuth On\n        SSPIAuthoritative On\n        SSPIDomain MyLocalDomain\n        SSPIOfferBasic On\n        SSPIOmitDomain Off\n        SSPIBasicPreferred On\n        Require valid-user\n    </Location>\n}}}\n\nUsing the above, usernames in Trac will be of the form `DOMAIN\\username`, so\nyou may have to re-add permissions and such. If you do not want the domain to\nbe part of the username, set `SSPIOmitDomain On` instead.\n\nSome common problems with SSPI authentication: [trac:#1055], [trac:#1168] and [trac:#3338].\n\nSee also [trac:TracOnWindows/Advanced].\n\n=== Using Apache authentication with the Account Manager plugin\'s Login form ===\n\nTo begin with, see the basic instructions for using the Account Manager plugin\'s [http://trac-hacks.org/wiki/AccountManagerPlugin/Modules#LoginModule Login module] and its [http://trac-hacks.org/wiki/AccountManagerPlugin/AuthStores#HttpAuthStore HttpAuthStore authentication module].\n\n\'\'\'Note:\'\'\' If is difficult to get !HttpAuthStore to work with WSGI when using any Account Manager version prior to acct_mgr-0.4. Upgrading is recommended.\n\nHere is an example (from the !HttpAuthStore link) using acct_mgr-0.4 for hosting a single project:\n{{{\n[components]\n; be sure to enable the component\nacct_mgr.http.HttpAuthStore = enabled\n\n[account-manager]\n; configure the plugin to use a page that is secured with http authentication\nauthentication_url = /authFile\npassword_store = HttpAuthStore\n}}}\nThis will generally be matched with an Apache config like:\n{{{\n<Location /authFile>\n   …HTTP authentication configuration…\n   Require valid-user\n</Location>\n}}}\nNote that \'\'\'authFile\'\'\' need not exist. See the !HttpAuthStore link above for examples where multiple Trac projects are hosted on a server.\n\n=== Example: Apache/mod_wsgi with Basic Authentication, Trac being at the root of a virtual host\n\nPer the mod_wsgi documentation linked to above, here is an example Apache configuration that a) serves the Trac instance from a virtualhost subdomain and b) uses Apache basic authentication for Trac authentication.\n\n\nIf you want your Trac to be served from e.g. !http://trac.my-proj.my-site.org, then from the folder e.g. `/home/trac-for-my-proj`, if you used the command `trac-admin the-env initenv` to create a folder `the-env`, and you used `trac-admin the-env deploy the-deploy` to create a folder `the-deploy`, then first:\n\nCreate the htpasswd file:\n{{{\ncd /home/trac-for-my-proj/the-env\nhtpasswd -c htpasswd firstuser\n### and add more users to it as needed:\nhtpasswd htpasswd seconduser\n}}}\n(keep the file above your document root for security reasons)\n\nCreate this file e.g. (ubuntu) `/etc/apache2/sites-enabled/trac.my-proj.my-site.org.conf` with the following contents:\n\n{{{\n<Directory /home/trac-for-my-proj/the-deploy/cgi-bin/trac.wsgi>\n  WSGIApplicationGroup %{GLOBAL}\n  Order deny,allow\n  Allow from all\n</Directory>\n\n<VirtualHost *:80>\n  ServerName trac.my-proj.my-site.org\n  DocumentRoot /home/trac-for-my-proj/the-env/htdocs/\n  WSGIScriptAlias / /home/trac-for-my-proj/the-deploy/cgi-bin/trac.wsgi\n  <Location \'/\'>\n    AuthType Basic\n    AuthName \"Trac\"\n    AuthUserFile /home/trac-for-my-proj/the-env/htpasswd\n    Require valid-user\n  </Location>\n</VirtualHost>\n\n}}}\n\nNote: for subdomains to work you would probably also need to alter `/etc/hosts` and add A-Records to your host\'s DNS.\n\n\n== Troubleshooting\n\n=== Use a recent version\n\nPlease use either version 1.6, 2.4 or later of `mod_wsgi`. Versions prior to 2.4 in the 2.X branch have problems with some Apache configurations that use WSGI file wrapper extension. This extension is used in Trac to serve up attachments and static media files such as style sheets. If you are affected by this problem attachments will appear to be empty and formatting of HTML pages will appear not to work due to style sheet files not loading properly. Another frequent symptom is that binary attachment downloads are truncated. See mod_wsgi tickets [http://code.google.com/p/modwsgi/issues/detail?id=100 #100] and [http://code.google.com/p/modwsgi/issues/detail?id=132 #132].\n\n\'\'Note: using mod_wsgi 2.5 and Python 2.6.1 gave an Internal Server Error on my system (Apache 2.2.11 and Trac 0.11.2.1). Upgrading to Python 2.6.2 (as suggested [http://www.mail-archive.com/modwsgi@googlegroups.com/msg01917.html here]) solved this for me[[BR]]-- Graham Shanks\'\'\n\nIf you plan to use `mod_wsgi` in embedded mode on Windows or with the MPM worker on Linux, then you\'ll even need version 0.3.4 or greater (see [trac:#10675] for details).\n\n=== Getting Trac to work nicely with SSPI and \'Require Group\' ===\nIf like me you\'ve set Trac up on Apache, Win32 and configured SSPI, but added a \'Require group\' option to your apache configuration, then the SSPIOmitDomain option is probably not working.  If its not working your usernames in trac are probably looking like \'DOMAIN\\user\' rather than \'user\'.\n\nThis WSGI script \'fixes\' things, hope it helps:\n{{{#!python\nimport os\nimport trac.web.main\n\nos.environ[\'TRAC_ENV\'] = \'/usr/local/trac/mysite\'\nos.environ[\'PYTHON_EGG_CACHE\'] = \'/usr/local/trac/mysite/eggs\'\n\ndef application(environ, start_response):\n    if \"\\\\\" in environ[\'REMOTE_USER\']:\n        environ[\'REMOTE_USER\'] = environ[\'REMOTE_USER\'].split(\"\\\\\", 1)[1]\n    return trac.web.main.dispatch_request(environ, start_response)\n}}}\n\n\n=== Trac with PostgreSQL ===\n\nWhen using the mod_wsgi adapter with multiple Trac instances and PostgreSQL (or MySQL?) as a database back-end, the server \'\'may\'\' create a lot of open database connections and thus PostgreSQL processes.\n\nA somewhat brutal workaround is to disabled connection pooling in Trac. This is done by setting `poolable = False` in `trac.db.postgres_backend` on the `PostgreSQLConnection` class.\n\nBut it\'s not necessary to edit the source of Trac, the following lines in `trac.wsgi` will also work:\n\n{{{\nimport trac.db.postgres_backend\ntrac.db.postgres_backend.PostgreSQLConnection.poolable = False\n}}}\n\nor\n\n{{{\nimport trac.db.mysql_backend\ntrac.db.mysql_backend.MySQLConnection.poolable = False\n}}}\n\nNow Trac drops the connection after serving a page and the connection count on the database will be kept minimal.\n\n//This is not a recommended approach though. See also the notes at the bottom of the [http://code.google.com/p/modwsgi/wiki/IntegrationWithTrac mod_wsgi\'s IntegrationWithTrac] wiki page.//\n\n=== Other resources\n\nFor more troubleshooting tips, see also the [TracModPython#Troubleshooting mod_python troubleshooting] section, as most Apache-related issues are quite similar, plus discussion of potential [http://code.google.com/p/modwsgi/wiki/ApplicationIssues application issues] when using mod_wsgi. The wsgi page also has a [http://code.google.com/p/modwsgi/wiki/IntegrationWithTrac Integration With Trac] document.\n\n\n----\nSee also:  TracGuide, TracInstall, [wiki:TracFastCgi FastCGI], [wiki:TracModPython ModPython], [trac:TracNginxRecipe TracNginxRecipe]\n',NULL,NULL),('TracNavigation',1,1291894092000000,'trac','127.0.0.1','= Trac Navigation =\n\nStarting with Trac 0.11, it is now possible to customize the main and meta navigation entries in some basic ways.\n\nThe new `[mainnav]` and `[metanav]` configuration sections can now be used to customize the text and link used for the navigation items, or even to disable them.\n\n`[mainnav]` corresponds to the \'\'\'main navigation bar\'\'\', the one containing entries such as \'\'Wiki\'\', \'\'Timeline\'\', \'\'Roadmap\'\', \'\'Browse Source\'\' and so on. This navigation bar is meant to access the default page of the main modules enabled in Trac and accessible for the current user.\n\n`[metanav]` corresponds to the \'\'\'meta navigation bar\'\'\', by default positioned above the main navigation bar and below the \'\'Search\'\' box. It contains the \'\'Log in\'\', \'\'Logout\'\', \'\'Help/Guide\'\' etc. entries. This navigation bar is meant to access some global information about the Trac project and the current user.\n\nNote that it is still not possible to customize the \'\'\'contextual navigation bar\'\'\', i.e. the one usually placed below the main navigation bar.\n\n=== Example ===\n\nIn the following example, we rename the link to the Wiki start \"Home\", and hide the \"Help/Guide\" link. \nWe also make the \"View Tickets\" entry link to a specific report.\n\nRelevant excerpt from the TracIni:\n{{{\n[mainnav]\nwiki.label = Home\ntickets.href = /report/24\n\n[metanav]\nhelp = disabled\n}}}\n\n----\nSee also: TracInterfaceCustomization, and the [http://trac-hacks.org/wiki/NavAddPlugin TracHacks:NavAddPlugin] or [http://trac-hacks.org/wiki/MenusPlugin TracHacks:MenusPlugin] (still needed for adding entries)\n',NULL,NULL),('TracNavigation',2,1397068026258745,'trac','127.0.0.1','= Trac Navigation =\n\nStarting with Trac 0.11, it is now possible to customize the main and meta navigation entries in some basic ways.\n\nThe new `[mainnav]` and `[metanav]` configuration sections can now be used to customize the text and link used for the navigation items, or even to disable them.  The `mainnav` and `metanav` options in the `[trac]` configuration section can also be used to change the order.\n\n=== `[mainnav]` #mainnav-bar\n`[mainnav]` corresponds to the \'\'\'main navigation bar\'\'\', the one containing entries such as \'\'Wiki\'\', \'\'Timeline\'\', \'\'Roadmap\'\', \'\'Browse Source\'\' and so on. This navigation bar is meant to access the default page of the main modules enabled in Trac that are accessible for the current user.\n\n\n** [=#Example Example] ** \n\nIn the following example, we rename the link to the Wiki start \"Home\", and make the \"View Tickets\" entry link to a specific report.  The second example (below) also hides the \"!Help/Guide\" link.\n\nRelevant excerpt from the TracIni:\n{{{\n[mainnav]\nwiki.label = Home\ntickets.href = /report/24\n}}}\n\n=== `[metanav]` #metanav-bar\n`[metanav]` corresponds to the \'\'\'meta navigation bar\'\'\', by default positioned above the main navigation bar and below the \'\'Search\'\' box. It contains the \'\'Log in\'\', \'\'Logout\'\', \'\'!Help/Guide\'\' etc. entries. This navigation bar is meant to access some global information about the Trac project and the current user.\n\nThere is one special entry in the  `[metanav]` section: `logout.redirect` is the page the user sees after hitting the logout button. \n[[comment(see also #Trac3808)]]\n\n** Example ** \n\n{{{\n[metanav]\nhelp = disabled\nlogout.redirect = wiki/Logout\n}}}\n\n\n=== Notes\nPossible URL formats (for `.href` or `.redirect`):\n|| \'\'\'config\'\'\' || \'\'\'redirect to\'\'\' ||\n|| `wiki/Logout` || `/projects/env/wiki/Logout` ||\n|| `http://hostname/` || `http://hostname/` ||\n|| `/projects` || `/projects` ||\n\n\n=== `[trac]` #nav-order\nThe `mainnav` and `metanav` options in the `[trac]` configuration section control the order in which the navigation items are displayed (left to right).  This can be useful with plugins that add navigation items.\n\n** Example ** \n\nIn the following example, we change the order to prioritise the ticket related items further left.\n\nRelevant excerpt from the TracIni:\n{{{\n[trac]\nmainnav = wiki,tickets,newticket,timeline,roadmap,browser,search,admin\n}}}\n\nThe default order and item names can be viewed in the [TracIni#trac-section trac section of TracIni].\n\n=== Context Navigation #ctxtnav-bar\n\nNote that it is still not possible to customize the \'\'\'contextual navigation bar\'\'\', i.e. the one usually placed below the main navigation bar.\n\n\n----\nSee also: TracInterfaceCustomization, and the [http://trac-hacks.org/wiki/NavAddPlugin TracHacks:NavAddPlugin] or [http://trac-hacks.org/wiki/MenusPlugin TracHacks:MenusPlugin] (still needed for adding entries)',NULL,NULL),('TracNotification',1,1291894092000000,'trac','127.0.0.1','= Email Notification of Ticket Changes =\n[[TracGuideToc]]\n\n[[PageOutline]]\n\nTrac supports notification about ticket changes via email. \n\nEmail notification is useful to keep users up-to-date on tickets/issues of interest, and also provides a convenient way to post all ticket changes to a dedicated mailing list. For example, this is how the [http://lists.edgewall.com/archive/trac-tickets/ Trac-tickets] mailing list is set up.\n\nDisabled by default, notification can be activated and configured in [wiki:TracIni trac.ini].\n\n== Receiving Notification Mails ==\nWhen reporting a new ticket or adding a comment, enter a valid email address or your username in the \'\'reporter\'\', \'\'assigned to/owner\'\' or \'\'cc\'\' field. Trac will automatically send you an email when changes are made to the ticket (depending on how notification is configured).\n\nThis is useful to keep up-to-date on an issue or enhancement request that interests you.\n\n=== How to use your username to receive notification mails ===\n\nTo receive notification mails, you can either enter a full email address or your username. To get notified with a simple username or login, you need to specify a valid email address in the \'\'Preferences\'\' page. \n\nAlternatively, a default domain name (\'\'\'`smtp_default_domain`\'\'\') can be set in the TracIni file (see [#ConfigurationOptions Configuration Options] below). In this case, the default domain will be appended to the username, which can be useful for an \"Intranet\" kind of installation.\n\n== Configuring SMTP Notification ==\n\n\'\'\'Important:\'\'\' For TracNotification to work correctly, the `[trac] base_url` option must be set in [wiki:TracIni trac.ini]. \n\n=== Configuration Options ===\nThese are the available options for the `[notification]` section in trac.ini.\n\n * \'\'\'`smtp_enabled`\'\'\': Enable email notification.\n * \'\'\'`smtp_from`\'\'\': Email address to use for \'\'Sender\'\'-headers in notification emails.\n * \'\'\'`smtp_from_name`\'\'\': Sender name to use for \'\'Sender\'\'-headers in notification emails.\n * \'\'\'`smtp_replyto`\'\'\': Email address to use for \'\'Reply-To\'\'-headers in notification emails.\n * \'\'\'`smtp_default_domain`\'\'\': (\'\'since 0.10\'\') Append the specified domain to addresses that do not contain one. Fully qualified addresses are not modified. The default domain is appended to all username/login for which an email address cannot be found from the user settings.\n * \'\'\'`smtp_always_cc`\'\'\': List of email addresses to always send notifications to. \'\'Typically used to post ticket changes to a dedicated mailing list.\'\'\n * \'\'\'`smtp_always_bcc`\'\'\': (\'\'since 0.10\'\') List of email addresses to always send notifications to, but keeps addresses not visible from other recipients of the notification email \n * \'\'\'`smtp_subject_prefix`\'\'\': (\'\'since 0.10.1\'\') Text that is inserted before the subject of the email. Set to \"!__default!__\" by default.\n * \'\'\'`always_notify_reporter`\'\'\':  Always send notifications to any address in the reporter field (default: false).\n * \'\'\'`always_notify_owner`\'\'\': (\'\'since 0.9\'\') Always send notifications to the address in the owner field (default: false).\n * \'\'\'`always_notify_updater`\'\'\': (\'\'since 0.10\'\') Always send a notification to the updater of a ticket (default: true).\n * \'\'\'`use_public_cc`\'\'\': (\'\'since 0.10\'\') Addresses in To: (owner, reporter) and Cc: lists are visible by all recipients (default is \'\'Bcc:\'\' - hidden copy).\n * \'\'\'`use_short_addr`\'\'\': (\'\'since 0.10\'\') Enable delivery of notifications to addresses that do not contain a domain (i.e. do not end with \'\'@<domain.com>\'\').This option is useful for intranets, where the SMTP server can handle local addresses and map the username/login to a local mailbox. See also `smtp_default_domain`. Do not use this option with a public SMTP server. \n * \'\'\'`mime_encoding`\'\'\': (\'\'since 0.10\'\') E-mail notifications are always sent in 7-bit mode. This option allows to select the MIME encoding scheme. Supported values:\n   * `base64`: default value, works with any kind of content. May cause some issues with touchy anti-spam/anti-virus engines.\n   * `qp` or `quoted-printable`: best for european languages (more compact than base64), not recommended for non-ASCII text (less compact than base64)\n   * `none`: no encoding. Use with plain english only (ASCII). E-mails with non-ASCII chars won\'t be delivered. \n * \'\'\'`ticket_subject_template`\'\'\': (\'\'since 0.11\'\') A [http://genshi.edgewall.org/wiki/Documentation/text-templates.html Genshi text template] snippet used to get the notification subject.\n\nEither \'\'\'`smtp_from`\'\'\' or \'\'\'`smtp_replyto`\'\'\' (or both) \'\'must\'\' be set, otherwise Trac refuses to send notification mails.\n\nThe following options are specific to email delivery through SMTP.\n * \'\'\'`smtp_server`\'\'\': SMTP server used for notification messages.\n * \'\'\'`smtp_port`\'\'\': (\'\'since 0.9\'\') Port used to contact the SMTP server.\n * \'\'\'`smtp_user`\'\'\': (\'\'since 0.9\'\') User name for authentication SMTP account.\n * \'\'\'`smtp_password`\'\'\': (\'\'since 0.9\'\') Password for authentication SMTP account.\n * \'\'\'`use_tls`\'\'\': (\'\'since 0.10\'\') Toggle to send notifications via a SMTP server using [http://en.wikipedia.org/wiki/Transport_Layer_Security TLS], such as GMail.\n\n\n=== Example Configuration (SMTP) ===\n{{{\n[notification]\nsmtp_enabled = true\nsmtp_server = mail.example.com\nsmtp_from = notifier@example.com\nsmtp_replyto = myproj@projects.example.com\nsmtp_always_cc = ticketmaster@example.com, theboss+myproj@example.com\n}}}\n\n\n=== Customizing the e-mail subject ===\nThe e-mail subject can be customized with the `ticket_subject_template` option, which contains a [http://genshi.edgewall.org/wiki/Documentation/text-templates.html Genshi text template] snippet. The default value is:\n{{{\n$prefix #$ticket.id: $summary\n}}}\nThe following variables are available in the template:\n\n * `env`: The project environment (see [trac:source:/trunk/trac/env.py env.py]).\n * `prefix`: The prefix defined in `smtp_subject_prefix`.\n * `summary`: The ticket summary, with the old value if the summary was edited.\n * `ticket`: The ticket model object (see [trac:source:/trunk/trac/ticket/model.py model.py]). Individual ticket fields can be addressed by appending the field name separated by a dot, e.g. `$ticket.milestone`.\n\n=== Customizing the e-mail content ===\n\nThe notification e-mail content is generated based on `ticket_notify_email.txt` in `trac/ticket/templates`.  The default looks like this:\n\n{{{\n$ticket_body_hdr\n$ticket_props\n#choose ticket.new\n  #when True\n$ticket.description\n  #end\n  #otherwise\n    #if changes_body\nChanges (by $change.author):\n\n$changes_body\n    #end\n    #if changes_descr\n      #if not changes_body and not change.comment and change.author\nDescription changed by $change.author:\n      #end\n$changes_descr\n--\n    #end\n    #if change.comment\n\nComment${not changes_body and \'(by %s)\' % change.author or \'\'}:\n\n$change.comment\n    #end\n  #end\n#end\n\n-- \nTicket URL: <$ticket.link>\n$project.name <${project.url or abs_href()}>\n$project.descr\n}}}\n== Sample Email ==\n{{{\n#42: testing\n---------------------------+------------------------------------------------\n       Id:  42             |      Status:  assigned                \nComponent:  report system  |    Modified:  Fri Apr  9 00:04:31 2004\n Severity:  major          |   Milestone:  0.9                     \n Priority:  lowest         |     Version:  0.6                     \n    Owner:  anonymous      |    Reporter:  jonas@example.com               \n---------------------------+------------------------------------------------\nChanges:\n  * component:  changset view => search system\n  * priority:  low => highest\n  * owner:  jonas => anonymous\n  * cc:  daniel@example.com =>\n         daniel@example.com, jonas@example.com\n  * status:  new => assigned\n\nComment:\nI\'m interested too!\n\n--\nTicket URL: <http://example.com/trac/ticket/42>\nMy Project <http://myproj.example.com/>\n}}}\n\n== Using GMail as the SMTP relay host ==\n\nUse the following configuration snippet\n{{{\n[notification]\nsmtp_enabled = true\nuse_tls = true\nmime_encoding = base64\nsmtp_server = smtp.gmail.com\nsmtp_port = 587\nsmtp_user = user\nsmtp_password = password\n}}}\n\nwhere \'\'user\'\' and \'\'password\'\' match an existing GMail account, \'\'i.e.\'\' the ones you use to log in on [http://gmail.com]\n\nAlternatively, you can use `smtp_port = 25`.[[br]]\nYou should not use `smtp_port = 465`. It will not work and your ticket submission may deadlock. Port 465 is reserved for the SMTPS protocol, which is not supported by Trac. See [comment:ticket:7107:2 #7107] for details.\n \n== Filtering notifications for one\'s own changes ==\nIn Gmail, use the filter:\n\n{{{\nfrom:(<smtp_from>) ((\"Reporter: <username>\" -Changes) OR \"Changes (by <username>)\")\n}}}\n\nFor Trac .10, use the filter:\n{{{\nfrom:(<smtp_from>) ((\"Reporter: <username>\" -Changes -Comment) OR \"Changes (by <username>)\" OR \"Comment (by <username>)\")\n}}}\n\nto delete these notifications.\n\nIn Thunderbird, there is no such solution if you use IMAP\n(see http://kb.mozillazine.org/Filters_(Thunderbird)#Filtering_the_message_body).\n\nThe best you can do is to set \"always_notify_updater\" in conf/trac.ini to false.\nYou will however still get an email if you comment a ticket that you own or have reported.\n\nYou can also add this plugin:\nhttp://trac-hacks.org/wiki/NeverNotifyUpdaterPlugin\n\n== Troubleshooting ==\n\nIf you cannot get the notification working, first make sure the log is activated and have a look at the log to find if an error message has been logged. See TracLogging for help about the log feature.\n\nNotification errors are not reported through the web interface, so the user who submit a change or a new ticket never gets notified about a notification failure. The Trac administrator needs to look at the log to find the error trace.\n\n=== \'\'Permission denied\'\' error ===\n\nTypical error message:\n{{{\n  ...\n  File \".../smtplib.py\", line 303, in connect\n    raise socket.error, msg\n  error: (13, \'Permission denied\')\n}}}\n\nThis error usually comes from a security settings on the server: many Linux distributions do not let the web server (Apache, ...) to post email message to the local SMTP server.\n\nMany users get confused when their manual attempts to contact the SMTP server succeed:\n{{{\ntelnet localhost 25\n}}}\nThe trouble is that a regular user may connect to the SMTP server, but the web server cannot:\n{{{\nsudo -u www-data telnet localhost 25\n}}}\n\nIn such a case, you need to configure your server so that the web server is authorized to post to the SMTP server. The actual settings depend on your Linux distribution and current security policy. You may find help browsing the Trac [trac:MailingList MailingList] archive.\n\nRelevant ML threads:\n * SELinux: http://article.gmane.org/gmane.comp.version-control.subversion.trac.general/7518\n\nFor SELinux in Fedora 10:\n{{{\n$ setsebool -P httpd_can_sendmail 1\n}}}\n=== \'\'Suspected spam\'\' error ===\n\nSome SMTP servers may reject the notification email sent by Trac.\n\nThe default Trac configuration uses Base64 encoding to send emails to the recipients. The whole body of the email is encoded, which sometimes trigger \'\'false positive\'\' SPAM detection on sensitive email servers. In such an event, it is recommended to change the default encoding to \"quoted-printable\" using the `mime_encoding` option.\n\nQuoted printable encoding works better with languages that use one of the Latin charsets. For Asian charsets, it is recommended to stick with the Base64 encoding.\n\n=== \'\'501, 5.5.4 Invalid Address\'\' error ===\n\nOn IIS 6.0 you could get a \n{{{\nFailure sending notification on change to ticket #1: SMTPHeloError: (501, \'5.5.4 Invalid Address\')\n}}}\nin the trac log. Have a look [http://support.microsoft.com/kb/291828 here] for instructions on resolving it.\n\n\n----\nSee also: TracTickets, TracIni, TracGuide',NULL,NULL),('TracNotification',2,1397068026269627,'trac','127.0.0.1','= Email Notification of Ticket Changes =\n[[TracGuideToc]]\n\nTrac supports notification of ticket changes via email. \n\nEmail notification is useful to keep users up-to-date on tickets/issues of interest, and also provides a convenient way to post all ticket changes to a dedicated mailing list. For example, this is how the [http://lists.edgewall.com/archive/trac-tickets/ Trac-tickets] mailing list is set up.\n\nDisabled by default, notification can be activated and configured in [wiki:TracIni trac.ini].\n\n== Receiving Notification Mails ==\nWhen reporting a new ticket or adding a comment, enter a valid email address or your username in the \'\'reporter\'\', \'\'assigned to/owner\'\' or \'\'cc\'\' field. Trac will automatically send you an email when changes are made to the ticket (depending on how notification is configured).\n\nThis is useful to keep up-to-date on an issue or enhancement request that interests you.\n\n=== How to use your username to receive notification mails ===\n\nTo receive notification mails, you can either enter a full email address or your username. To get notified with a simple username or login, you need to specify a valid email address in the \'\'Preferences\'\' page. \n\nAlternatively, a default domain name (\'\'\'`smtp_default_domain`\'\'\') can be set in the TracIni file (see [#ConfigurationOptions Configuration Options] below). In this case, the default domain will be appended to the username, which can be useful for an \"Intranet\" kind of installation.\n\nWhen using apache and mod_kerb for authentication against Kerberos / Active Directory, usernames take the form (\'\'\'`username@EXAMPLE.LOCAL`\'\'\'). To avoid this being interpreted as an email address, add the Kerberos domain to  (\'\'\'`ignore_domains`\'\'\').\n\n== Configuring SMTP Notification ==\n\n\'\'\'Important:\'\'\' For TracNotification to work correctly, the `[trac] base_url` option must be set in [wiki:TracIni trac.ini]. \n\n=== Configuration Options ===\nThese are the available options for the `[notification]` section in trac.ini.\n\n * \'\'\'`smtp_enabled`\'\'\': Enable email notification.\n * \'\'\'`smtp_from`\'\'\': Email address to use for \'\'Sender\'\'-headers in notification emails.\n * \'\'\'`smtp_from_name`\'\'\': Sender name to use for \'\'Sender\'\'-headers in notification emails.\n * \'\'\'`smtp_from_author`\'\'\': (\'\'since 1.0\'\') Use the author of a change (the reporter of a new ticket, or the author of a comment) as the `From:` header value in notification e-mails (default: false). If the author hasn\'t set an e-mail address, `smtp_from` and `smtp_from_name` are used instead.\n * \'\'\'`smtp_replyto`\'\'\': Email address to use for \'\'Reply-To\'\'-headers in notification emails.\n * \'\'\'`smtp_default_domain`\'\'\': (\'\'since 0.10\'\') Append the specified domain to addresses that do not contain one. Fully qualified addresses are not modified. The default domain is appended to all username/login for which an email address cannot be found from the user settings.\n * \'\'\'`smtp_always_cc`\'\'\': List of email addresses to always send notifications to. \'\'Typically used to post ticket changes to a dedicated mailing list.\'\'\n * \'\'\'`smtp_always_bcc`\'\'\': (\'\'since 0.10\'\') List of email addresses to always send notifications to, but keeps addresses not visible from other recipients of the notification email \n * \'\'\'`smtp_subject_prefix`\'\'\': (\'\'since 0.10.1\'\') Text that is inserted before the subject of the email. Set to \"!__default!__\" by default.\n * \'\'\'`always_notify_reporter`\'\'\':  Always send notifications to any address in the reporter field (default: false).\n * \'\'\'`always_notify_owner`\'\'\': (\'\'since 0.9\'\') Always send notifications to the address in the owner field (default: false).\n * \'\'\'`always_notify_updater`\'\'\': (\'\'since 0.10\'\') Always send a notification to the updater of a ticket (default: true).\n * \'\'\'`use_public_cc`\'\'\': (\'\'since 0.10\'\') Addresses in To: (owner, reporter) and Cc: lists are visible by all recipients (default is \'\'Bcc:\'\' - hidden copy).\n * \'\'\'`use_short_addr`\'\'\': (\'\'since 0.10\'\') Enable delivery of notifications to addresses that do not contain a domain (i.e. do not end with \'\'@<domain.com>\'\').This option is useful for intranets, where the SMTP server can handle local addresses and map the username/login to a local mailbox. See also `smtp_default_domain`. Do not use this option with a public SMTP server. \n * \'\'\'`ignore_domains`\'\'\': Comma-separated list of domains that should not be considered part of email addresses (for usernames with Kerberos domains).\n * \'\'\'`mime_encoding`\'\'\': (\'\'since 0.10\'\') This option allows selecting the MIME encoding scheme. Supported values:\n   * `none`: default value, uses 7bit encoding if the text is plain ASCII, or 8bit otherwise. \n   * `base64`: works with any kind of content. May cause some issues with touchy anti-spam/anti-virus engines.\n   * `qp` or `quoted-printable`: best for european languages (more compact than base64) if 8bit encoding cannot be used.\n * \'\'\'`ticket_subject_template`\'\'\': (\'\'since 0.11\'\') A [http://genshi.edgewall.org/wiki/Documentation/text-templates.html Genshi text template] snippet used to get the notification subject.\n * \'\'\'`email_sender`\'\'\': (\'\'since 0.12\'\') Name of the component implementing `IEmailSender`. This component is used by the notification system to send emails. Trac currently provides the following components:\n   * `SmtpEmailSender`: connects to an SMTP server (default).\n   * `SendmailEmailSender`: runs a `sendmail`-compatible executable.\n\nEither \'\'\'`smtp_from`\'\'\' or \'\'\'`smtp_replyto`\'\'\' (or both) \'\'must\'\' be set, otherwise Trac refuses to send notification mails.\n\nThe following options are specific to email delivery through SMTP.\n * \'\'\'`smtp_server`\'\'\': SMTP server used for notification messages.\n * \'\'\'`smtp_port`\'\'\': (\'\'since 0.9\'\') Port used to contact the SMTP server.\n * \'\'\'`smtp_user`\'\'\': (\'\'since 0.9\'\') User name for authentication SMTP account.\n * \'\'\'`smtp_password`\'\'\': (\'\'since 0.9\'\') Password for authentication SMTP account.\n * \'\'\'`use_tls`\'\'\': (\'\'since 0.10\'\') Toggle to send notifications via a SMTP server using [http://en.wikipedia.org/wiki/Transport_Layer_Security TLS], such as GMail.\n\nThe following option is specific to email delivery through a `sendmail`-compatible executable.\n * \'\'\'`sendmail_path`\'\'\': (\'\'since 0.12\'\') Path to the sendmail executable. The sendmail program must accept the `-i` and `-f` options.\n\n=== Example Configuration (SMTP) ===\n{{{\n[notification]\nsmtp_enabled = true\nsmtp_server = mail.example.com\nsmtp_from = notifier@example.com\nsmtp_replyto = myproj@projects.example.com\nsmtp_always_cc = ticketmaster@example.com, theboss+myproj@example.com\n}}}\n\n=== Example Configuration (`sendmail`) ===\n{{{\n[notification]\nsmtp_enabled = true\nemail_sender = SendmailEmailSender\nsendmail_path = /usr/sbin/sendmail\nsmtp_from = notifier@example.com\nsmtp_replyto = myproj@projects.example.com\nsmtp_always_cc = ticketmaster@example.com, theboss+myproj@example.com\n}}}\n\n=== Customizing the e-mail subject ===\nThe e-mail subject can be customized with the `ticket_subject_template` option, which contains a [http://genshi.edgewall.org/wiki/Documentation/text-templates.html Genshi text template] snippet. The default value is:\n{{{\n$prefix #$ticket.id: $summary\n}}}\nThe following variables are available in the template:\n\n * `env`: The project environment (see [trac:source:/trunk/trac/env.py env.py]).\n * `prefix`: The prefix defined in `smtp_subject_prefix`.\n * `summary`: The ticket summary, with the old value if the summary was edited.\n * `ticket`: The ticket model object (see [trac:source:/trunk/trac/ticket/model.py model.py]). Individual ticket fields can be addressed by appending the field name separated by a dot, e.g. `$ticket.milestone`.\n\n=== Customizing the e-mail content ===\n\nThe notification e-mail content is generated based on `ticket_notify_email.txt` in `trac/templates`.  You can add your own version of this template by adding a `ticket_notify_email.txt` to the templates directory of your environment. The default looks like this:\n\n{{{\n$ticket_body_hdr\n$ticket_props\n{% choose ticket.new %}\\\n{%   when True %}\\\n$ticket.description\n{%   end %}\\\n{%   otherwise %}\\\n{%     if changes_body %}\\\n${_(\'Changes (by %(author)s):\', author=change.author)}\n\n$changes_body\n{%     end %}\\\n{%     if changes_descr %}\\\n{%       if not changes_body and not change.comment and change.author %}\\\n${_(\'Description changed by %(author)s:\', author=change.author)}\n{%       end %}\\\n$changes_descr\n--\n{%     end %}\\\n{%     if change.comment %}\\\n\n${changes_body and _(\'Comment:\') or _(\'Comment (by %(author)s):\', author=change.author)}\n\n$change.comment\n{%     end %}\\\n{%   end %}\\\n{% end %}\\\n\n-- \n${_(\'Ticket URL: <%(link)s>\', link=ticket.link)}\n$project.name <${project.url or abs_href()}>\n$project.descr\n}}}\n== Sample Email ==\n{{{\n#42: testing\n---------------------------+------------------------------------------------\n       Id:  42             |      Status:  assigned                \nComponent:  report system  |    Modified:  Fri Apr  9 00:04:31 2004\n Severity:  major          |   Milestone:  0.9                     \n Priority:  lowest         |     Version:  0.6                     \n    Owner:  anonymous      |    Reporter:  jonas@example.com               \n---------------------------+------------------------------------------------\nChanges:\n  * component:  changset view => search system\n  * priority:  low => highest\n  * owner:  jonas => anonymous\n  * cc:  daniel@example.com =>\n         daniel@example.com, jonas@example.com\n  * status:  new => assigned\n\nComment:\nI\'m interested too!\n\n--\nTicket URL: <http://example.com/trac/ticket/42>\nMy Project <http://myproj.example.com/>\n}}}\n\n\n== Customizing e-mail content for MS Outlook ==\n\nOut-of-the-box, MS Outlook normally presents plain text e-mails with a variable-width font; the ticket properties table will most certainly look like a mess in MS Outlook. This can be fixed with some customization of the [#Customizingthee-mailcontent e-mail template].\n\nReplace the following second row in the template:\n{{{\n$ticket_props\n}}}\n\nwith this instead (\'\'requires Python 2.6 or later\'\'):\n{{{\n--------------------------------------------------------------------------\n{% with\n   pv = [(a[0].strip(), a[1].strip()) for a in [b.split(\':\') for b in\n         [c.strip() for c in \n          ticket_props.replace(\'|\', \'\\n\').splitlines()[1:-1]] if \':\' in b]];\n   sel = [\'Reporter\', \'Owner\', \'Type\', \'Status\', \'Priority\', \'Milestone\', \n          \'Component\', \'Severity\', \'Resolution\', \'Keywords\'] %}\\\n${\'\\n\'.join(\'%s\\t%s\' % (format(p[0]+\':\', \' <12\'), p[1]) for p in pv if p[0] in sel)}\n{% end %}\\\n--------------------------------------------------------------------------\n}}}\n\nThe table of ticket properties is replaced with a list of a selection of the properties. A tab character separates the name and value in such a way that most people should find this more pleasing than the default table, when using MS Outlook.\n{{{#!div style=\"margin: 1em 1.75em; border:1px dotted\"\n{{{#!html\n#42: testing<br />\n--------------------------------------------------------------------------<br />\n<table cellpadding=0>\n<tr><td>Reporter:</td><td>jonas@example.com</td></tr>\n<tr><td>Owner:</td><td>anonymous</td></tr>\n<tr><td>Type:</td><td>defect</td></tr>\n<tr><td>Status:</td><td>assigned</td></tr>\n<tr><td>Priority:</td><td>lowest</td></tr>\n<tr><td>Milestone:</td><td>0.9</td></tr>\n<tr><td>Component:</td><td>report system</td></tr>\n<tr><td>Severity:</td><td>major</td></tr>\n<tr><td>Resolution:</td><td> </td></tr>\n<tr><td>Keywords:</td><td> </td></tr>\n</table>\n--------------------------------------------------------------------------<br />\nChanges:<br />\n<br />\n&nbsp;&nbsp;* component: &nbsp;changset view =&gt; search system<br />\n&nbsp;&nbsp;* priority: &nbsp;low =&gt; highest<br />\n&nbsp;&nbsp;* owner: &nbsp;jonas =&gt; anonymous<br />\n&nbsp;&nbsp;* cc: &nbsp;daniel@example.com =&gt;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;daniel@example.com, jonas@example.com<br />\n&nbsp;&nbsp;* status: &nbsp;new =&gt; assigned<br />\n<br />\nComment:<br />\nI\'m interested too!<br />\n<br />\n--<br />\nTicket URL: &lt;http://example.com/trac/ticket/42&gt;<br />\nMy Project &lt;http://myproj.example.com/&gt;<br />\n}}}\n}}}\n\n**Important**: Only those ticket fields that are listed in `sel` are part of the HTML mail. If you have defined custom ticket fields which shall be part of the mail they have to be added to `sel`, example:\n{{{\n   sel = [\'Reporter\', ..., \'Keywords\', \'Custom1\', \'Custom2\']\n}}}\n\nHowever, it\'s not as perfect as an automatically HTML-formatted e-mail would be, but presented ticket properties are at least readable by default in MS Outlook...\n\n\n== Using GMail as the SMTP relay host ==\n\nUse the following configuration snippet\n{{{\n[notification]\nsmtp_enabled = true\nuse_tls = true\nmime_encoding = base64\nsmtp_server = smtp.gmail.com\nsmtp_port = 587\nsmtp_user = user\nsmtp_password = password\n}}}\n\nwhere \'\'user\'\' and \'\'password\'\' match an existing GMail account, \'\'i.e.\'\' the ones you use to log in on [http://gmail.com]\n\nAlternatively, you can use `smtp_port = 25`.[[br]]\nYou should not use `smtp_port = 465`. It will not work and your ticket submission may deadlock. Port 465 is reserved for the SMTPS protocol, which is not supported by Trac. See [comment:ticket:7107:2 #7107] for details.\n \n== Filtering notifications for one\'s own changes ==\nIn Gmail, use the filter:\n\n{{{\nfrom:(<smtp_from>) ((\"Reporter: <username>\" -Changes) OR \"Changes (by <username>)\")\n}}}\n\nFor Trac .10, use the filter:\n{{{\nfrom:(<smtp_from>) ((\"Reporter: <username>\" -Changes -Comment) OR \"Changes (by <username>)\" OR \"Comment (by <username>)\")\n}}}\n\nto delete these notifications.\n\nIn Thunderbird, there is no such solution if you use IMAP\n(see http://kb.mozillazine.org/Filters_(Thunderbird)#Filtering_the_message_body).\n\nThe best you can do is to set \"always_notify_updater\" in conf/trac.ini to false.\nYou will however still get an email if you comment a ticket that you own or have reported.\n\nYou can also add this plugin:\nhttp://trac-hacks.org/wiki/NeverNotifyUpdaterPlugin\n\n== Troubleshooting ==\n\nIf you cannot get the notification working, first make sure the log is activated and have a look at the log to find if an error message has been logged. See TracLogging for help about the log feature.\n\nNotification errors are not reported through the web interface, so the user who submit a change or a new ticket never gets notified about a notification failure. The Trac administrator needs to look at the log to find the error trace.\n\n=== \'\'Permission denied\'\' error ===\n\nTypical error message:\n{{{\n  ...\n  File \".../smtplib.py\", line 303, in connect\n    raise socket.error, msg\n  error: (13, \'Permission denied\')\n}}}\n\nThis error usually comes from a security settings on the server: many Linux distributions do not let the web server (Apache, ...) to post email message to the local SMTP server.\n\nMany users get confused when their manual attempts to contact the SMTP server succeed:\n{{{\ntelnet localhost 25\n}}}\nThe trouble is that a regular user may connect to the SMTP server, but the web server cannot:\n{{{\nsudo -u www-data telnet localhost 25\n}}}\n\nIn such a case, you need to configure your server so that the web server is authorized to post to the SMTP server. The actual settings depend on your Linux distribution and current security policy. You may find help browsing the Trac [trac:MailingList MailingList] archive.\n\nRelevant ML threads:\n * SELinux: http://article.gmane.org/gmane.comp.version-control.subversion.trac.general/7518\n\nFor SELinux in Fedora 10:\n{{{\n$ setsebool -P httpd_can_sendmail 1\n}}}\n=== \'\'Suspected spam\'\' error ===\n\nSome SMTP servers may reject the notification email sent by Trac.\n\nThe default Trac configuration uses Base64 encoding to send emails to the recipients. The whole body of the email is encoded, which sometimes trigger \'\'false positive\'\' SPAM detection on sensitive email servers. In such an event, it is recommended to change the default encoding to \"quoted-printable\" using the `mime_encoding` option.\n\nQuoted printable encoding works better with languages that use one of the Latin charsets. For Asian charsets, it is recommended to stick with the Base64 encoding.\n\n=== \'\'501, 5.5.4 Invalid Address\'\' error ===\n\nOn IIS 6.0 you could get a \n{{{\nFailure sending notification on change to ticket #1: SMTPHeloError: (501, \'5.5.4 Invalid Address\')\n}}}\nin the trac log. Have a look [http://support.microsoft.com/kb/291828 here] for instructions on resolving it.\n\n\n----\nSee also: TracTickets, TracIni, TracGuide\n',NULL,NULL),('TracPermissions',1,1291894092000000,'trac','127.0.0.1','= Trac Permissions =\n[[TracGuideToc]]\n\nTrac uses a simple, case sensitive, permission system to control what users can and can\'t access.\n\nPermission privileges are managed using the [TracAdmin trac-admin] tool or (new in version 0.11) the \'\'General / Permissions\'\' panel in the \'\'Admin\'\' tab of the web interface.\n\nIn addition to the default permission policy described in this page, it is possible to activate additional permission policies by enabling plugins and listing them in the `[trac] permission_policies` configuration entry in the TracIni. See TracFineGrainedPermissions for more details.\n\nNon-authenticated users accessing the system are assigned the name \"anonymous\". Assign permissions to the \"anonymous\" user to set privileges for anonymous/guest users. The parts of Trac that a user does not have the privileges for will not be displayed in the navigation.\nIn addition to these privileges, users can be granted additional individual rights in effect when authenticated and logged into the system. All logged in users belong to the virtual group \"authenticated\", which inherits permissions from \"anonymous\".\n\n== Graphical Admin Tab ==\n\'\'This feature is new in version 0.11.\'\'\n\nTo access this tab, a user must have `TRAC_ADMIN privileges`. This can be performed as follows (more on the trac-admin script below):\n{{{\n  $ trac-admin /path/to/projenv permission add bob TRAC_ADMIN\n}}}\n\nThen, the user `bob` will be able to see the Admin tab, and can then access the permissions menu. This menu will allow you to perform all the following actions, but from the browser without requiring root access to the server (just the correct permissions for your user account).\n\n\nAn easy way to quickly secure a new Trac install is to run the above command on the anonymous user, install the [http://trac-hacks.org/wiki/AccountManagerPlugin AccountManagerPlugin], create a new admin account graphically and then remove the TRAC_ADMIN permission from the anonymous user.\n\n== Available Privileges ==\n\nTo enable all privileges for a user, use the `TRAC_ADMIN` permission. Having `TRAC_ADMIN` is like being `root` on a *NIX system: it will allow you to perform any operation.\n\nOtherwise, individual privileges can be assigned to users for the various different functional areas of Trac (\'\'\'note that the privilege names are case-sensitive\'\'\'):\n\n=== Repository Browser ===\n\n|| `BROWSER_VIEW` || View directory listings in the [wiki:TracBrowser repository browser] ||\n|| `LOG_VIEW` || View revision logs of files and directories in the [wiki:TracBrowser repository browser] ||\n|| `FILE_VIEW` || View files in the [wiki:TracBrowser repository browser] ||\n|| `CHANGESET_VIEW` || View [wiki:TracChangeset repository check-ins] ||\n\n=== Ticket System ===\n\n|| `TICKET_VIEW` || View existing [wiki:TracTickets tickets] and perform [wiki:TracQuery ticket queries] ||\n|| `TICKET_CREATE` || Create new [wiki:TracTickets tickets] ||\n|| `TICKET_APPEND` || Add comments or attachments to [wiki:TracTickets tickets] ||\n|| `TICKET_CHGPROP` || Modify [wiki:TracTickets ticket] properties (priority, assignment, keywords, etc.) with the following exceptions: edit description field, add/remove other users from cc field when logged in, and set email to pref ||\n|| `TICKET_MODIFY` || Includes both `TICKET_APPEND` and `TICKET_CHGPROP`, and in addition allows resolving [wiki:TracTickets tickets]. Tickets can be assigned to users through a [TracTickets#Assign-toasDrop-DownList drop-down list] when the list of possible owners has been restricted. ||\n|| `TICKET_EDIT_CC` || Full modify cc field ||\n|| `TICKET_EDIT_DESCRIPTION` || Modify description field ||\n|| `TICKET_ADMIN` || All `TICKET_*` permissions, plus the deletion of ticket attachments and modification of the reporter and description fields. It also allows managing ticket properties in the WebAdmin panel. ||\n\nAttention: the \"view tickets\" button appears with the `REPORT_VIEW` permission.\n\n=== Roadmap ===\n\n|| `MILESTONE_VIEW` || View milestones and assign tickets to milestones. ||\n|| `MILESTONE_CREATE` || Create a new milestone ||\n|| `MILESTONE_MODIFY` || Modify existing milestones ||\n|| `MILESTONE_DELETE` || Delete milestones ||\n|| `MILESTONE_ADMIN` || All `MILESTONE_*` permissions ||\n|| `ROADMAP_VIEW` || View the [wiki:TracRoadmap roadmap] page, is not (yet) the same as MILESTONE_VIEW, see [trac:#4292 #4292] ||\n|| `ROADMAP_ADMIN` || to be removed with [trac:#3022 #3022], replaced by MILESTONE_ADMIN ||\n\n=== Reports ===\n\n|| `REPORT_VIEW` || View [wiki:TracReports reports], i.e. the \"view tickets\" link. ||\n|| `REPORT_SQL_VIEW` || View the underlying SQL query of a [wiki:TracReports report] ||\n|| `REPORT_CREATE` || Create new [wiki:TracReports reports] ||\n|| `REPORT_MODIFY` || Modify existing [wiki:TracReports reports] ||\n|| `REPORT_DELETE` || Delete [wiki:TracReports reports] ||\n|| `REPORT_ADMIN` || All `REPORT_*` permissions ||\n\n=== Wiki System ===\n\n|| `WIKI_VIEW` || View existing [wiki:TracWiki wiki] pages ||\n|| `WIKI_CREATE` || Create new [wiki:TracWiki wiki] pages ||\n|| `WIKI_MODIFY` || Change [wiki:TracWiki wiki] pages ||\n|| `WIKI_DELETE` || Delete [wiki:TracWiki wiki] pages and attachments ||\n|| `WIKI_ADMIN` || All `WIKI_*` permissions, plus the management of \'\'readonly\'\' pages. ||\n\n=== Permissions ===\n\n|| `PERMISSION_GRANT` || add/grant a permission ||\n|| `PERMISSION_REVOKE` || remove/revoke a permission ||\n|| `PERMISSION_ADMIN` || All `PERMISSION_*` permissions ||\n\n\n=== Others ===\n\n|| `TIMELINE_VIEW` || View the [wiki:TracTimeline timeline] page ||\n|| `SEARCH_VIEW` || View and execute [wiki:TracSearch search] queries ||\n|| `CONFIG_VIEW` || Enables additional pages on \'\'About Trac\'\' that show the current configuration or the list of installed plugins ||\n|| `EMAIL_VIEW` || Shows email addresses even if [trac:wiki:0.11/TracIni trac show_email_addresses configuration option is false] ||\n\n== Granting Privileges ==\n\nYou grant privileges to users using [wiki:TracAdmin trac-admin]. The current set of privileges can be listed with the following command:\n{{{\n  $ trac-admin /path/to/projenv permission list\n}}}\n\nThis command will allow the user \'\'bob\'\' to delete reports:\n{{{\n  $ trac-admin /path/to/projenv permission add bob REPORT_DELETE\n}}}\n\nThe `permission add` command also accepts multiple privilege names:\n{{{\n  $ trac-admin /path/to/projenv permission add bob REPORT_DELETE WIKI_CREATE\n}}}\n\nOr add all privileges:\n{{{\n  $ trac-admin /path/to/projenv permission add bob TRAC_ADMIN\n}}}\n\n== Permission Groups ==\n\nThere are two built-in groups, \"authenticated\" and \"anonymous\".[[BR]]\nAny user who has not logged in is automatically in the \"anonymous\" group.[[BR]]\nAny user who has logged in is also in the \"authenticated\" group.[[BR]]\nThe \"authenticated\" group inherits permissions from the \"anonymous\" group.[[BR]]\neg. if the \"anonymous\" group has permission WIKI_MODIFY, it\'s not necessary to add the WIKI_MODIFY permisison to the \"authenticated\" group as well.\n\nCustom groups may be defined that inherit permissions from the two built-in groups.\n\nPermissions can be grouped together to form roles such as \'\'developer\'\', \'\'admin\'\', etc.\n{{{\n  $ trac-admin /path/to/projenv permission add developer WIKI_ADMIN\n  $ trac-admin /path/to/projenv permission add developer REPORT_ADMIN\n  $ trac-admin /path/to/projenv permission add developer TICKET_MODIFY\n  $ trac-admin /path/to/projenv permission add bob developer\n  $ trac-admin /path/to/projenv permission add john developer\n}}}\n\nGroup membership can be checked by doing a {{{permission list}}} with no further arguments; the resulting output will include group memberships. \'\'\'Use lowercase for group names, as uppercase is reserved for permissions\'\'\'.\n\n== Adding a New Group and Permissions ==\nPermission groups can be created by assigning a user to a group you wish to create, then assign permissions to that group.\n\nThe following will add \'\'bob\'\' to the new group called \'\'beta_testers\'\' and then will assign WIKI_ADMIN permissions to that group. (Thus, \'\'bob\'\' will inherit the WIKI_ADMIN permission)\n{{{ \n   $ trac-admin /path/to/projenv permission add bob beta_testers\n   $ trac-admin /path/to/projenv permission add beta_testers WIKI_ADMIN\n\n}}}\n\n== Removing Permissions ==\n\nPermissions can be removed using the \'remove\' command. For example:\n\nThis command will prevent the user \'\'bob\'\' from deleting reports:\n{{{\n  $ trac-admin /path/to/projenv permission remove bob REPORT_DELETE\n}}}\n\nJust like `permission add`, this command accepts multiple privilege names.\n\nYou can also remove all privileges for a specific user:\n{{{\n  $ trac-admin /path/to/projenv permission remove bob \'*\'\n}}}\n\nOr one privilege for all users:\n{{{\n  $ trac-admin /path/to/projenv permission remove \'*\' REPORT_ADMIN\n}}}\n\n== Default Permissions ==\n\nBy default on a new Trac installation, the `anonymous` user will have \'\'view\'\' access to everything in Trac, but will not be able to create or modify anything.\nOn the other hand, the `authenticated` users will have the permissions to \'\'create and modify tickets and wiki pages\'\'.\n\n\'\'\'anonymous\'\'\'\n{{{\n BROWSER_VIEW \n CHANGESET_VIEW \n FILE_VIEW \n LOG_VIEW \n MILESTONE_VIEW \n REPORT_SQL_VIEW \n REPORT_VIEW \n ROADMAP_VIEW \n SEARCH_VIEW \n TICKET_VIEW \n TIMELINE_VIEW\n WIKI_VIEW\n}}}\n\n\'\'\'authenticated\'\'\'\n{{{\n TICKET_CREATE \n TICKET_MODIFY \n WIKI_CREATE \n WIKI_MODIFY  \n}}}\n----\nSee also: TracAdmin, TracGuide and TracFineGrainedPermissions\n',NULL,NULL),('TracPermissions',2,1397068026233990,'trac','127.0.0.1','= Trac Permissions =\n[[TracGuideToc]]\n\nTrac uses a simple, case sensitive, permission system to control what users can and can\'t access.\n\nPermission privileges are managed using the [TracAdmin trac-admin] tool or (new in version 0.11) the \'\'General / Permissions\'\' panel in the \'\'Admin\'\' tab of the web interface.\n\nIn addition to the default permission policy described in this page, it is possible to activate additional permission policies by enabling plugins and listing them in the `[trac] permission_policies` configuration entry in the TracIni. See TracFineGrainedPermissions for more details.\n\nNon-authenticated users accessing the system are assigned the name \"anonymous\". Assign permissions to the \"anonymous\" user to set privileges for anonymous/guest users. The parts of Trac that a user does not have the privileges for will not be displayed in the navigation.\nIn addition to these privileges, users can be granted additional individual rights in effect when authenticated and logged into the system. All logged in users belong to the virtual group \"authenticated\", which inherits permissions from \"anonymous\".\n\n== Graphical Admin Tab ==\n\'\'This feature is new in version 0.11.\'\'\n\nTo access this tab, a user must have one of the following permissions: `TRAC_ADMIN`, `PERMISSION_ADMIN`, `PERMISSION_ADD`, `PERMISSION_REMOVE`. The permissions can granted using the `trac-admin` command (more on `trac-admin` below):\n{{{\n  $ trac-admin /path/to/projenv permission add bob TRAC_ADMIN\n}}}\n\nThen, the user `bob` will be able to see the Admin tab, and can then access the permissions menu. This menu will allow you to perform all the following actions, but from the browser without requiring root access to the server (just the correct permissions for your user account). \'\'\'Use at least one lowercase character in user names, as all-uppercase names are reserved for permissions.\'\'\'\n\n 1. [[Image(htdocs:../common/guide/admin.png)]]\n 1. [[Image(htdocs:../common/guide/admin-permissions.png)]]\n 1. [[Image(htdocs:../common/guide/admin-permissions-TICKET_ADMIN.png)]]\n\nAn easy way to quickly secure a new Trac install is to run the above command on the anonymous user, install the [http://trac-hacks.org/wiki/AccountManagerPlugin AccountManagerPlugin], create a new admin account graphically and then remove the TRAC_ADMIN permission from the anonymous user.\n\n== Available Privileges ==\n\nTo enable all privileges for a user, use the `TRAC_ADMIN` permission. Having `TRAC_ADMIN` is like being `root` on a *NIX system: it will allow you to perform any operation.\n\nOtherwise, individual privileges can be assigned to users for the various different functional areas of Trac (\'\'\'note that the privilege names are case-sensitive\'\'\'):\n\n=== Repository Browser ===\n\n|| `BROWSER_VIEW` || View directory listings in the [wiki:TracBrowser repository browser] ||\n|| `LOG_VIEW` || View revision logs of files and directories in the [wiki:TracBrowser repository browser] ||\n|| `FILE_VIEW` || View files in the [wiki:TracBrowser repository browser] ||\n|| `CHANGESET_VIEW` || View [wiki:TracChangeset repository check-ins] ||\n\n=== Ticket System ===\n\n|| `TICKET_VIEW` || View existing [wiki:TracTickets tickets] and perform [wiki:TracQuery ticket queries] ||\n|| `TICKET_CREATE` || Create new [wiki:TracTickets tickets] ||\n|| `TICKET_APPEND` || Add comments or attachments to [wiki:TracTickets tickets] ||\n|| `TICKET_CHGPROP` || Modify [wiki:TracTickets ticket] properties (priority, assignment, keywords, etc.) with the following exceptions: edit description field, add/remove other users from cc field when logged in, and set email to pref ||\n|| `TICKET_MODIFY` || Includes both `TICKET_APPEND` and `TICKET_CHGPROP`, and in addition allows resolving [wiki:TracTickets tickets]. Tickets can be assigned to users through a [TracTickets#Assign-toasDrop-DownList drop-down list] when the list of possible owners has been restricted. ||\n|| `TICKET_EDIT_CC` || Full modify cc field ||\n|| `TICKET_EDIT_DESCRIPTION` || Modify description field ||\n|| `TICKET_EDIT_COMMENT` || Modify comments ||\n|| `TICKET_BATCH_MODIFY` || [wiki:TracBatchModify Batch modify] tickets ||\n|| `TICKET_ADMIN` || All `TICKET_*` permissions, plus the deletion of ticket attachments and modification of the reporter and description fields. It also allows managing ticket properties in the WebAdmin panel. ||\n\nAttention: the \"view tickets\" button appears with the `REPORT_VIEW` permission.\n\n=== Roadmap ===\n\n|| `MILESTONE_VIEW` || View milestones and assign tickets to milestones. ||\n|| `MILESTONE_CREATE` || Create a new milestone ||\n|| `MILESTONE_MODIFY` || Modify existing milestones ||\n|| `MILESTONE_DELETE` || Delete milestones ||\n|| `MILESTONE_ADMIN` || All `MILESTONE_*` permissions ||\n|| `ROADMAP_VIEW` || View the [wiki:TracRoadmap roadmap] page, is not (yet) the same as MILESTONE_VIEW, see [trac:#4292 #4292] ||\n|| `ROADMAP_ADMIN` || to be removed with [trac:#3022 #3022], replaced by MILESTONE_ADMIN ||\n\n=== Reports ===\n\n|| `REPORT_VIEW` || View [wiki:TracReports reports], i.e. the \"view tickets\" link. ||\n|| `REPORT_SQL_VIEW` || View the underlying SQL query of a [wiki:TracReports report] ||\n|| `REPORT_CREATE` || Create new [wiki:TracReports reports] ||\n|| `REPORT_MODIFY` || Modify existing [wiki:TracReports reports] ||\n|| `REPORT_DELETE` || Delete [wiki:TracReports reports] ||\n|| `REPORT_ADMIN` || All `REPORT_*` permissions ||\n\n=== Wiki System ===\n\n|| `WIKI_VIEW` || View existing [wiki:TracWiki wiki] pages ||\n|| `WIKI_CREATE` || Create new [wiki:TracWiki wiki] pages ||\n|| `WIKI_MODIFY` || Change [wiki:TracWiki wiki] pages ||\n|| `WIKI_RENAME` || Rename [wiki:TracWiki wiki] pages ||\n|| `WIKI_DELETE` || Delete [wiki:TracWiki wiki] pages and attachments ||\n|| `WIKI_ADMIN` || All `WIKI_*` permissions, plus the management of \'\'readonly\'\' pages. ||\n\n=== Permissions ===\n\n|| `PERMISSION_GRANT` || add/grant a permission ||\n|| `PERMISSION_REVOKE` || remove/revoke a permission ||\n|| `PERMISSION_ADMIN` || All `PERMISSION_*` permissions ||\n\n=== Others ===\n\n|| `TIMELINE_VIEW` || View the [wiki:TracTimeline timeline] page ||\n|| `SEARCH_VIEW` || View and execute [wiki:TracSearch search] queries ||\n|| `CONFIG_VIEW` || Enables additional pages on \'\'About Trac\'\' that show the current configuration or the list of installed plugins ||\n|| `EMAIL_VIEW` || Shows email addresses even if [wiki:TracIni#trac-section trac show_email_addresses] configuration option is false ||\n\n== Creating New Privileges ==\n\nTo create custom permissions, for example to be used in a custom workflow, enable the optional [trac:ExtraPermissionsProvider tracopt.perm.config_perm_provider.ExtraPermissionsProvider] component in the \"Plugins\" admin panel, and add the desired permissions to the `[extra-permissions]` section in your [wiki:TracIni#extra-permissions-section trac.ini]. For more information, please refer to the documentation of the component in the admin panel.\n\n== Granting Privileges ==\n\nYou grant privileges to users using [wiki:TracAdmin trac-admin]. The current set of privileges can be listed with the following command:\n{{{\n  $ trac-admin /path/to/projenv permission list\n}}}\n\nThis command will allow the user \'\'bob\'\' to delete reports:\n{{{\n  $ trac-admin /path/to/projenv permission add bob REPORT_DELETE\n}}}\n\nThe `permission add` command also accepts multiple privilege names:\n{{{\n  $ trac-admin /path/to/projenv permission add bob REPORT_DELETE WIKI_CREATE\n}}}\n\nOr add all privileges:\n{{{\n  $ trac-admin /path/to/projenv permission add bob TRAC_ADMIN\n}}}\n\n== Permission Groups ==\n\nThere are two built-in groups, \"authenticated\" and \"anonymous\".\nAny user who has not logged in is automatically in the \"anonymous\" group.\nAny user who has logged in is also in the \"authenticated\" group.\nThe \"authenticated\" group inherits permissions from the \"anonymous\" group.\nFor example, if the \"anonymous\" group has permission WIKI_MODIFY, \nit is not necessary to add the WIKI_MODIFY permission to the \"authenticated\" group as well.\n\nCustom groups may be defined that inherit permissions from the two built-in groups.\n\nPermissions can be grouped together to form roles such as \'\'developer\'\', \'\'admin\'\', etc.\n{{{\n  $ trac-admin /path/to/projenv permission add developer WIKI_ADMIN\n  $ trac-admin /path/to/projenv permission add developer REPORT_ADMIN\n  $ trac-admin /path/to/projenv permission add developer TICKET_MODIFY\n  $ trac-admin /path/to/projenv permission add bob developer\n  $ trac-admin /path/to/projenv permission add john developer\n}}}\n\nGroup membership can be checked by doing a {{{permission list}}} with no further arguments; the resulting output will include group memberships. \'\'\'Use at least one lowercase character in group names, as all-uppercase names are reserved for permissions\'\'\'.\n\n== Adding a New Group and Permissions ==\nPermission groups can be created by assigning a user to a group you wish to create, then assign permissions to that group.\n\nThe following will add \'\'bob\'\' to the new group called \'\'beta_testers\'\' and then will assign WIKI_ADMIN permissions to that group. (Thus, \'\'bob\'\' will inherit the WIKI_ADMIN permission)\n{{{ \n   $ trac-admin /path/to/projenv permission add bob beta_testers\n   $ trac-admin /path/to/projenv permission add beta_testers WIKI_ADMIN\n\n}}}\n\n== Removing Permissions ==\n\nPermissions can be removed using the \'remove\' command. For example:\n\nThis command will prevent the user \'\'bob\'\' from deleting reports:\n{{{\n  $ trac-admin /path/to/projenv permission remove bob REPORT_DELETE\n}}}\n\nJust like `permission add`, this command accepts multiple privilege names.\n\nYou can also remove all privileges for a specific user:\n{{{\n  $ trac-admin /path/to/projenv permission remove bob \'*\'\n}}}\n\nOr one privilege for all users:\n{{{\n  $ trac-admin /path/to/projenv permission remove \'*\' REPORT_ADMIN\n}}}\n\n== Default Permissions ==\n\nBy default on a new Trac installation, the `anonymous` user will have \'\'view\'\' access to everything in Trac, but will not be able to create or modify anything.\nOn the other hand, the `authenticated` users will have the permissions to \'\'create and modify tickets and wiki pages\'\'.\n\n\'\'\'anonymous\'\'\'\n{{{\n BROWSER_VIEW \n CHANGESET_VIEW \n FILE_VIEW \n LOG_VIEW \n MILESTONE_VIEW \n REPORT_SQL_VIEW \n REPORT_VIEW \n ROADMAP_VIEW \n SEARCH_VIEW \n TICKET_VIEW \n TIMELINE_VIEW\n WIKI_VIEW\n}}}\n\n\'\'\'authenticated\'\'\'\n{{{\n TICKET_CREATE \n TICKET_MODIFY \n WIKI_CREATE \n WIKI_MODIFY  \n}}}\n----\nSee also: TracAdmin, TracGuide and TracFineGrainedPermissions\n',NULL,NULL),('TracPlugins',1,1291894092000000,'trac','127.0.0.1','= Trac Plugins =\n[[TracGuideToc]]\n\nSince version 0.9, Trac supports [trac:PluginList plugins] that extend the built-in functionality. The plugin functionality is based on the [trac:TracDev/ComponentArchitecture component architecture].\n\n== Requirements ==\n\nTo use egg based plugins in Trac, you need to have [http://peak.telecommunity.com/DevCenter/setuptools setuptools] (version 0.6) installed.\n\nTo install `setuptools`, download the bootstrap module [http://peak.telecommunity.com/dist/ez_setup.py ez_setup.py] and execute it as follows:\n{{{\n$ python ez_setup.py\n}}}\n\nIf the `ez_setup.py` script fails to install the setuptools release, you can download it from [http://www.python.org/pypi/setuptools PyPI] and install it manually.\n\nPlugins can also consist of a single `.py` file dropped into either the environment or global `plugins` directory \'\'(since [milestone:0.10])\'\'. See TracIni#GlobalConfiguration .\n\n== Installing a Trac Plugin ==\n\n=== For a Single Project ===\n\nPlugins are packaged as [http://peak.telecommunity.com/DevCenter/PythonEggs Python eggs]. That means they are ZIP archives with the file extension `.egg`. \n\nIf you have downloaded a source distribution of a plugin, and want to build the `.egg` file, follow this instruction:\n * Unpack the source. It should provide a setup.py. \n * Run:\n{{{\n$ python setup.py bdist_egg\n}}}\n\nThen you will have a *.egg file. Examine the output of running python to find where this was created.\n\nOnce you have the plugin archive, you need to copy it into the `plugins` directory of the [wiki:TracEnvironment project environment]. Also, make sure that the web server has sufficient permissions to read the plugin egg.\n\nTo uninstall a plugin installed this way, remove the egg from `plugins` directory and restart web server.\n\nNote that the Python version that the egg is built with must\nmatch the Python version with which Trac is run.  If for\ninstance you are running Trac under Python 2.3, but have\nupgraded your standalone Python to 2.4, the eggs won\'t be\nrecognized.\n\nNote also that in a multi-project setup, a pool of Python interpreter instances will be dynamically allocated to projects based on need, and since plugins occupy a place in Python\'s module system, the first version of any given plugin to be loaded will be used for all the projects. In other words, you cannot use different versions of a single plugin in two projects of a multi-project setup. It may be safer to install plugins for all projects (see below) and then enable them selectively on a project-by-project basis.\n\n=== For All Projects ===\n\n==== With an .egg file ====\n\nSome plugins (such as [trac:SpamFilter SpamFilter]) are downloadable as a `.egg` file which can be installed with the `easy_install` program:\n{{{\neasy_install TracSpamFilter\n}}}\n\nIf `easy_install` is not on your system see the Requirements section above to install it.  Windows users will need to add the `Scripts` directory of their Python installation (for example, `C:\\Python23\\Scripts`) to their `PATH` environment variable (see [http://peak.telecommunity.com/DevCenter/EasyInstall#windows-notes easy_install Windows notes] for more information).\n\nIf Trac reports permission errors after installing a zipped egg and you would rather not bother providing a egg cache directory writable by the web server, you can get around it by simply unzipping the egg. Just pass `--always-unzip` to `easy_install`:\n{{{\neasy_install --always-unzip TracSpamFilter-0.2.1dev_r5943-py2.4.egg\n}}}\nYou should end up with a directory having the same name as the zipped egg (complete with `.egg` extension) and containing its uncompressed contents.\n\nTrac also searches for globally installed plugins \'\'(since 0.10)\'\', see TracIni#GlobalConfiguration.\n\n==== From source ====\n\n`easy_install` makes installing from source a snap. Just give it the URL to either a Subversion repository or a tarball/zip of the source:\n{{{\neasy_install http://svn.edgewall.com/repos/trac/sandbox/spam-filter\n}}}\n\n==== Enabling the plugin ====\nUnlike plugins installed per-environment, you\'ll have to explicitly enable globally installed plugins via [wiki:TracIni trac.ini]. This also applies to plugins installed in the path specified in the `[inherit] plugins_dir` configuration option. This is done in the `[components]` section of the configuration file, for example:\n{{{\n[components]\ntracspamfilter.* = enabled\n}}}\n\nThe name of the option is the Python package of the plugin. This should be specified in the documentation of the plugin, but can also be easily discovered by looking at the source (look for a top-level directory that contains a file named `__init__.py`.)\n\nNote: After installing the plugin, you need to restart your web server.\n\n==== Uninstalling ====\n\n`easy_install` or `python setup.py` does not have an uninstall feature. Hower, it is usually quite trivial to remove a globally installed egg and reference:\n 1. Do `easy_install -m [plugin name]` to remove references from `$PYTHONLIB/site-packages/easy-install.pth` when the plugin installed by setuptools.\n 1. Delete executables from `/usr/bin`, `/usr/local/bin` or `C:\\\\Python*\\Scripts`. For search what executables are there, you may refer to `[console-script]` section of `setup.py`.\n 1. Delete the .egg file or folder from where it is installed, usually inside `$PYTHONLIB/site-packages/`.\n 1. Restart web server.\n\nIf you are uncertain about the location of the egg, here is a small tip to help locate an egg (or any package) - replace `myplugin` with whatever namespace the plugin uses (as used when enabling the plugin):\n{{{\n>>> import myplugin\n>>> print myplugin.__file__\n/opt/local/python24/lib/site-packages/myplugin-0.4.2-py2.4.egg/myplugin/__init__.pyc\n}}}\n\n== Setting up the Plugin Cache ==\n\nSome plugins will need to be extracted by the Python eggs runtime (`pkg_resources`), so that their contents are actual files on the file system. The directory in which they are extracted defaults to \'.python-eggs\' in the home directory of the current user, which may or may not be a problem. You can however override the default location using the `PYTHON_EGG_CACHE` environment variable.\n\nTo do this from the Apache configuration, use the `SetEnv` directive as follows:\n{{{\nSetEnv PYTHON_EGG_CACHE /path/to/dir\n}}}\n\nThis works whether you are using the [wiki:TracCgi CGI] or the [wiki:TracModPython mod_python] front-end. Put this directive next to where you set the path to the [wiki:TracEnvironment Trac environment], i.e. in the same `<Location>` block.\n\nFor example (for CGI):\n{{{\n <Location /trac>\n   SetEnv TRAC_ENV /path/to/projenv\n   SetEnv PYTHON_EGG_CACHE /path/to/dir\n </Location>\n}}}\n\nor (for mod_python):\n{{{\n <Location /trac>\n   SetHandler mod_python\n   ...\n   SetEnv PYTHON_EGG_CACHE /path/to/dir\n </Location>\n}}}\n\n \'\'Note: !SetEnv requires the `mod_env` module which needs to be activated for Apache. In this case the !SetEnv directive can also be used in the `mod_python` Location block.\'\'\n\nFor [wiki:TracFastCgi FastCGI], you\'ll need to `-initial-env` option, or whatever is provided by your web server for setting environment variables. \n\n \'\'Note: that if you already use -initial-env to set the project directory for either a single project or parent you will need to add an additional -initial-env directive to the !FastCgiConfig directive. I.e.\n\n{{{\nFastCgiConfig -initial-env TRAC_ENV=/var/lib/trac -initial-env PYTHON_EGG_CACHE=/var/lib/trac/plugin-cache\n}}}\n\n=== About hook scripts ===\n\nIf you have set up some subversion hook scripts that call the Trac engine - such as the post-commit hook script provided in the `/contrib` directory - make sure you define the `PYTHON_EGG_CACHE` environment variable within these scripts as well.\n\n== Troubleshooting ==\n\n=== Is setuptools properly installed? ===\n\nTry this from the command line:\n{{{\n$ python -c \"import pkg_resources\"\n}}}\n\nIf you get \'\'\'no output\'\'\', setuptools \'\'\'is\'\'\' installed. Otherwise, you\'ll need to install it before plugins will work in Trac.\n\n=== Did you get the correct version of the Python egg? ===\n\nPython eggs have the Python version encoded in their filename. For example, `MyPlugin-1.0-py2.4.egg` is an egg for Python 2.4, and will \'\'\'not\'\'\' be loaded if you\'re running a different Python version (such as 2.3 or 2.5).\n\nAlso, verify that the egg file you downloaded is indeed a ZIP archive. If you downloaded it from a Trac site, chances are you downloaded the HTML preview page instead.\n\n=== Is the plugin enabled? ===\n\n\nIf you install a plugin globally (i.e. \'\'not\'\' inside the `plugins` directory of the Trac project environment) you will have to explicitly enable it in [TracIni trac.ini]. Make sure that:\n * you actually added the necessary line(s) to the `[components]` section\n * the package/module names are correct\n * the value is “enabled\", not e.g. “enable”\n\n=== Check the permissions on the egg file ===\n\nTrac must be able to read the file. \n\n=== Check the log files ===\n\nEnable [wiki:TracLogging logging] and set the log level to `DEBUG`, then watch the log file for messages about loading plugins.\n\n=== Verify you have proper permissions ===\n\nSome plugins require you have special permissions in order to use them. [trac:WebAdmin WebAdmin], for example, requires the user to have TRAC_ADMIN permissions for it to show up on the navigation bar.\n\n=== Is the wrong version of the plugin loading? ===\n\nIf you put your plugins inside plugins directories, and certainly if you have more than one project, you need to make sure that the correct version of the plugin is loading. Here are some basic rules:\n * Only one version of the plugin can be loaded for each running Trac server (ie. each Python process). The Python namespaces and module list will be shared, and it cannot handle duplicates. Whether a plugin is `enabled` or `disabled` makes no difference.\n * A globally installed plugin (typically `setup.py install`) will override any version in global or project plugins directories. A plugin from the global plugins directory will be located before any project plugins directory.\n * If your Trac server hosts more than one project (as with `TRAC_ENV_PARENT_DIR` setups), then having two versions of a plugin in two different projects will give uncertain results. Only one of them will load, and the one loaded will be shared by both projects. Trac will load the first found - basically from the project that receives the first request.\n * Having more than one version listed inside Python site-packages is fine (ie. installed with `setup.py install`) - setuptools will make sure you get the version installed most recently. However, don\'t store more than one version inside a global or project plugins directory - neither version number nor installed date will matter at all. There is no way to determine which one will be located first when Trac searches the directory for plugins.\n\n=== If all of the above failed ===\n\nOK, so the logs don\'t mention plugins, the egg is readable, the python version is correct \'\'and\'\' the egg has been installed globally (and is enabled in the trac.ini) and it still doesn\'t work or give any error messages or any other indication as to why? Hop on the [trac:IrcChannel IrcChannel] and ask away.\n\n----\nSee also TracGuide, [trac:PluginList plugin list], [trac:TracDev/ComponentArchitecture component architecture]',NULL,NULL),('TracPlugins',2,1397068026246802,'trac','127.0.0.1','= Trac plugins =\n[[TracGuideToc]]\n\nFrom version 0.9 onwards, Trac is extensible with [trac:PluginList plugins]. Plugin functionality is based on the [trac:TracDev/ComponentArchitecture component architecture], with peculiarities described in the [TracDev/PluginDevelopment plugin development] page.\n\n== Plugin discovery ==\n\nFrom the user\'s point of view, a plugin is either a standalone .py file or an .egg package. Trac looks for plugins in the global shared plugins directory (see [TracIni#GlobalConfiguration Global Configuration]) and in the `plugins` directory of the local TracEnvironment. Components defined in globally-installed plugins should be explicitly enabled in the [[TracIni#components-section| [components] ]] section of the trac.ini file.\n\n== Requirements for Trac eggs ==\n\nTo use egg-based plugins in Trac, you need to have [http://peak.telecommunity.com/DevCenter/setuptools setuptools] (version 0.6) installed.\n\nTo install `setuptools`, download the bootstrap module [http://peak.telecommunity.com/dist/ez_setup.py ez_setup.py] and execute it as follows:\n\n{{{\n$ python ez_setup.py\n}}}\n\nIf the `ez_setup.py` script fails to install the setuptools release, you can download it from [http://www.python.org/pypi/setuptools PyPI] and install it manually.\n\nPlugins can also consist of a single `.py` file dropped directly into either the project\'s or the shared `plugins` directory.\n\n== Installing a Trac plugin ==\n\n=== For a single project ===\n\nPlugins are typically packaged as [http://peak.telecommunity.com/DevCenter/PythonEggs Python eggs]. That means they are .zip archives with the file extension `.egg`.\n\nIf you have downloaded a source distribution of a plugin, and want to build the `.egg` file:\n\n * Unpack the source. It should provide `setup.py`.\n * Run:\n\n{{{\n$ python setup.py bdist_egg\n}}}\n\nYou should have a *.egg file. Examine the output of running python to find where this was created.\n\nOnce you have the plugin archive, copy it into the `plugins` directory of the [wiki:TracEnvironment project environment]. Also, make sure that the web server has sufficient permissions to read the plugin egg. Then restart the web server. If you are running as a [wiki:TracStandalone \"tracd\" standalone server], restart tracd (kill and run again).\n\nTo uninstall a plugin installed this way, remove the egg from the `plugins` directory and restart the web server.\n\nNote: the Python version that the egg is built with \'\'must\'\' match the Python version with which Trac is run. For example, if you\'re running Trac under Python 2.5, but have upgraded your standalone Python to 2.6, the eggs won\'t be recognized.\n\nNote also: in a multi-project setup, a pool of Python interpreter instances will be dynamically allocated to projects based on need; since plugins occupy a place in Python\'s module system, the first version of any given plugin to be loaded will be used for all projects. In other words, you cannot use different versions of a single plugin in two projects of a multi-project setup. It may be safer to install plugins for all projects (see below), and then enable them selectively on a project-by-project basis.\n\n=== For all projects ===\n\n==== With an .egg file ====\n\nSome plugins (such as [trac:SpamFilter SpamFilter]) are downloadable as an `.egg` file that can be installed with the `easy_install` program:\n{{{\neasy_install TracSpamFilter\n}}}\n\nIf `easy_install` is not on your system, see the Requirements section above to install it. Windows users will need to add the `Scripts` directory of their Python installation (for example, `C:\\Python24\\Scripts`) to their `PATH` environment variable (see [http://peak.telecommunity.com/DevCenter/EasyInstall#windows-notes easy_install Windows notes] for more information).\n\nIf Trac reports permission errors after installing a zipped egg, and you would rather not bother providing a egg cache directory writable by the web server, you can get around it by simply unzipping the egg. Just pass `--always-unzip` to `easy_install`:\n{{{\neasy_install --always-unzip TracSpamFilter-0.4.1_r10106-py2.6.egg\n}}}\nYou should end up with a directory having the same name as the zipped egg (complete with `.egg` extension) and containing its uncompressed contents.\n\nTrac also searches for plugins installed in the shared plugins directory \'\'(since 0.10)\'\'; see TracIni#GlobalConfiguration. This is a convenient way to share the installation of plugins across several, but not all, environments.\n\n==== From source ====\n\n`easy_install` makes installing from source a snap. Just give it the URL to either a Subversion repository or a tarball/zip of the source:\n{{{\neasy_install http://svn.edgewall.com/repos/trac/plugins/0.12/spam-filter-captcha\n}}}\n\n==== Enabling the plugin ====\n\nUnlike plugins installed per-environment, you\'ll have to explicitly enable globally installed plugins via [wiki:TracIni trac.ini]. This also applies to plugins installed in the shared plugins directory, i.e. the path specified in the `[inherit] plugins_dir` configuration option. \n\nThis is done in the `[components]` section of the configuration file. For example:\n{{{\n[components]\ntracspamfilter.* = enabled\n}}}\n\nThe name of the option is the Python package of the plugin. This should be specified in the documentation of the plugin, but can also be easily discovered by looking at the source (look for a top-level directory that contains a file named `__init__.py`).\n\nNote: After installing the plugin, you must restart your web server.\n\n==== Uninstalling ====\n\n`easy_install` or `python setup.py` does not have an uninstall feature. Hower, it is usually quite trivial to remove a globally-installed egg and reference:\n\n 1. Do `easy_install -m [plugin name]` to remove references from `$PYTHONLIB/site-packages/easy-install.pth` when the plugin installed by setuptools.\n 1. Delete executables from `/usr/bin`, `/usr/local/bin`, or `C:\\\\Python*\\Scripts`. To find what executables are involved, refer to the `[console-script]` section of `setup.py`.\n 1. Delete the .egg file or folder from where it\'s installed (usually inside `$PYTHONLIB/site-packages/`).\n 1. Restart the web server.\n\nIf you are uncertain about the location of the egg, here\'s a small tip to help locate an egg (or any package). Just replace `myplugin` with whatever namespace the plugin uses (as used when enabling the plugin):\n{{{\n>>> import myplugin\n>>> print myplugin.__file__\n/opt/local/python24/lib/site-packages/myplugin-0.4.2-py2.4.egg/myplugin/__init__.pyc\n}}}\n\n== Setting up the plugin cache ==\n\nSome plugins will need to be extracted by the Python eggs runtime (`pkg_resources`), so that their contents are actual files on the file system. The directory in which they are extracted defaults to `.python-eggs` in the home directory of the current user, which may or may not be a problem. You can, however, override the default location using the `PYTHON_EGG_CACHE` environment variable.\n\nTo do this from the Apache configuration, use the `SetEnv` directive:\n{{{\nSetEnv PYTHON_EGG_CACHE /path/to/dir\n}}}\n\nThis works whether you\'re using the [wiki:TracCgi CGI] or the [wiki:TracModPython mod_python] front-end. Put this directive next to where you set the path to the [wiki:TracEnvironment Trac environment], i.e. in the same `<Location>` block.\n\nFor example (for CGI):\n{{{\n <Location /trac>\n   SetEnv TRAC_ENV /path/to/projenv\n   SetEnv PYTHON_EGG_CACHE /path/to/dir\n </Location>\n}}}\n\nOr (for mod_python):\n{{{\n <Location /trac>\n   SetHandler mod_python\n   ...\n   SetEnv PYTHON_EGG_CACHE /path/to/dir\n </Location>\n}}}\n\n \'\'Note: !SetEnv requires the `mod_env` module which needs to be activated for Apache. In this case the !SetEnv directive can also be used in the `mod_python` Location block.\'\'\n\nFor [wiki:TracFastCgi FastCGI], you\'ll need to `-initial-env` option, or whatever is provided by your web server for setting environment variables. \n\n \'\'Note: that if you already use -initial-env to set the project directory for either a single project or parent you will need to add an additional -initial-env directive to the !FastCgiConfig directive. I.e.\n\n{{{\nFastCgiConfig -initial-env TRAC_ENV=/var/lib/trac -initial-env PYTHON_EGG_CACHE=/var/lib/trac/plugin-cache\n}}}\n\n=== About hook scripts ===\n\nIf you\'ve set up some subversion hook scripts that call the Trac engine, such as the post-commit hook script provided in the `/contrib` directory, make sure you define the `PYTHON_EGG_CACHE` environment variable within these scripts as well.\n\n== Troubleshooting ==\n\n=== Is setuptools properly installed? ===\n\nTry this from the command line:\n{{{\n$ python -c \"import pkg_resources\"\n}}}\n\nIf you get \'\'\'no output\'\'\', setuptools \'\'\'is\'\'\' installed. Otherwise, you\'ll need to install it before plugins will work in Trac.\n\n=== Did you get the correct version of the Python egg? ===\n\nPython eggs have the Python version encoded in their filename. For example, `MyPlugin-1.0-py2.5.egg` is an egg for Python 2.5, and will \'\'\'not\'\'\' be loaded if you\'re running a different Python version (such as 2.4 or 2.6).\n\nAlso, verify that the egg file you downloaded is indeed a .zip archive. If you downloaded it from a Trac site, chances are you downloaded the HTML preview page instead.\n\n=== Is the plugin enabled? ===\n\nIf you install a plugin globally (i.e., \'\'not\'\' inside the `plugins` directory of the Trac project environment), you must explicitly enable it in [TracIni trac.ini]. Make sure that:\n\n * ...you actually added the necessary line(s) to the `[components]` section.\n * ...the package/module names are correct.\n * ...the value is \"enabled\", not \"enable\" or \"Enable\".\n\n=== Check the permissions on the .egg file ===\n\nTrac must be able to read the .egg file. \n\n=== Check the log files ===\n\nEnable [wiki:TracLogging logging] and set the log level to `DEBUG`, then watch the log file for messages about loading plugins.\n\n=== Verify you have proper permissions ===\n\nSome plugins require you have special permissions in order to use them. [trac:WebAdmin WebAdmin], for example, requires the user to have TRAC_ADMIN permissions for it to show up on the navigation bar.\n\n=== Is the wrong version of the plugin loading? ===\n\nIf you put your plugins inside plugins directories, and certainly if you have more than one project, you need to make sure that the correct version of the plugin is loading. Here are some basic rules:\n\n * Only one version of the plugin can be loaded for each running Trac server (i.e., each Python process). The Python namespaces and module list will be shared, and it cannot handle duplicates. Whether a plugin is `enabled` or `disabled` makes no difference.\n * A globally-installed plugin (typically `setup.py install`) will override any version in the global or project plugins directories. A plugin from the global plugins directory will be located \'\'before\'\' any project plugins directory.\n * If your Trac server hosts more than one project (as with `TRAC_ENV_PARENT_DIR` setups), having two versions of a plugin in two different projects will give uncertain results. Only one of them will load, and the one loaded will be shared by both projects. Trac will load the first plugin found, usually from the project that receives the first request.\n * Having more than one version listed inside Python site-packages is fine (i.e., installed with `setup.py install`) -- setuptools will make sure you get the version installed most recently. However, don\'t store more than one version inside a global or project plugins directory -- neither version number nor installed date will matter at all. There is no way to determine which one will be located first when Trac searches the directory for plugins.\n\n=== If all of the above failed ===\n\nOkay, so the logs don\'t mention plugins, the egg is readable, the Python version is correct, \'\'and\'\' the egg has been installed globally (and is enabled in trac.ini)... and it \'\'still\'\' doesn\'t work or give any error messages or any other indication as to why. Hop on the [trac:IrcChannel IrcChannel] and ask away!\n\n== Web-based plugin administration ==\n\nThe WebAdmin plugin (part of the core since 0.11) offers limited support for plugin configuration through the web to users with `TRAC_ADMIN` permission:\n\n* en/disabling installed plugins\n* installing plugins by uploading them as eggs\n\nYou probably want to disable the second function for security reasons: in `trac.ini`, in the `[components]` section, add the line\n{{{\ntrac.admin.web_ui.PluginAdminPanel = disabled\n}}}\nThis disables the whole panel, so the first function will no longer be available either.\n\n----\nSee also TracGuide, [trac:PluginList plugin list], [trac:TracDev/ComponentArchitecture component architecture].',NULL,NULL),('TracQuery',1,1291894092000000,'trac','127.0.0.1','= Trac Ticket Queries =\n[[TracGuideToc]]\n\nIn addition to [wiki:TracReports reports], Trac provides support for \'\'custom ticket queries\'\', used to display lists of tickets meeting a specified set of criteria. \n\nTo configure and execute a custom query, switch to the \'\'View Tickets\'\' module from the navigation bar, and select the \'\'Custom Query\'\' link.\n\n== Filters ==\nWhen you first go to the query page the default filters will display all open tickets, or if you\'re logged in it will display open tickets assigned to you.  Current filters can be removed by clicking the button to the right with the minus sign on the label.  New filters are added from the pulldown list in the bottom-right corner of the filters box.  Filters with either a text box or a pulldown menu of options can be added multiple times to perform an \'\'or\'\' of the criteria.\n\nYou can use the fields just below the filters box to group the results based on a field, or display the full description for each ticket.\n\nOnce you\'ve edited your filters click the \'\'Update\'\' button to refresh your results.\n\n== Navigating Tickets ==\nClicking on one of the query results will take you to that ticket.  You can navigate through the results by clicking the \'\'Next Ticket\'\' or \'\'Previous Ticket\'\' links just below the main menu bar, or click the \'\'Back to Query\'\' link to return to the query page.  \n\nYou can safely edit any of the tickets and continue to navigate through the results using the \'\'Next/Previous/Back to Query\'\' links after saving your results.  When you return to the query \'\'any tickets which were edited\'\' will be displayed with italicized text.  If one of the tickets was edited such that [[html(<span style=\"color: grey\">it no longer matches the query criteria </span>)]] the text will also be greyed. Lastly, if \'\'\'a new ticket matching the query criteria has been created\'\'\', it will be shown in bold. \n\nThe query results can be refreshed and cleared of these status indicators by clicking the \'\'Update\'\' button again.\n\n== Saving Queries ==\n\nWhile Trac does not yet allow saving a named query and somehow making it available in a navigable list, you can save references to queries in Wiki content, as described below.\n\n=== Using TracLinks ===\n\nYou may want to save some queries so that you can come back to them later.  You can do this by making a link to the query from any Wiki page.\n{{{\n[query:status=new|assigned|reopened&version=1.0 Active tickets against 1.0]\n}}}\n\nWhich is displayed as:\n  [query:status=new|assigned|reopened&version=1.0 Active tickets against 1.0]\n\nThis uses a very simple query language to specify the criteria (see [wiki:TracQuery#QueryLanguage Query Language]).\n\nAlternatively, you can copy the query string of a query and paste that into the Wiki link, including the leading `?` character:\n{{{\n[query:?status=new&status=assigned&status=reopened&group=owner Assigned tickets by owner]\n}}}\n\nWhich is displayed as:\n  [query:?status=new&status=assigned&status=reopened&group=owner Assigned tickets by owner]\n\n=== Using the `[[TicketQuery]]` Macro ===\n\nThe [trac:TicketQuery TicketQuery] macro lets you display lists of tickets matching certain criteria anywhere you can use WikiFormatting.\n\nExample:\n{{{\n[[TicketQuery(version=0.6|0.7&resolution=duplicate)]]\n}}}\n\nThis is displayed as:\n  [[TicketQuery(version=0.6|0.7&resolution=duplicate)]]\n\nJust like the [wiki:TracQuery#UsingTracLinks query: wiki links], the parameter of this macro expects a query string formatted according to the rules of the simple [wiki:TracQuery#QueryLanguage ticket query language].\n\nA more compact representation without the ticket summaries is also available:\n{{{\n[[TicketQuery(version=0.6|0.7&resolution=duplicate, compact)]]\n}}}\n\nThis is displayed as:\n  [[TicketQuery(version=0.6|0.7&resolution=duplicate, compact)]]\n\nFinally if you wish to receive only the number of defects that match the query using the ``count`` parameter.\n\n{{{\n[[TicketQuery(version=0.6|0.7&resolution=duplicate, count)]]\n}}}\n\nThis is displayed as:\n  [[TicketQuery(version=0.6|0.7&resolution=duplicate, count)]]\n\n=== Customizing the \'\'table\'\' format ===\nYou can also customize the columns displayed in the table format (\'\'format=table\'\') by using \'\'col=<field>\'\' - you can specify multiple fields and what order they are displayed by placing pipes (`|`) between the columns like below:\n\n{{{\n[[TicketQuery(max=3,status=closed,order=id,desc=1,format=table,col=resolution|summary|owner|reporter)]]\n}}}\n\nThis is displayed as:\n[[TicketQuery(max=3,status=closed,order=id,desc=1,format=table,col=resolution|summary|owner|reporter)]]\n\n==== Full rows ====\nIn \'\'table\'\' format you can also have full rows by using \'\'rows=<field>\'\' like below:\n\n{{{\n[[TicketQuery(max=3,status=closed,order=id,desc=1,format=table,col=resolution|summary|owner|reporter,rows=description)]]\n}}}\n\nThis is displayed as:\n[[TicketQuery(max=3,status=closed,order=id,desc=1,format=table,col=resolution|summary|owner|reporter,rows=description)]]\n\n\n=== Query Language ===\n\n`query:` TracLinks and the `[[TicketQuery]]` macro both use a mini “query language” for specifying query filters. Basically, the filters are separated by ampersands (`&`). Each filter then consists of the ticket field name, an operator, and one or more values. More than one value are separated by a pipe (`|`), meaning that the filter matches any of the values.\n\nThe available operators are:\n|| \'\'\'`=`\'\'\' || the field content exactly matches the one of the values ||\n|| \'\'\'`~=`\'\'\' || the field content contains one or more of the values ||\n|| \'\'\'`^=`\'\'\' || the field content starts with one of the values ||\n|| \'\'\'`$=`\'\'\' || the field content ends with one of the values ||\n\nAll of these operators can also be negated:\n|| \'\'\'`!=`\'\'\' || the field content matches none of the values ||\n|| \'\'\'`!~=`\'\'\' || the field content does not contain any of the values ||\n|| \'\'\'`!^=`\'\'\' || the field content does not start with any of the values ||\n|| \'\'\'`!$=`\'\'\' || the field content does not end with any of the values ||\n\n\n----\nSee also: TracTickets, TracReports, TracGuide',NULL,NULL),('TracQuery',2,1397068026256720,'trac','127.0.0.1','= Trac Ticket Queries =\n[[TracGuideToc]]\n\nIn addition to [wiki:TracReports reports], Trac provides support for \'\'custom ticket queries\'\', used to display lists of tickets meeting a specified set of criteria. \n\nTo configure and execute a custom query, switch to the \'\'View Tickets\'\' module from the navigation bar, and select the \'\'Custom Query\'\' link.\n\n== Filters ==\n\nWhen you first go to the query page the default filter will display tickets relevant to you:\n * If logged in then all open tickets it will display open tickets assigned to you.\n * If not logged in but you have specified a name or email address in the preferences then it will display all open tickets where your email (or name if email not defined) is in the CC list.\n * If not logged and no name/email defined in the preferences then all open issues are displayed.\n\nCurrent filters can be removed by clicking the button to the left with the minus sign on the label.  New filters are added from the pulldown lists at the bottom corners of the filters box (\'And\' conditions on the left, \'Or\' conditions on the right).  Filters with either a text box or a pulldown menu of options can be added multiple times to perform an \'\'or\'\' of the criteria.\n\nYou can use the fields just below the filters box to group the results based on a field, or display the full description for each ticket.\n\nOnce you\'ve edited your filters click the \'\'Update\'\' button to refresh your results.\n\n== Navigating Tickets ==\nClicking on one of the query results will take you to that ticket.  You can navigate through the results by clicking the \'\'Next Ticket\'\' or \'\'Previous Ticket\'\' links just below the main menu bar, or click the \'\'Back to Query\'\' link to return to the query page.  \n\nYou can safely edit any of the tickets and continue to navigate through the results using the \'\'!Next/Previous/Back to Query\'\' links after saving your results.  When you return to the query \'\'any tickets which were edited\'\' will be displayed with italicized text.  If one of the tickets was edited such that [[html(<span style=\"color: grey\">it no longer matches the query criteria </span>)]] the text will also be greyed. Lastly, if \'\'\'a new ticket matching the query criteria has been created\'\'\', it will be shown in bold. \n\nThe query results can be refreshed and cleared of these status indicators by clicking the \'\'Update\'\' button again.\n\n== Saving Queries ==\n\nTrac allows you to save the query as a named query accessible from the reports module. To save a query ensure that you have \'\'Updated\'\' the view and then click the \'\'Save query\'\' button displayed beneath the results.\nYou can also save references to queries in Wiki content, as described below.\n\n\'\'Note:\'\' one way to easily build queries like the ones below, you can build and test the queries in the Custom report module and when ready - click \'\'Save query\'\'. This will build the query string for you. All you need to do is remove the extra line breaks.\n\n\'\'Note:\'\' you must have the \'\'\'REPORT_CREATE\'\'\' permission in order to save queries to the list of default reports. The \'\'Save query\'\' button will only appear if you are logged in as a user that has been granted this permission. If your account does not have permission to create reports, you can still use the methods below to save a query.\n\n\n=== Using TracLinks ===\n\nYou may want to save some queries so that you can come back to them later.  You can do this by making a link to the query from any Wiki page.\n{{{\n[query:status=new|assigned|reopened&version=1.0 Active tickets against 1.0]\n}}}\n\nWhich is displayed as:\n  [query:status=new|assigned|reopened&version=1.0 Active tickets against 1.0]\n\nThis uses a very simple query language to specify the criteria (see [wiki:TracQuery#QueryLanguage Query Language]).\n\nAlternatively, you can copy the query string of a query and paste that into the Wiki link, including the leading `?` character:\n{{{\n[query:?status=new&status=assigned&status=reopened&group=owner Assigned tickets by owner]\n}}}\n\nWhich is displayed as:\n  [query:?status=new&status=assigned&status=reopened&group=owner Assigned tickets by owner]\n\n=== Using the `[[TicketQuery]]` Macro ===\n\nThe [trac:TicketQuery TicketQuery] macro lets you display lists of tickets matching certain criteria anywhere you can use WikiFormatting.\n\nExample:\n{{{\n[[TicketQuery(version=0.6|0.7&resolution=duplicate)]]\n}}}\n\nThis is displayed as:\n  [[TicketQuery(version=0.6|0.7&resolution=duplicate)]]\n\nJust like the [wiki:TracQuery#UsingTracLinks query: wiki links], the parameter of this macro expects a query string formatted according to the rules of the simple [wiki:TracQuery#QueryLanguage ticket query language]. This also allows displaying the link and description of a single ticket:\n{{{\n[[TicketQuery(id=123)]]\n}}}\n\nThis is displayed as:\n  [[TicketQuery(id=123)]]\n\nA more compact representation without the ticket summaries is also available:\n{{{\n[[TicketQuery(version=0.6|0.7&resolution=duplicate, compact)]]\n}}}\n\nThis is displayed as:\n  [[TicketQuery(version=0.6|0.7&resolution=duplicate, compact)]]\n\nFinally, if you wish to receive only the number of defects that match the query, use the ``count`` parameter.\n\n{{{\n[[TicketQuery(version=0.6|0.7&resolution=duplicate, count)]]\n}}}\n\nThis is displayed as:\n  [[TicketQuery(version=0.6|0.7&resolution=duplicate, count)]]\n\n=== Customizing the \'\'table\'\' format ===\nYou can also customize the columns displayed in the table format (\'\'format=table\'\') by using \'\'col=<field>\'\' - you can specify multiple fields and what order they are displayed by placing pipes (`|`) between the columns like below:\n\n{{{\n[[TicketQuery(max=3,status=closed,order=id,desc=1,format=table,col=resolution|summary|owner|reporter)]]\n}}}\n\nThis is displayed as:\n[[TicketQuery(max=3,status=closed,order=id,desc=1,format=table,col=resolution|summary|owner|reporter)]]\n\n==== Full rows ====\nIn \'\'table\'\' format you can also have full rows by using \'\'rows=<field>\'\' like below:\n\n{{{\n[[TicketQuery(max=3,status=closed,order=id,desc=1,format=table,col=resolution|summary|owner|reporter,rows=description)]]\n}}}\n\nThis is displayed as:\n[[TicketQuery(max=3,status=closed,order=id,desc=1,format=table,col=resolution|summary|owner|reporter,rows=description)]]\n\n\n=== Query Language ===\n\n`query:` TracLinks and the `[[TicketQuery]]` macro both use a mini “query language” for specifying query filters. Basically, the filters are separated by ampersands (`&`). Each filter then consists of the ticket field name, an operator, and one or more values. More than one value are separated by a pipe (`|`), meaning that the filter matches any of the values. To include a literal `&` or `|` in a value, escape the character with a backslash (`\\`).\n\nThe available operators are:\n|| \'\'\'`=`\'\'\' || the field content exactly matches one of the values ||\n|| \'\'\'`~=`\'\'\' || the field content contains one or more of the values ||\n|| \'\'\'`^=`\'\'\' || the field content starts with one of the values ||\n|| \'\'\'`$=`\'\'\' || the field content ends with one of the values ||\n\nAll of these operators can also be negated:\n|| \'\'\'`!=`\'\'\' || the field content matches none of the values ||\n|| \'\'\'`!~=`\'\'\' || the field content does not contain any of the values ||\n|| \'\'\'`!^=`\'\'\' || the field content does not start with any of the values ||\n|| \'\'\'`!$=`\'\'\' || the field content does not end with any of the values ||\n\nThe date fields `created` and `modified` can be constrained by using the `=` operator and specifying a value containing two dates separated by two dots (`..`). Either end of the date range can be left empty, meaning that the corresponding end of the range is open. The date parser understands a few natural date specifications like \"3 weeks ago\", \"last month\" and \"now\", as well as Bugzilla-style date specifications like \"1d\", \"2w\", \"3m\" or \"4y\" for 1 day, 2 weeks, 3 months and 4 years, respectively. Spaces in date specifications can be left out to avoid having to quote the query string. \n|| \'\'\'`created=2007-01-01..2008-01-01`\'\'\' || query tickets created in 2007 ||\n|| \'\'\'`created=lastmonth..thismonth`\'\'\' || query tickets created during the previous month ||\n|| \'\'\'`modified=1weekago..`\'\'\' || query tickets that have been modified in the last week ||\n|| \'\'\'`modified=..30daysago`\'\'\' || query tickets that have been inactive for the last 30 days ||\n\n----\nSee also: TracTickets, TracReports, TracGuide\n',NULL,NULL),('TracReports',1,1291894092000000,'trac','127.0.0.1','= Trac Reports =\n[[TracGuideToc]]\n\nThe Trac reports module provides a simple, yet powerful reporting facility\nto present information about tickets in the Trac database.\n\nRather than have its own report definition format, TracReports relies on standard SQL\n`SELECT` statements for custom report definition. \n\n  \'\'\'Note:\'\'\' \'\'The report module is being phased out in its current form because it seriously limits the ability of the Trac team to make adjustments to the underlying database schema. We believe that the [wiki:TracQuery query module] is a good replacement that provides more flexibility and better usability. While there are certain reports that cannot yet be handled by the query module, we intend to further enhance it so that at some point the reports module can be completely removed. This also means that there will be no major enhancements to the report module anymore.\'\'\n\n  \'\'You can already completely replace the reports module by the query module simply by disabling the former in [wiki:TracIni trac.ini]:\'\'\n  {{{\n  [components]\n  trac.ticket.report.* = disabled\n  }}}\n  \'\'This will make the query module the default handler for the “View Tickets” navigation item. We encourage you to try this configuration and report back what kind of features of reports you are missing, if any.\'\'\n\n\nA report consists of these basic parts:\n * \'\'\'ID\'\'\' -- Unique (sequential) identifier \n * \'\'\'Title\'\'\'  -- Descriptive title\n * \'\'\'Description\'\'\'  -- A brief description of the report, in WikiFormatting text.\n * \'\'\'Report Body\'\'\' -- List of results from report query, formatted according to the methods described below.\n * \'\'\'Footer\'\'\' -- Links to alternative download formats for this report.\n\n== Changing Sort Order ==\nSimple reports - ungrouped reports to be specific - can be changed to be sorted by any column simply by clicking the column header. \n\nIf a column header is a hyperlink (red), click the column you would like to sort by. Clicking the same header again reverses the order.\n\n== Changing Report Numbering ==\nThere may be instances where you need to change the ID of the report, perhaps to organize the reports better. At present this requires changes to the trac database. The \'\'report\'\' table has the following schema (as of 0.10):\n * id integer PRIMARY KEY\n * author text\n * title text\n * query text\n * description text\nChanging the ID changes the shown order and number in the \'\'Available Reports\'\' list and the report\'s perma-link. This is done by running something like:\n{{{\nupdate report set id=5 where id=3;\n}}}\nKeep in mind that the integrity has to be maintained (i.e., ID has to be unique, and you don\'t want to exceed the max, since that\'s managed by SQLite someplace).\n\nYou may also need to update or remove the report number stored in the report or query.\n\n== Navigating Tickets ==\nClicking on one of the report results will take you to that ticket. You can navigate through the results by clicking the \'\'Next Ticket\'\' or \'\'Previous Ticket\'\' links just below the main menu bar, or click the \'\'Back to Report\'\' link to return to the report page.\n\nYou can safely edit any of the tickets and continue to navigate through the results using the Next/Previous/Back to Report links after saving your results, but when you return to the report, there will be no hint about what has changed, as would happen if you were navigating a list of tickets obtained from a query (see TracQuery#NavigatingTickets). \'\'(since 0.11)\'\'\n\n== Alternative Download Formats ==\nAside from the default HTML view, reports can also be exported in a number of alternative formats.\nAt the bottom of the report page, you will find a list of available data formats. Click the desired link to \ndownload the alternative report format.\n\n=== Comma-delimited - CSV (Comma Separated Values) ===\nExport the report as plain text, each row on its own line, columns separated by a single comma (\',\').\n\'\'\'Note:\'\'\' Carriage returns, line feeds, and commas are stripped from column data to preserve the CSV structure.\n\n=== Tab-delimited ===\nLike above, but uses tabs (\\t) instead of comma.\n\n=== RSS - XML Content Syndication ===\nAll reports support syndication using XML/RSS 2.0. To subscribe to an RSS feed, click the orange \'XML\' icon at the bottom of the page. See TracRss for general information on RSS support in Trac.\n\n----\n\n== Creating Custom Reports ==\n\n\'\'Creating a custom report requires a comfortable knowledge of SQL.\'\'\n\nA report is basically a single named SQL query, executed and presented by\nTrac.  Reports can be viewed and created from a custom SQL expression directly\nin from the web interface.\n\nTypically, a report consists of a SELECT-expression from the \'ticket\' table,\nusing the available columns and sorting the way you want it.\n\n== Ticket columns ==\nThe \'\'ticket\'\' table has the following columns:\n * id\n * type\n * time\n * changetime\n * component\n * severity  \n * priority \n * owner\n * reporter\n * cc\n * version\n * milestone\n * status\n * resolution\n * summary\n * description\n * keywords\n\nSee TracTickets for a detailed description of the column fields.\n\n\'\'\'all active tickets, sorted by priority and time\'\'\'\n\n\'\'\'Example:\'\'\' \'\'All active tickets, sorted by priority and time\'\'\n{{{\nSELECT id AS ticket, status, severity, priority, owner, \n       time as created, summary FROM ticket \n  WHERE status IN (\'new\', \'assigned\', \'reopened\')\n  ORDER BY priority, time\n}}}\n\n\n----\n\n\n== Advanced Reports: Dynamic Variables ==\nFor more flexible reports, Trac supports the use of \'\'dynamic variables\'\' in report SQL statements. \nIn short, dynamic variables are \'\'special\'\' strings that are replaced by custom data before query execution.\n\n=== Using Variables in a Query ===\nThe syntax for dynamic variables is simple, any upper case word beginning with \'$\' is considered a variable.\n\nExample:\n{{{\nSELECT id AS ticket,summary FROM ticket WHERE priority=$PRIORITY\n}}}\n\nTo assign a value to $PRIORITY when viewing the report, you must define it as an argument in the report URL, leaving out the leading \'$\'.\n\nExample:\n{{{\n http://trac.edgewall.org/reports/14?PRIORITY=high\n}}}\n\nTo use multiple variables, separate them with an \'&\'.\n\nExample:\n{{{\n http://trac.edgewall.org/reports/14?PRIORITY=high&SEVERITY=critical\n}}}\n\n\n=== Special/Constant Variables ===\nThere is one \'\'magic\'\' dynamic variable to allow practical reports, its value automatically set without having to change the URL. \n\n * $USER -- Username of logged in user.\n\nExample (\'\'List all tickets assigned to me\'\'):\n{{{\nSELECT id AS ticket,summary FROM ticket WHERE owner=$USER\n}}}\n\n\n----\n\n\n== Advanced Reports: Custom Formatting ==\nTrac is also capable of more advanced reports, including custom layouts,\nresult grouping and user-defined CSS styles. To create such reports, we\'ll use\nspecialized SQL statements to control the output of the Trac report engine.\n\n== Special Columns ==\nTo format reports, TracReports looks for \'magic\' column names in the query\nresult. These \'magic\' names are processed and affect the layout and style of the \nfinal report.\n\n=== Automatically formatted columns ===\n * \'\'\'ticket\'\'\' -- Ticket ID number. Becomes a hyperlink to that ticket. \n * \'\'\'id\'\'\' -- same as \'\'\'ticket\'\'\' above when \'\'\'realm\'\'\' is not set\n * \'\'\'realm\'\'\' -- together with \'\'\'id\'\'\', can be used to create links to other resources than tickets (e.g. a realm of \'\'wiki\'\' and an \'\'id\'\' to a page name will create a link to that wiki page)\n * \'\'\'created, modified, date, time\'\'\' -- Format cell as a date and/or time.\n * \'\'\'description\'\'\' -- Ticket description field, parsed through the wiki engine.\n\n\'\'\'Example:\'\'\'\n{{{\nSELECT id as ticket, created, status, summary FROM ticket \n}}}\n\nThose columns can also be defined but marked as hidden, see [#column-syntax below].\n\n=== Custom formatting columns ===\nColumns whose names begin and end with 2 underscores (Example: \'\'\'`__color__`\'\'\') are\nassumed to be \'\'formatting hints\'\', affecting the appearance of the row.\n \n * \'\'\'`__group__`\'\'\' -- Group results based on values in this column. Each group will have its own header and table.\n * \'\'\'`__color__`\'\'\' -- Should be a numeric value ranging from 1 to 5 to select a pre-defined row color. Typically used to color rows by issue priority.\n{{{\n#!html\n<div style=\"margin-left:7.5em\">Defaults: \n<span style=\"border: none; color: #333; background: transparent;  font-size: 85%; background: #fdc; border-color: #e88; color: #a22\">Color 1</span>\n<span style=\"border: none; color: #333; background: transparent;  font-size: 85%; background: #ffb; border-color: #eea; color: #880\">Color 2</span>\n<span style=\"border: none; color: #333; background: transparent;  font-size: 85%; background: #fbfbfb; border-color: #ddd; color: #444\">Color 3</span>\n<span style=\"border: none; color: #333; background: transparent; font-size: 85%; background: #e7ffff; border-color: #cee; color: #099\">Color 4</span>\n<span style=\"border: none; color: #333; background: transparent;  font-size: 85%; background: #e7eeff; border-color: #cde; color: #469\">Color 5</span>\n</div>\n}}}\n * \'\'\'`__style__`\'\'\' -- A custom CSS style expression to use for the current row. \n\n\'\'\'Example:\'\'\' \'\'List active tickets, grouped by milestone, colored by priority\'\'\n{{{\nSELECT p.value AS __color__,\n     t.milestone AS __group__,\n     (CASE owner WHEN \'daniel\' THEN \'font-weight: bold; background: red;\' ELSE \'\' END) AS __style__,\n       t.id AS ticket, summary\n  FROM ticket t,enum p\n  WHERE t.status IN (\'new\', \'assigned\', \'reopened\') \n    AND p.name=t.priority AND p.type=\'priority\'\n  ORDER BY t.milestone, p.value, t.severity, t.time\n}}}\n\n\'\'\'Note:\'\'\' A table join is used to match \'\'ticket\'\' priorities with their\nnumeric representation from the \'\'enum\'\' table.\n\n=== Changing layout of report rows === #column-syntax\nBy default, all columns on each row are display on a single row in the HTML\nreport, possibly formatted according to the descriptions above. However, it\'s\nalso possible to create multi-line report entries.\n\n * \'\'\'`column_`\'\'\' -- \'\'Break row after this\'\'. By appending an underscore (\'_\') to the column name, the remaining columns will be be continued on a second line.\n\n * \'\'\'`_column_`\'\'\' -- \'\'Full row\'\'. By adding an underscore (\'_\') both at the beginning and the end of a column name, the data will be shown on a separate row.\n\n * \'\'\'`_column`\'\'\'  --  \'\'Hide data\'\'. Prepending an underscore (\'_\') to a column name instructs Trac to hide the contents from the HTML output. This is useful for information to be visible only if downloaded in other formats (like CSV or RSS/XML).\n   This can be used to hide any kind of column, even important ones required for identifying the resource, e.g. `id as _id` will hide the \'\'\'Id\'\'\' column but the link to the ticket will be present.\n\n\'\'\'Example:\'\'\' \'\'List active tickets, grouped by milestone, colored by priority, with  description and multi-line layout\'\'\n\n{{{\nSELECT p.value AS __color__,\n       t.milestone AS __group__,\n       (CASE owner \n          WHEN \'daniel\' THEN \'font-weight: bold; background: red;\' \n          ELSE \'\' END) AS __style__,\n       t.id AS ticket, summary AS summary_,             -- ## Break line here\n       component,version, severity, milestone, status, owner,\n       time AS created, changetime AS modified,         -- ## Dates are formatted\n       description AS _description_,                    -- ## Uses a full row\n       changetime AS _changetime, reporter AS _reporter -- ## Hidden from HTML output\n  FROM ticket t,enum p\n  WHERE t.status IN (\'new\', \'assigned\', \'reopened\') \n    AND p.name=t.priority AND p.type=\'priority\'\n  ORDER BY t.milestone, p.value, t.severity, t.time\n}}}\n\n=== Reporting on custom fields ===\n\nIf you have added custom fields to your tickets (a feature since v0.8, see TracTicketsCustomFields), you can write a SQL query to cover them. You\'ll need to make a join on the ticket_custom table, but this isn\'t especially easy.\n\nIf you have tickets in the database \'\'before\'\' you declare the extra fields in trac.ini, there will be no associated data in the ticket_custom table. To get around this, use SQL\'s \"LEFT OUTER JOIN\" clauses. See [trac:TracIniReportCustomFieldSample TracIniReportCustomFieldSample] for some examples.\n\n\'\'\'Note that you need to set up permissions in order to see the buttons for adding or editing reports.\'\'\'\n\n----\nSee also: TracTickets, TracQuery, TracGuide, [http://www.sqlite.org/lang_expr.html Query Language Understood by SQLite]',NULL,NULL),('TracReports',2,1397068026235807,'trac','127.0.0.1','= Trac Reports =\n[[TracGuideToc]]\n\nThe Trac reports module provides a simple, yet powerful reporting facility\nto present information about tickets in the Trac database.\n\nRather than have its own report definition format, TracReports relies on standard SQL\n`SELECT` statements for custom report definition. \n\n  \'\'\'Note:\'\'\' \'\'The report module is being phased out in its current form because it seriously limits the ability of the Trac team to make adjustments to the underlying database schema. We believe that the [wiki:TracQuery query module] is a good replacement that provides more flexibility and better usability. While there are certain reports that cannot yet be handled by the query module, we intend to further enhance it so that at some point the reports module can be completely removed. This also means that there will be no major enhancements to the report module anymore.\'\'\n\n  \'\'You can already completely replace the reports module by the query module simply by disabling the former in [wiki:TracIni trac.ini]:\'\'\n  {{{\n  [components]\n  trac.ticket.report.* = disabled\n  }}}\n  \'\'This will make the query module the default handler for the “View Tickets” navigation item. We encourage you to try this configuration and report back what kind of features of reports you are missing, if any.\'\'\n\nA report consists of these basic parts:\n * \'\'\'ID\'\'\' — Unique (sequential) identifier \n * \'\'\'Title\'\'\' — Descriptive title\n * \'\'\'Description\'\'\' — A brief description of the report, in WikiFormatting text.\n * \'\'\'Report Body\'\'\' — List of results from report query, formatted according to the methods described below.\n * \'\'\'Footer\'\'\' — Links to alternative download formats for this report.\n\n== Changing Sort Order ==\nSimple reports - ungrouped reports to be specific - can be changed to be sorted by any column simply by clicking the column header. \n\nIf a column header is a hyperlink (red), click the column you would like to sort by. Clicking the same header again reverses the order.\n\n== Changing Report Numbering ==\nThere may be instances where you need to change the ID of the report, perhaps to organize the reports better. At present this requires changes to the trac database. The \'\'report\'\' table has the following schema \'\'(since 0.10)\'\':\n * id integer PRIMARY KEY\n * author text\n * title text\n * query text\n * description text\nChanging the ID changes the shown order and number in the \'\'Available Reports\'\' list and the report\'s perma-link. This is done by running something like:\n{{{\nupdate report set id=5 where id=3;\n}}}\nKeep in mind that the integrity has to be maintained (i.e., ID has to be unique, and you don\'t want to exceed the max, since that\'s managed by SQLite someplace).\n\nYou may also need to update or remove the report number stored in the report or query.\n\n== Navigating Tickets ==\nClicking on one of the report results will take you to that ticket. You can navigate through the results by clicking the \'\'Next Ticket\'\' or \'\'Previous Ticket\'\' links just below the main menu bar, or click the \'\'Back to Report\'\' link to return to the report page.\n\nYou can safely edit any of the tickets and continue to navigate through the results using the \'\'!Next/Previous/Back to Report\'\' links after saving your results, but when you return to the report, there will be no hint about what has changed, as would happen if you were navigating a list of tickets obtained from a query (see TracQuery#NavigatingTickets). \'\'(since 0.11)\'\'\n\n== Alternative Download Formats ==\nAside from the default HTML view, reports can also be exported in a number of alternative formats.\nAt the bottom of the report page, you will find a list of available data formats. Click the desired link to \ndownload the alternative report format.\n\n=== Comma-delimited - CSV (Comma Separated Values) ===\nExport the report as plain text, each row on its own line, columns separated by a single comma (\',\').\n\'\'\'Note:\'\'\' The output is fully escaped so carriage returns, line feeds, and commas will be preserved in the output.\n\n=== Tab-delimited ===\nLike above, but uses tabs (\\t) instead of comma.\n\n=== RSS - XML Content Syndication ===\nAll reports support syndication using XML/RSS 2.0. To subscribe to an RSS feed, click the orange \'XML\' icon at the bottom of the page. See TracRss for general information on RSS support in Trac.\n\n----\n\n== Creating Custom Reports ==\n\n\'\'Creating a custom report requires a comfortable knowledge of SQL.\'\'\n\n\'\'\'Note that you need to set up [TracPermissions#Reports permissions] in order to see the buttons for adding or editing reports.\'\'\'\n\nA report is basically a single named SQL query, executed and presented by\nTrac.  Reports can be viewed and created from a custom SQL expression directly\nin the web interface.\n\nTypically, a report consists of a SELECT-expression from the \'ticket\' table,\nusing the available columns and sorting the way you want it.\n\n== Ticket columns ==\nThe \'\'ticket\'\' table has the following columns:\n * id\n * type\n * time\n * changetime\n * component\n * severity  \n * priority \n * owner\n * reporter\n * cc\n * version\n * milestone\n * status\n * resolution\n * summary\n * description\n * keywords\n\nSee TracTickets for a detailed description of the column fields.\n\nExample: \'\'\'All active tickets, sorted by priority and time\'\'\'\n{{{\nSELECT id AS ticket, status, severity, priority, owner, \n       time AS created, summary FROM ticket \n  WHERE status IN (\'new\', \'assigned\', \'reopened\')\n  ORDER BY priority, time\n}}}\n\n\n== Advanced Reports: Dynamic Variables ==\nFor more flexible reports, Trac supports the use of \'\'dynamic variables\'\' in report SQL statements. \nIn short, dynamic variables are \'\'special\'\' strings that are replaced by custom data before query execution.\n\n=== Using Variables in a Query ===\nThe syntax for dynamic variables is simple, any upper case word beginning with \'$\' is considered a variable.\n\nExample:\n{{{\nSELECT id AS ticket,summary FROM ticket WHERE priority=$PRIORITY\n}}}\n\nTo assign a value to $PRIORITY when viewing the report, you must define it as an argument in the report URL, leaving out the leading \'$\'.\n\nExample:\n{{{\n http://trac.edgewall.org/reports/14?PRIORITY=high\n}}}\n\nTo use multiple variables, separate them with an \'&\'.\n\nExample:\n{{{\n http://trac.edgewall.org/reports/14?PRIORITY=high&SEVERITY=critical\n}}}\n\nDynamic variables can also be used in the report title and description (since 1.1.1).\n\n=== !Special/Constant Variables ===\nThere is one dynamic variable whose value is set automatically (the URL does not have to be changed) to allow practical reports. \n\n * $USER — Username of logged in user.\n\nExample (\'\'List all tickets assigned to me\'\'):\n{{{\nSELECT id AS ticket,summary FROM ticket WHERE owner=$USER\n}}}\n\n\n\n== Advanced Reports: Custom Formatting ==\nTrac is also capable of more advanced reports, including custom layouts,\nresult grouping and user-defined CSS styles. To create such reports, we\'ll use\nspecialized SQL statements to control the output of the Trac report engine.\n\n=== Special Columns ===\nTo format reports, TracReports looks for \'magic\' column names in the query\nresult. These \'magic\' names are processed and affect the layout and style of the \nfinal report.\n\n=== Automatically formatted columns ===\n * \'\'\'ticket\'\'\' — Ticket ID number. Becomes a hyperlink to that ticket. \n * \'\'\'id\'\'\' — same as \'\'\'ticket\'\'\' above when \'\'\'realm\'\'\' is not set\n * \'\'\'realm\'\'\' — together with \'\'\'id\'\'\', can be used to create links to other resources than tickets (e.g. a realm of \'\'wiki\'\' and an \'\'id\'\' to a page name will create a link to that wiki page)\n * \'\'\'created, modified, date, time\'\'\' — Format cell as a date and/or time.\n * \'\'\'description\'\'\' — Ticket description field, parsed through the wiki engine.\n\n\'\'\'Example:\'\'\'\n{{{\nSELECT id AS ticket, created, status, summary FROM ticket \n}}}\n\nThose columns can also be defined but marked as hidden, see [#column-syntax below].\n\nSee trac:wiki/CookBook/Configuration/Reports for some example of creating reports for realms other than \'\'ticket\'\'.\n\n=== Custom formatting columns ===\nColumns whose names begin and end with 2 underscores (Example: \'\'\'`__color__`\'\'\') are\nassumed to be \'\'formatting hints\'\', affecting the appearance of the row.\n \n * \'\'\'`__group__`\'\'\' — Group results based on values in this column. Each group will have its own header and table.\n * \'\'\'`__grouplink__`\'\'\' — Make the header of each group a link to the specified URL. The URL is taken from the first row of each group.\n * \'\'\'`__color__`\'\'\' — Should be a numeric value ranging from 1 to 5 to select a pre-defined row color. Typically used to color rows by issue priority.\n{{{\n#!html\n<div style=\"margin-left:7.5em\">Defaults: \n<span style=\"border: none; color: #333; background: transparent;  font-size: 85%; background: #fdc; border-color: #e88; color: #a22\">Color 1</span>\n<span style=\"border: none; color: #333; background: transparent;  font-size: 85%; background: #ffb; border-color: #eea; color: #880\">Color 2</span>\n<span style=\"border: none; color: #333; background: transparent;  font-size: 85%; background: #fbfbfb; border-color: #ddd; color: #444\">Color 3</span>\n<span style=\"border: none; color: #333; background: transparent; font-size: 85%; background: #e7ffff; border-color: #cee; color: #099\">Color 4</span>\n<span style=\"border: none; color: #333; background: transparent;  font-size: 85%; background: #e7eeff; border-color: #cde; color: #469\">Color 5</span>\n</div>\n}}}\n * \'\'\'`__style__`\'\'\' — A custom CSS style expression to use on the `<tr>` element of the current row.\n * \'\'\'`__class__`\'\'\' — Zero or more space-separated CSS class names to be set on the `<tr>` element of the current row. These classes are added to the class name derived from `__color__` and the odd / even indicator.\n\n\'\'\'Example:\'\'\' \'\'List active tickets, grouped by milestone, group header linked to milestone page, colored by priority\'\'\n{{{\nSELECT p.value AS __color__,\n     t.milestone AS __group__,\n     \'../milestone/\' || t.milestone AS __grouplink__,\n     (CASE owner WHEN \'daniel\' THEN \'font-weight: bold; background: red;\' ELSE \'\' END) AS __style__,\n       t.id AS ticket, summary\n  FROM ticket t,enum p\n  WHERE t.status IN (\'new\', \'assigned\', \'reopened\') \n    AND p.name=t.priority AND p.type=\'priority\'\n  ORDER BY t.milestone, p.value, t.severity, t.time\n}}}\n\n\'\'\'Note:\'\'\' A table join is used to match \'\'ticket\'\' priorities with their\nnumeric representation from the \'\'enum\'\' table.\n\n=== Changing layout of report rows === #column-syntax\nBy default, all columns on each row are display on a single row in the HTML\nreport, possibly formatted according to the descriptions above. However, it\'s\nalso possible to create multi-line report entries.\n\n * \'\'\'`column_`\'\'\' — \'\'Break row after this\'\'. By appending an underscore (\'_\') to the column name, the remaining columns will be continued on a second line.\n\n * \'\'\'`_column_`\'\'\' — \'\'Full row\'\'. By adding an underscore (\'_\') both at the beginning and the end of a column name, the data will be shown on a separate row.\n\n * \'\'\'`_column`\'\'\' — \'\'Hide data\'\'. Prepending an underscore (\'_\') to a column name instructs Trac to hide the contents from the HTML output. This is useful for information to be visible only if downloaded in other formats (like CSV or RSS/XML).\n   This can be used to hide any kind of column, even important ones required for identifying the resource, e.g. `id as _id` will hide the \'\'\'Id\'\'\' column but the link to the ticket will be present.\n\n\'\'\'Example:\'\'\' \'\'List active tickets, grouped by milestone, colored by priority, with  description and multi-line layout\'\'\n\n{{{\nSELECT p.value AS __color__,\n       t.milestone AS __group__,\n       (CASE owner \n          WHEN \'daniel\' THEN \'font-weight: bold; background: red;\' \n          ELSE \'\' END) AS __style__,\n       t.id AS ticket, summary AS summary_,             -- ## Break line here\n       component,version, severity, milestone, status, owner,\n       time AS created, changetime AS modified,         -- ## Dates are formatted\n       description AS _description_,                    -- ## Uses a full row\n       changetime AS _changetime, reporter AS _reporter -- ## Hidden from HTML output\n  FROM ticket t,enum p\n  WHERE t.status IN (\'new\', \'assigned\', \'reopened\') \n    AND p.name=t.priority AND p.type=\'priority\'\n  ORDER BY t.milestone, p.value, t.severity, t.time\n}}}\n\n=== Reporting on custom fields ===\n\nIf you have added custom fields to your tickets (a feature since v0.8, see TracTicketsCustomFields), you can write a SQL query to cover them. You\'ll need to make a join on the ticket_custom table, but this isn\'t especially easy.\n\nIf you have tickets in the database \'\'before\'\' you declare the extra fields in trac.ini, there will be no associated data in the ticket_custom table. To get around this, use SQL\'s \"LEFT OUTER JOIN\" clauses. See [trac:TracIniReportCustomFieldSample TracIniReportCustomFieldSample] for some examples.\n\n=== A note about SQL rewriting #rewriting\n\nBeyond the relatively trivial replacement of dynamic variables, the SQL query is also altered in order to support two features of the reports:\n 1. [#sort-order changing the sort order]\n 2. pagination support (limitation of the number of result rows displayed on each page)\nIn order to support the first feature, the sort column is inserted in the `ORDER BY` clause in the first position or in the second position if a `__group__` column is specified (an `ORDER BY` clause is created if needed). In order to support pagination, a `LIMIT ... OFFSET ...` clause is appended.\nThe query might be too complex for the automatic rewrite to work correctly, resulting in an erroneous query. In this case you still have the possibility to control exactly how the rewrite is done by manually inserting the following tokens:\n - `@SORT_COLUMN@`, the place where the name of the selected sort column will be inserted,\n - `@LIMIT_OFFSET@`, the place where the pagination support clause will be added\nNote that if you write them after an SQL comment, `--`, you\'ll effectively disable rewriting if this is what you want!\n\nLet\'s take an example, consider the following SQL query:\n{{{\n-- ## 4: Assigned, Active Tickets by Owner ## --\n\n-- \n-- List assigned tickets, group by ticket owner, sorted by priority.\n-- \n\nSELECT p.value AS __color__,\n   owner AS __group__,\n   id AS ticket, summary, component, milestone, t.type AS type, severity, time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t,enum p\n  WHERE status = \'assigned\'\nAND p.name=t.priority AND p.type=\'priority\'\n  ORDER BY __group__, p.value, severity, time\n}}}\n\nThe automatic rewrite will be the following (4 rows per page, page 2, sorted by `component`):\n{{{\nSELECT p.value AS __color__,\n   owner AS __group__,\n   id AS ticket, summary, component, milestone, t.type AS type, severity, time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t,enum p\n  WHERE status = \'assigned\'\nAND p.name=t.priority AND p.type=\'priority\'\n  ORDER BY __group__ ASC, `component` ASC,  __group__, p.value, severity, time\n LIMIT 4 OFFSET 4\n}}}\n\nThe equivalent SQL query with the rewrite tokens would have been:\n{{{\nSELECT p.value AS __color__,\n   owner AS __group__,\n   id AS ticket, summary, component, milestone, t.type AS type, severity, time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter\n  FROM ticket t,enum p\n  WHERE status = \'assigned\'\nAND p.name=t.priority AND p.type=\'priority\'\n  ORDER BY __group__, @SORT_COLUMN@, p.value, severity, time\n@LIMIT_OFFSET@\n}}}\n\nIf you want to always sort first by priority and only then by the user selected sort column, simply use the following `ORDER BY` clause:\n{{{\n  ORDER BY __group__, p.value, @SORT_COLUMN@, severity, time\n}}}\n\n----\nSee also: TracTickets, TracQuery, TracGuide, [http://www.sqlite.org/lang_expr.html Query Language Understood by SQLite]\n',NULL,NULL),('TracRepositoryAdmin',1,1397068026249634,'trac','127.0.0.1','= Repository Administration =\n[[PageOutline(2-3)]]\n\n== Quick start == #QuickStart\n\n * Manage repositories in the \"Repository\" admin panel, with `trac-admin` or in the `[repositories]` section of [wiki:TracIni#repositories-section trac.ini].\n * Set up a call to `trac-admin $ENV changeset added $REPO $REV` in the post-commit hook of each repository. Additionally, add a call to `trac-admin $ENV changeset modified $REPO $REV` in the post-revprop-change hook of repositories allowing revision property changes.\n * Set the `[trac] repository_sync_per_request` option to an empty value to disable per-request syncing.\n * Make sure the user under which your Subversion hooks are run has write access to the Trac environment, or use a tool like `sudo` to temporarily elevate privileges.\n\n== Specifying repositories == #Repositories\nStarting with 0.12, Trac can handle more than one repository per environment. The pre-0.12 way of specifying the repository with the `repository_dir` and `repository_type` options in the `[trac]` section of [wiki:TracIni trac.ini] is still supported, but two new mechanisms allow including additional repositories into an environment.\n\nIt is also possible to define aliases of repositories, that act as \"pointers\" to real repositories. This can be useful when renaming a repository, to avoid breaking all the links to the old name.\n\nA number of attributes can be associated with each repository, which define the repository\'s location, type, name and how it is displayed in the source browser. The following attributes are supported:\n\n||=\'\'\'Attribute\'\'\' =||=\'\'\'Description\'\'\' =||\n||`alias` ||\\\n||A repository having an `alias` attribute is an alias to a real repository. All TracLinks referencing the alias resolve to the aliased repository. Note that multiple indirection is not supported, so an alias must always point to a real repository. The `alias` and `dir` attributes are mutually exclusive. ||\n||`description` ||\\\n||The text specified in the `description` attribute is displayed below the top-level entry for the repository in the source browser. It supports WikiFormatting. ||\n||`dir` ||\\\n||The `dir` attribute specifies the location of the repository in the filesystem. It corresponds to the value previously specified in the option `[trac] repository_dir`. The `alias` and `dir` attributes are mutually exclusive. ||\n||`hidden` ||When set to `true`, the repository is hidden from the repository index page in the source browser. Browsing the repository is still possible, and links referencing the repository remain valid. ||\n||`type` ||The `type` attribute sets the type of version control system used by the repository. Trac supports Subversion and Git out-of-the-box, and plugins add support for many other systems. If `type` is not specified, it defaults to the value of the `[trac] repository_type` option. ||\n||`url` ||The `url` attribute specifies the root URL to be used for checking out from the repository. When specified, a \"Repository URL\" link is added to the context navigation links in the source browser, that can be copied into the tool used for creating the working copy. ||\n\nA repository `name` and one of `alias` or `dir` attributes are mandatory. All others are optional.\n\nAfter adding a repository, the cache for that repository must be re-synchronized once with the `trac-admin $ENV repository resync` command.\n\n `repository resync <repos>`::\n   Re-synchronize Trac with a repository.\n\n\n=== In `trac.ini` === #ReposTracIni\nRepositories and repository attributes can be specified in the `[repositories]` section of [wiki:TracIni#repositories-section trac.ini]. Every attribute consists of a key structured as `{name}.{attribute}` and the corresponding value separated with an equal sign (`=`). The name of the default repository is empty.\n\nThe main advantage of specifying repositories in `trac.ini` is that they can be inherited from a global configuration (see the [wiki:TracIni#GlobalConfiguration global configuration] section of TracIni). One drawback is that, due to limitations in the `ConfigParser` class used to parse `trac.ini`, the repository name is always all-lowercase.\n\nThe following example defines two Subversion repositories named `project` and `lib`, and an alias to `project` as the default repository. This is a typical use case where a Trac environment previously had a single repository (the `project` repository), and was converted to multiple repositories. The alias ensures that links predating the change continue to resolve to the `project` repository.\n{{{\n#!ini\n[repositories]\nproject.dir = /var/repos/project\nproject.description = This is the \'\'main\'\' project repository.\nproject.type = svn\nproject.url = http://example.com/svn/project\nproject.hidden = true\n\nlib.dir = /var/repos/lib\nlib.description = This is the secondary library code.\nlib.type = svn\nlib.url = http://example.com/svn/lib\n\n.alias = project\n}}}\nNote that `name.alias = target` makes `name` an alias for the `target` repo, not the other way around.\n\n=== In the database === #ReposDatabase\nRepositories can also be specified in the database, using either the \"Repositories\" admin panel under \"Version Control\", or the `trac-admin $ENV repository` commands.\n\nThe admin panel shows the list of all repositories defined in the Trac environment. It allows adding repositories and aliases, editing repository attributes and removing repositories. Note that repositories defined in `trac.ini` are displayed but cannot be edited.\n\nThe following [wiki:TracAdmin trac-admin] commands can be used to perform repository operations from the command line.\n\n `repository add <repos> <dir> [type]`::\n   Add a repository `<repos>` located at `<dir>`, and optionally specify its type.\n\n `repository alias <name> <target>`::\n   Create an alias `<name>` for the repository `<target>`.\n\n `repository remove <repos>`::\n   Remove the repository `<repos>`.\n\n `repository set <repos> <key> <value>`::\n   Set the attribute `<key>` to `<value>` for the repository `<repos>`. \n\nNote that the default repository has an empty name, so it will likely need to be quoted when running `trac-admin` from a shell. Alternatively, the name \"`(default)`\" can be used instead, for example when running `trac-admin` in interactive mode.\n\n\n== Repository synchronization == #Synchronization\nPrior to 0.12, Trac synchronized its cache with the repository on every HTTP request. This approach is not very efficient and not practical anymore with multiple repositories. For this reason, explicit synchronization through post-commit hooks was added. \n\nThere is also new functionality in the form of a repository listener extension point \'\'(IRepositoryChangeListener)\'\' that is triggered by the post-commit hook when a changeset is added or modified, and can be used by plugins to perform actions on commit.\n\n=== Mercurial Repositories ===\nPlease note that at the time of writing, no initial resynchronization or any hooks are necessary for Mercurial repositories - see [trac:#9485] for more information. \n\n=== Explicit synchronization === #ExplicitSync\nThis is the preferred method of repository synchronization. It requires setting the `[trac]  repository_sync_per_request` option in [wiki:TracIni#trac-section trac.ini] to an empty value, and adding a call to `trac-admin` in the post-commit hook of each repository. Additionally, if a repository allows changing revision metadata, a call to `trac-admin` must be added to the post-revprop-change hook as well.\n\n `changeset added <repos> <rev> [...]`::\n   Notify Trac that one or more changesets have been added to a repository.\n\n `changeset modified <repos> <rev> [...]`::\n   Notify Trac that metadata on one or more changesets in a repository has been modified.\n\nThe `<repos>` argument can be either a repository name (use \"`(default)`\" for the default repository) or the path to the repository.\n\nNote that you may have to set the environment variable PYTHON_EGG_CACHE to the same value as was used for the web server configuration before calling trac-admin, if you changed it from its default location. See [wiki:TracPlugins Trac Plugins] for more information.\n\nThe following examples are complete post-commit and post-revprop-change scripts for Subversion. They should be edited for the specific environment, marked executable (where applicable) and placed in the `hooks` directory of each repository. On Unix (`post-commit`):\n{{{#!sh\n#!/bin/sh\nexport PYTHON_EGG_CACHE=\"/path/to/dir\"\n/usr/bin/trac-admin /path/to/env changeset added \"$1\" \"$2\"\n}}}\nNote: Ubuntu doesn\'t seem to like /usr/bin/trac-admin, so just use:\n{{{#!sh\n#!/bin/sh\nexport PYTHON_EGG_CACHE=\"/path/to/dir\"\ntrac-admin /path/to/env/ changeset added \"$1\" \"$2\"\n}}}\nOn Windows (`post-commit.cmd`):\n{{{#!application/x-dos-batch\n@C:\\Python26\\Scripts\\trac-admin.exe C:\\path\\to\\env changeset added \"%1\" \"%2\"\n}}}\n\nThe post-revprop-change hook for Subversion is very similar. On Unix (`post-revprop-change`):\n{{{#!sh\n#!/bin/sh\nexport PYTHON_EGG_CACHE=\"/path/to/dir\"\n/usr/bin/trac-admin /path/to/env changeset modified \"$1\" \"$2\"\n}}}\nOn Windows (`post-revprop-change.cmd`):\n{{{#!application/x-dos-batch\n@C:\\Python26\\Scripts\\trac-admin.exe C:\\path\\to\\env changeset modified \"%1\" \"%2\"\n}}}\n\nThe Unix variants above assume that the user running the Subversion commit has write access to the Trac environment, which is the case in the standard configuration where both the repository and Trac are served by the web server. If you access the repository through another means, for example `svn+ssh://`, you may have to run `trac-admin` with different privileges, for example by using `sudo`.\n\nNote that calling `trac-admin` in your Subversion hooks can slow down the commit and log editing operations on the client side. You might want to use the [trac:source:trunk/contrib/trac-svn-hook contrib/trac-svn-hook] script which starts `trac-admin` in an asynchronous way. The script also comes with a number of safety checks and usage advices which should make it easier to set up and test your hooks. There\'s no equivalent `trac-svn-hook.bat` for Windows yet, but the script can be run by Cygwin\'s bash.\n\nSee the [http://svnbook.red-bean.com/en/1.5/svn.reposadmin.create.html#svn.reposadmin.create.hooks section about hooks] in the Subversion book for more information. Other repository types will require different hook setups.\n\nGit hooks can be used in the same way for explicit syncing of git repositories. Add the following to `.git/hooks/post-commit`:\n{{{#!sh\nREV=$(git rev-parse HEAD)\ntrac-admin /path/to/env changeset added <my-repository> $REV\n}}}\n\nFor Mercurial, add the following entries to the `.hgrc` file of each repository accessed by Trac (if [trac:TracMercurial] is installed in a Trac `plugins` directory, download [trac:source:mercurial-plugin/tracext/hg/hooks.py hooks.py] and place it somewhere accessible):\n{{{#!ini\n[hooks]\n; If mercurial-plugin is installed globally\ncommit = python:tracext.hg.hooks.add_changesets\nchangegroup = python:tracext.hg.hooks.add_changesets\n\n; If mercurial-plugin is installed in a Trac plugins directory\ncommit = python:/path/to/hooks.py:add_changesets\nchangegroup = python:/path/to/hooks.py:add_changesets\n\n[trac]\nenv = /path/to/env\ntrac-admin = /path/to/trac-admin\n}}}\n\n=== Per-request synchronization === #PerRequestSync\nIf the post-commit hooks are not available, the environment can be set up for per-request synchronization. In that case, the `[trac] repository_sync_per_request` option in [wiki:TracIni#trac-section trac.ini] must be set to a comma-separated list of repository names to be synchronized.\n\nNote that in this case, the changeset listener extension point is not called, and therefore plugins using it will not work correctly.\n\n\n== Migration from a single-repository setup (Subversion) == #Migration\nThe following procedure illustrates a typical migration from a Subversion single-repository setup to multiple repositories.\n\n 1. Remove the default repository specification from the `[trac] repository_dir` option.\n 1. Add the main repository as a named repository.\n 1. Re-synchronize the main repository.\n 1. Set up post-commit and post-revprop-change hooks on the \"main\" repository, and set `[trac] repository_sync_per_request` to an empty value.\n 1. Add an alias to the main repository as the default repository (by leaving out the the `name`, e.g. `.alias = main`). This ensures that all links predating the migration still resolve to the main repository.\n 1. Repeat steps 2, 3 and 4 to add other \"named\" repositories as needed.\n\n== Migration from a single-repository setup (Mercurial) == #MigrationMercurial\nThe following procedure illustrates a typical migration from a Mercurial single-repository setup to multiple repositories. Please note that at the time of writing, no initial resynchronization or any hooks are necessary for Mercurial repositories - see [trac:ticket:9485 #9485] for more information.\n\n 1. Upgrade to the latest version of the TracMercurial plugin.\n 1. Remove the default repository specification from the `[trac] repository_dir` option.\n 1. Add the main repository as a named repository.\n 1. Add an alias to the main repository as the default repository (by leaving out the the `name`, e.g. `.alias = main`). This ensures that all links predating the migration still resolve to the main repository.\n 1. Repeat step 3 to add other \"named\" repositories as needed.\n\n== Troubleshooting ==\n\n=== My trac-post-commit-hook doesn\'t work anymore === #trac-post-commit-hook\n\nYou must now use the optional components from `tracopt.ticket.commit_updater.*`, which you can activate through the Plugins panel in the Administrative part of the web interface, or by directly modifying the [TracIni#components-section \"[components]\"] section in the trac.ini. Be sure to use [#ExplicitSync explicit synchronization] as explained above.\n',NULL,NULL),('TracRevisionLog',1,1291894092000000,'trac','127.0.0.1','= Viewing Revision Logs =\n[[TracGuideToc]]\n\nWhen you browse the repository, it\'s always possible to query the \n\'\'Revision Log\'\' view corresponding to the path you\'re currently seeing.\nThis will display a list of the most recent changesets in which the \ncurrent path or any other path below it has been modified.\n\n== The Revision Log Form ==\n\nIt\'s possible to set the revision at which the revision log should\nstart, using the \'\'View log starting at\'\' field. An empty value\nor a value of \'\'head\'\' is taken to be the newest changeset. \n\nIt\'s also possible to specify the revision at which the log should\nstop, using the \'\'back to\'\' field. By default, it\'s left empty, \nwhich means the revision log will stop as soon as 100 revisions have \nbeen listed.\n\nAlso, there are three modes of operation of the revision log.\n\nBy default, the revision log \'\'stops on copy\'\', which means that \nwhenever an \'\'Add\'\', \'\'Copy\'\' or \'\'Rename\'\' operation is detected, \nno older revision will be shown. That\'s very convenient when working\nwith branches, as one only sees the history corresponding to what\nhas been done on the branch.\n\nIt\'s also possible to indicate that one wants to see what happened\nbefore a \'\'Copy\'\' or \'\'Rename\'\' change, by selecting the \n\'\'Follow copies\'\' mode. This will cross all copies or renames changes.\nEach time the name of the path changes, there will be an additional\nindentation level. That way, the changes on the different paths\nare easily grouped together visually.\n\nIt\'s even possible to go past an \'\'Add\'\' change, in order to see \nif there has been a \'\'Delete\'\' change on that path, before \nthat \'\'Add\'\'. This mode corresponds to the mode called \n\'\'Show only adds, moves and deletes\'\'. \nWhile quite useful at times, be aware that this operation is quite \nresource intensive.\n\nFinally, there\'s also a checkbox \'\'Show full log messages\'\',\nwhich controls whether the full content of the commit log message\nshould be displayed for each change, or only a shortened version of it.\n\n== The Revision Log Information ==\n\nFor each revision log entry, there are 7 columns shown:\n 1. The first column contains a pair of radio buttons and should used \n    for selecting the \'\'old\'\' and the \'\'new\'\' revisions that will be \n    used for [wiki:TracRevisionLog#viewingtheactualchanges viewing the actual changes].\n 2. A color code (similar to the one used for the [wiki:TracChangeset#ChangesetHeader changesets]) \n    indicating kind of change.\n    Clicking on this column refreshes the revision log so that it restarts\n    with this change.\n 3. The \'\'\'Date\'\'\' at which the change was made.\n 4. The \'\'\'Revision\'\'\' number, displayed as `@xyz`. \n    This is a link to the TracBrowser, using that revision as the base line.\n 5. The \'\'\'Changeset\'\'\' number, displayed as `[xyz]`.\n    This is a link to the TracChangeset view.\n 6. The \'\'\'Author\'\'\' of the change.\n 7. The \'\'\'Log Message\'\'\', which contains either a summary or the full commit \n    log message, depending on the value of the \'\'Show full log messages\'\' \n    checkbox in the form above.\n    \n\n== Inspecting Changes Between Revisions ==\n\nThe \'\'View changes...\'\' buttons (placed above and below the list\nof changes, on the left side) will show the set of differences\ncorresponding to the aggregated changes starting from the \'\'old\'\'\nrevision (first radio-button) to the \'\'new\'\' revision (second\nradio-button), in the TracChangeset view.\n\nNote that the \'\'old\'\' revision doesn\'t need to be actually \n\'\'older\'\' than the \'\'new\'\' revision: it simply gives a base\nfor the diff. It\'s therefore entirely possible to easily \ngenerate a \'\'reverse diff\'\', for reverting what has been done\nin the given range of revisions.\n\nFinally, if the two revisions are identical, the corresponding\nchangeset will be shown (same effect as clicking on column 5).\n\n== Alternative Formats ==\n\n=== The !ChangeLog Text ===\n\nAt the bottom of the page, there\'s a \'\'!ChangeLog\'\' link\nthat will show the range of revisions as currently shown,\nbut as a simple text, matching the usual conventions for\n!ChangeLog files.\n\n=== RSS Support ===\n\nThe revision log also provides a RSS feed to monitor the changes.\nTo subscribe to a RSS feed for a file or directory, open its\nrevision log in the browser and click the orange \'XML\' icon at the bottom\nof the page. For more information on RSS support in Trac, see TracRss.\n\n----\nSee also: TracBrowser, TracChangeset, TracGuide',NULL,NULL),('TracRevisionLog',2,1397068026260067,'trac','127.0.0.1','= Viewing Revision Logs =\n[[TracGuideToc]]\n\nWhen you browse the repository, it\'s always possible to query the \n\'\'Revision Log\'\' view corresponding to the path you\'re currently seeing.\nThis will display a list of the most recent changesets in which the \ncurrent path or any other path below it has been modified.\n\n== The Revision Log Form ==\n\nIt\'s possible to set the revision at which the revision log should\nstart, using the \'\'View log starting at\'\' field. An empty value\nor a value of \'\'head\'\' is taken to be the newest changeset. \n\nIt\'s also possible to specify the revision at which the log should\nstop, using the \'\'back to\'\' field. By default, it\'s left empty, \nwhich means the revision log will stop as soon as 100 revisions have \nbeen listed.\n\nAlso, there are three modes of operation of the revision log.\n\nBy default, the revision log \'\'stops on copy\'\', which means that \nwhenever an \'\'Add\'\', \'\'Copy\'\' or \'\'Rename\'\' operation is detected, \nno older revision will be shown. That\'s very convenient when working\nwith branches, as one only sees the history corresponding to what\nhas been done on the branch.\n\nIt\'s also possible to indicate that one wants to see what happened\nbefore a \'\'Copy\'\' or \'\'Rename\'\' change, by selecting the \n\'\'Follow copies\'\' mode. This will cross all copies or renames changes.\nEach time the name of the path changes, there will be an additional\nindentation level. That way, the changes on the different paths\nare easily grouped together visually.\n\nIt\'s even possible to go past an \'\'Add\'\' change, in order to see \nif there has been a \'\'Delete\'\' change on that path, before \nthat \'\'Add\'\'. This mode corresponds to the mode called \n\'\'Show only adds, moves and deletes\'\'. \nWhile quite useful at times, be aware that this operation is quite \nresource intensive.\n\nFinally, there\'s also a checkbox \'\'Show full log messages\'\',\nwhich controls whether the full content of the commit log message\nshould be displayed for each change, or only a shortened version of it.\n\n== The Revision Log Information ==\n\nFor each revision log entry, there are 7 columns:\n 1. The first column contains a pair of radio buttons and should be used \n    for selecting the \'\'old\'\' and the \'\'new\'\' revisions that will be \n    used for [wiki:TracRevisionLog#viewingtheactualchanges viewing the actual changes].\n 1. A color code (similar to the one used for the\n    [wiki:TracChangeset#ChangesetHeader changesets]) indicating kind of change.\n    Clicking on this column refreshes the revision log so that it restarts\n    with this change.\n 1. The \'\'\'Revision\'\'\' number, displayed as `@xyz`.\n    This is a link to the TracBrowser, using the displayed revision as the base line.\n Next to it, you can see a little \"wheel\" icon [[Image(htdocs:../common/changeset.png)]],  which is clickable and leads to the TracChangeset view for that revision.\n 1. The \'\'\'Date\'\'\' at which the change was made.\n    The date is displayed as the time elapsed from the date of the revision. The time\n    elapsed is displayed as the number of hours, days, weeks, months, or years.\n 1. The \'\'\'Author\'\'\' of the change.\n 1. The \'\'\'Log Message\'\'\', which contains either the truncated or full commit \n    log message, depending on the value of the \'\'Show full log messages\'\' \n    checkbox in the form above.\n    \n\n== Inspecting Changes Between Revisions ==\n\nThe \'\'View changes...\'\' buttons (placed above and below the list\nof changes, on the left side) will show the set of differences\ncorresponding to the aggregated changes starting from the \'\'old\'\'\nrevision (first radio-button) to the \'\'new\'\' revision (second\nradio-button), in the TracChangeset view.\n\nNote that the \'\'old\'\' revision doesn\'t need to be actually \n\'\'older\'\' than the \'\'new\'\' revision: it simply gives a base\nfor the diff. It\'s therefore entirely possible to easily \ngenerate a \'\'reverse diff\'\', for reverting what has been done\nin the given range of revisions.\n\nFinally, if the two revisions are identical, the corresponding\nchangeset will be shown (same effect as clicking on the !ChangeSet number).\n\n== Alternative Formats ==\n\n=== The !ChangeLog Text ===\n\nAt the bottom of the page, there\'s a \'\'!ChangeLog\'\' link\nthat will show the range of revisions as currently shown,\nbut as a simple text, matching the usual conventions for\n!ChangeLog files.\n\n=== RSS Support ===\n\nThe revision log also provides a RSS feed to monitor the changes.\nTo subscribe to a RSS feed for a file or directory, open its\nrevision log in the browser and click the orange \'XML\' icon at the bottom\nof the page. For more information on RSS support in Trac, see TracRss.\n\n----\nSee also: TracBrowser, TracChangeset, TracGuide',NULL,NULL),('TracRoadmap',1,1291894092000000,'trac','127.0.0.1','= The Trac Roadmap =\n[[TracGuideToc]]\n\nThe roadmap provides a view on the [wiki:TracTickets ticket system] that helps planning and managing the future development of a project.\n\n== The Roadmap View ==\n\nBasically, the roadmap is just a list of future milestones. You can add a description to milestones (using WikiFormatting) describing main objectives, for example. In addition, tickets targeted for a milestone are aggregated, and the ratio between active and resolved tickets is displayed as a milestone progress bar.  It is possible to further [wiki:TracRoadmapCustomGroups customise the ticket grouping] and have multiple ticket statuses shown on the progress bar.\n\n== The Milestone View ==\n\nIt is possible to drill down into this simple statistic by viewing the individual milestone pages. By default, the active/resolved ratio will be grouped and displayed by component. You can also regroup the status by other criteria, such as ticket owner or severity. Ticket numbers are linked to [wiki:TracQuery custom queries] listing corresponding tickets.\n\n== Roadmap Administration ==\n\nIt is possible to add, modify and remove milestones using either TracAdmin or the web interface. \n\n\'\'\'Note:\'\'\' Milestone descriptions can currently only be edited from the web interface. With appropriate permissions, you\'ll see buttons for milestone management on the roadmap and milestone pages.\n\n== iCalendar Support ==\n\nThe Roadmap supports the [http://www.ietf.org/rfc/rfc2445.txt iCalendar] format to keep track of planned milestones and related tickets from your favorite calendar software. Calendar applications supporting the iCalendar specification include [http://www.apple.com/ical/ Apple iCal] for Mac OS X and the cross-platform [http://www.mozilla.org/projects/calendar/ Mozilla Calendar], and [http://chandlerproject.org Chandler]. [http://kontact.kde.org/korganizer/ Korganizer] (the calendar application of the [http://www.kde.org/ KDE] project) and [http://www.novell.com/de-de/products/desktop/features/evolution.html Evolution] also support iCalendar.\n\nTo subscribe to the roadmap, copy the iCalendar link from the roadmap (found at the bottom of the page) and choose the \"Subscribe to remote calendar\" action (or similar) of your calendar application, and insert the URL just copied.\n\n\'\'\'Note:\'\'\' For tickets to be included in the calendar as tasks, you need to be logged in when copying the link. You will only see tickets assigned to yourself, and associated with a milestone.\n\nMore information about iCalendar can be found at [http://en.wikipedia.org/wiki/ICalendar Wikipedia].\n----\nSee also: TracRoadmapCustomGroups, TracTickets, TracReports, TracQuery, TracGuide',NULL,NULL),('TracRoadmap',2,1397068026271916,'trac','127.0.0.1','= The Trac Roadmap =\n[[TracGuideToc]]\n\nThe roadmap provides a view on the [wiki:TracTickets ticket system] that helps planning and managing the future development of a project.\n\n== The Roadmap View ==\n\nBasically, the roadmap is just a list of future milestones. You can add a description to milestones (using WikiFormatting) describing main objectives, for example. In addition, tickets targeted for a milestone are aggregated, and the ratio between active and resolved tickets is displayed as a milestone progress bar.  It is possible to further [trac:TracRoadmapCustomGroups customise the ticket grouping] and have multiple ticket statuses shown on the progress bar.\n\nThe roadmap can be filtered to show or hide \'\'completed milestones\'\' and \'\'milestones with no due date\'\'. In the case that both \'\'show completed milestones\'\' and \'\'hide milestones with no due date\'\' are selected, \'\'completed\'\' milestones with no due date __will__ be shown.\n\n== The Milestone View ==\n\nYou can add a description for each milestone (using WikiFormatting) describing main objectives, for example. In addition, tickets targeted for a milestone are aggregated, and the ratio between active and resolved tickets is displayed as a milestone progress bar.  It is possible to further [trac:TracRoadmapCustomGroups customise the ticket grouping] and have multiple ticket statuses shown on the progress bar.\n\nIt is possible to drill down into this simple statistic by viewing the individual milestone pages. By default, the active/resolved ratio will be grouped and displayed by component. You can also regroup the status by other criteria, such as ticket owner or severity. Ticket numbers are linked to [wiki:TracQuery custom queries] listing corresponding tickets.\n\n== Roadmap Administration ==\n\nWith appropriate permissions it is possible to add, modify and remove milestones using either the web interface (roadmap and milestone pages), web administration interface or by using `trac-admin`. \n\n\'\'\'Note:\'\'\' Milestone descriptions can not currently be edited using \'trac-admin\'.\n\n== iCalendar Support ==\n\nThe Roadmap supports the [http://www.ietf.org/rfc/rfc2445.txt iCalendar] format to keep track of planned milestones and related tickets from your favorite calendar software. Many calendar applications support the iCalendar specification including\n * [http://www.apple.com/ical/ Apple iCal] for Mac OS X\n * the cross-platform [http://www.mozilla.org/projects/calendar/ Mozilla Calendar]\n * [http://chandlerproject.org Chandler]\n * [http://kontact.kde.org/korganizer/ Korganizer] (the calendar application of the [http://www.kde.org/ KDE] project)\n * [http://www.novell.com/de-de/products/desktop/features/evolution.html Evolution] also support iCalendar\n * [http://office.microsoft.com/en-us/outlook/ Microsoft Outlook] can also read iCalendar files (it appears as a new static calendar in Outlook)\n * [https://www.google.com/calendar/ Google Calendar] \n\nTo subscribe to the roadmap, copy the iCalendar link from the roadmap (found at the bottom of the page) and choose the \"Subscribe to remote calendar\" action (or similar) of your calendar application, and insert the URL just copied.\n\n\'\'\'Note:\'\'\' For tickets to be included in the calendar as tasks, you need to be logged in when copying the link. You will only see tickets assigned to yourself, and associated with a milestone.\n\n\'\'\'Note:\'\'\' To include the milestones in Google Calendar you might need to rewrite the URL.\n{{{\nRewriteEngine on\nRewriteRule ([^/.]+)/roadmap/([^/.]+)/ics /$1/roadmap?user=$2&format=ics\n}}}\n\nMore information about iCalendar can be found at [http://en.wikipedia.org/wiki/ICalendar Wikipedia].\n----\nSee also: TracTickets, TracReports, TracQuery, [trac:TracRoadmapCustomGroups]\n',NULL,NULL),('TracRss',1,1291894092000000,'trac','127.0.0.1','= Using RSS with Trac =\n[[TracGuideToc]]\n\nSeveral of the Trac modules support content syndication using the RSS (Really Simple Syndication) XML format.\nUsing the RSS subscription feature in Trac, you can easily monitor progress of the project, a set of issues or even changes to a single file.\n\nTrac supports RSS feeds in:\n\n * TracTimeline --  Use the RSS feed to \'\'\'subscribe to project events\'\'\'.[[br]]Monitor overall project progress in your favorite RSS reader.\n * TracTickets, TracReports, and TracQuery -- Allows syndication of report and ticket query results.[[br]]Be notified about important and relevant issue tickets.\n * TracBrowser and TracRevisionLog -- Syndication of file changes.[[br]]Stay up to date with changes to a specific file or directory.\n\n== How to access RSS data ==\nAnywhere in Trac where RSS is available, you should find a small orange \'\'\'XML\'\'\' icon, typically placed at the bottom of the page. Clicking the icon will access the RSS feed for that specific resource.\n\n\'\'\'Note:\'\'\' Different modules provide different data in their RSS feeds. Usually, the syndicated information corresponds to the current view. For example, if you click the RSS link on a report page, the feed will be based on that report. It might be explained by thinking of the RSS feeds as an \'\'alternate view of the data currently displayed\'\'.\n\n== Links ==\n * http://blogs.law.harvard.edu/tech/rss -- RSS 2.0 Specification\n * http://www.mozilla.org/products/firefox/ -- Mozilla Firefox supports [http://www.mozilla.org/products/firefox/live-bookmarks.html live bookmarks] using RSS\n * http://sage.mozdev.org -- Sage RSS and Atom feed aggregator for Mozilla Firefox\n * http://pim.kde.org/users.php -- [http://kde.org KDE] RSS Reader for Linux/BSD/*n*x systems\n * http://www.rssreader.com/ -- Free and powerful RSS Reader for Windows\n * http://liferea.sourceforge.net/ -- Open source GTK2 RSS Reader for Linux\n * http://akregator.sourceforge.net/ -- Open source KDE RSS Reader (part of KDE-PIM)\n * http://www.sharpreader.net/ -- A free RSS Reader written in .NET for Windows\n * http://ranchero.com/netnewswire/ -- An excellent RSS reader for Mac OS X (has both free and pay versions)\n * http://www.utsire.com/shrook/ -- An RSS reader for Max OS X that supports https (even with self signed certificates) and authenticated feeds.\n * http://vienna-rss.sourceforge.net/ -- Open source Feed Reader for Mac OS X with smart folders support\n * http://www.mesadynamics.com/Tickershock.html -- Non-intrusive \"news ticker\" style RSS reader for Mac OS X\n * http://www.wizzrss.com/Welcome.php -- WizzRSS Feed Reader for Firefox\n----\nSee also: TracGuide, TracTimeline, TracReports, TracBrowser',NULL,NULL),('TracRss',2,1397068026268964,'trac','127.0.0.1','= Using RSS with Trac =\n[[TracGuideToc]]\n\nSeveral of the Trac modules support content syndication using the RSS (Really Simple Syndication) XML format.\nUsing the RSS subscription feature in Trac, you can easily monitor progress of the project, a set of issues or even changes to a single file.\n\nTrac supports RSS feeds in:\n\n * TracTimeline —  Use the RSS feed to \'\'\'subscribe to project events\'\'\'.[[br]]Monitor overall project progress in your favorite RSS reader.\n * TracTickets, TracReports, and TracQuery — Allows syndication of report and ticket query results.[[br]]Be notified about important and relevant issue tickets.\n * TracBrowser and TracRevisionLog — Syndication of file changes.[[br]]Stay up to date with changes to a specific file or directory.\n\n== How to access RSS data ==\nAnywhere in Trac where RSS is available, you should find a small orange \'\'\'XML\'\'\' icon, typically placed at the bottom of the page. Clicking the icon will access the RSS feed for that specific resource.\n\n\'\'\'Note:\'\'\' Different modules provide different data in their RSS feeds. Usually, the syndicated information corresponds to the current view. For example, if you click the RSS link on a report page, the feed will be based on that report. It might be explained by thinking of the RSS feeds as an \'\'alternate view of the data currently displayed\'\'.\n\n== Links ==\n * \'\'Specifications:\'\'\n   * http://blogs.law.harvard.edu/tech/rss — RSS 2.0 Specification\n\n * \'\'Multi-platform RSS readers:\'\'\n   * http://www.rssowl.org/ — Open source, Eclipse-based, RSS reader for Linux, Mac and Windows systems that supports https and authenticated feeds.\n\n * \'\'Linux/BSD/*n*x systems:\'\'\n   * http://liferea.sourceforge.net/ — Open source GTK2 RSS Reader for Linux\n   * [http://akregator.sourceforge.net/ Akregator] — Open source KDE RSS Reader (part of KDE-PIM)\n\n * \'\'Mac OS X systems:\'\'\n   * http://ranchero.com/netnewswire/ — An excellent RSS reader for Mac OS X (has both free and pay versions)\n   * http://www.utsire.com/shrook/ — An RSS reader for Max OS X that supports https (even with self signed certificates) and authenticated feeds.\n   * http://vienna-rss.sourceforge.net/ — Open source Feed Reader for Mac OS X with smart folders support\n   * http://www.mesadynamics.com/Tickershock.html — Non-intrusive \"news ticker\" style RSS reader for Mac OS X\n\n * \'\'Windows systems:\'\'\n   * http://www.rssreader.com/ — Free and powerful RSS Reader for Windows\n   * http://www.sharpreader.net/ — A free RSS Reader written in .NET for Windows\n\n * \'\'Firefox:\'\'\n   * http://www.mozilla.org/products/firefox/ — Mozilla Firefox features plenty [https://addons.mozilla.org/en-US/firefox/search/?q=rss&appver=&platform= add-ons] for supporting RSS\n\n----\nSee also: TracGuide, TracTimeline, TracReports, TracBrowser\n',NULL,NULL),('TracSearch',1,1291894092000000,'trac','127.0.0.1','= Using Search =\n\nTrac has a built-in search engine to allow finding occurrences of keywords and substrings in wiki pages, tickets and changeset descriptions.\n\nUsing the Trac search facility is straightforward and its interface should be familiar to most users.\n\nApart from the [search: Search module], you will also find a small search field above the navigation bar at all time. It provides convenient access to the search module from all pages.\n\n== \"Quickjump\" searches ==\nFor quick access to various project resources, the quick-search field at the top of every page can be used to enter a [TracLinks wiki link], which will take you directly to the resource identified by that link.\n\nFor example:\n\n * ![42] -- Opens change set 42\n * !#42 -- Opens ticket number 42\n * !{1} -- Opens report 1\n * /trunk -- Opens the browser for the `trunk` directory\n\n== Advanced ==\n\n=== Disabling Quickjumps ===\nTo disable the quickjump feature for a search keyword - for example when searching for occurences of the literal word !TracGuide - begin the query with an exclamation mark (!).\n\n=== Search Links ===\nFrom the Wiki, it is possible to link to a specific search, using\n`search:` links:\n * `search:?q=crash` will search for the string \"crash\" \n * `search:?q=trac+link&wiki=on` will search for \"trac\" and \"link\" \n   in wiki pages only\n\n----\nSee also: TracGuide, TracLinks, TracQuery',NULL,NULL),('TracSearch',2,1397068026231697,'trac','127.0.0.1','= Using Search =\n\nTrac has a built-in search engine to allow finding occurrences of keywords and substrings in wiki pages, tickets and changeset properties (author, revision and log message).\n\nUsing the Trac search facility is straightforward and its interface should be familiar to most users.\n\nApart from the [search: Search module], you will also find a small search field above the navigation bar at all time. It provides convenient access to the search module from all pages.\n\nThe search results show the most recent modifications ranked first in the results rather than the most relevant result.\n\n== \"Quickjump\" searches ==\nFor quick access to various project resources, the quick-search field at the top of every page can be used to enter a [TracLinks wiki link], which will take you directly to the resource identified by that link.\n\nFor example:\n\n * ![42] -- Opens change set 42\n * !#42 -- Opens ticket number 42\n * !{1} -- Opens report 1\n * /trunk -- Opens the browser for the `trunk` directory\n\n== Advanced ==\n\n=== Disabling Quickjumps ===\nTo disable the quickjump feature for a search keyword - for example when searching for occurences of the literal word !TracGuide - begin the query with an exclamation mark (`!`).\n\n=== Search Links ===\nFrom the Wiki, it is possible to link to a specific search, using\n`search:` links:\n * `search:?q=crash` will search for the string \"crash\" \n * `search:?q=trac+link&wiki=on` will search for \"trac\" and \"link\" \n   in wiki pages only\n\n----\nSee also: TracGuide, TracLinks, TracQuery',NULL,NULL),('TracStandalone',1,1291894092000000,'trac','127.0.0.1','= Tracd =\n\nTracd is a lightweight standalone Trac web server. In most cases it\'s easier to setup and runs faster than the [wiki:TracCgi CGI script].\n\n== Pros ==\n\n * Fewer dependencies: You don\'t need to install apache or any other web-server.\n * Fast: Should be almost as fast as the [wiki:TracModPython mod_python] version (and much faster than the [wiki:TracCgi CGI]).\n * Automatic reloading: For development, Tracd can be used in \'\'auto_reload\'\' mode, which will automatically restart the server whenever you make a change to the code (in Trac itself or in a plugin).\n  * Options for tracd: `-r, --auto-reload`\n\n== Cons ==\n\n * Fewer features: Tracd implements a very simple web-server and is not as configurable or as scalable as Apache HTTPD.\n * No native HTTPS support: [http://www.rickk.com/sslwrap/ sslwrap] can be used instead,\n   or [http://trac.edgewall.org/wiki/STunnelTracd stunnel -- a tutorial on how to use stunnel with tracd] or Apache with mod_proxy.\n\n== Usage examples ==\n\nA single project on port 8080. (http://localhost:8080/)\n{{{\n $ tracd -p 8080 /path/to/project\n}}}\nStricly speaking this will make your Trac accessible to everybody from your network rather than \'\'localhost only\'\'. To truly limit it use \'\'--hostname\'\' option.\n{{{\n $ tracd --hostname=localhost -p 8080 /path/to/project\n}}}\nWith more than one project. (http://localhost:8080/project1/ and http://localhost:8080/project2/)\n{{{\n $ tracd -p 8080 /path/to/project1 /path/to/project2\n}}}\n\nYou can\'t have the last portion of the path identical between the projects since Trac uses that name to keep the URLs of the\ndifferent projects unique. So if you use `/project1/path/to` and `/project2/path/to`, you will only see the second project.\n\nAn alternative way to serve multiple projects is to specify a parent directory in which each subdirectory is a Trac project, using the `-e` option. The example above could be rewritten:\n{{{\n $ tracd -p 8080 -e /path/to\n}}}\n\nTo exit the server on Windows, be sure to use {{{CTRL-BREAK}}} -- using {{{CTRL-C}}} will leave a Python process running in the background.\n\n== Installing as a Windows Service ==\n\nTo install as a Windows service, get the [http://www.google.com/search?q=srvany.exe SRVANY] utility and run:\n{{{\n C:\\path\\to\\instsrv.exe tracd C:\\path\\to\\srvany.exe\n reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\tracd\\Parameters /v Application /d \"\\\"C:\\path\\to\\python.exe\\\" \\\"C:\\path\\to\\python\\scripts\\tracd-script.py\\\" <your tracd parameters>\"\n net start tracd\n}}}\n\n\'\'\'DO NOT\'\'\' use {{{tracd.exe}}}.  Instead register {{{python.exe}}} directly with {{{tracd-script.py}}} as a parameter.  If you use {{{tracd.exe}}}, it will spawn the python process without SRVANY\'s knowledge.  This python process will survive a {{{net stop tracd}}}.\n\nIf you want tracd to start automatically when you boot Windows, do:\n{{{\n sc config tracd start= auto\n}}}\n\nThe spacing here is important.\n\n== Using Authentication ==\n\nUsing tracd with Apache .htpasswd files:\n\nTo create a .htpasswd file using htpasswd:\n\n{{{\n $ sudo htpasswd -c /path/to/env/.htpasswd username\n}}}\nthen for additional users:\n{{{\n $ sudo htpasswd /path/to/env/.htpasswd username2\n}}}\nthen for starting the tracd (on windows skip the \"=\" after --basic-auth):\n{{{\n $ tracd -p 8080 --basic-auth=environmentname,/fullpath/environmentname/.htpasswd,/fullpath/environmentname /fullpath/environmentname\n}}}\n\nTracd provides support for both Basic and Digest authentication. The default is to use Digest; to use Basic authentication, replace `--auth` with `--basic-auth` in the examples below. (You must still specify a dialogic \"realm\", which can be an empty string by trailing the BASICAUTH with a comma.)\n\n  \'\'Support for Basic authentication was added in version 0.9.\'\'\n\nThe general format for using authentication is (on windows skip the \"=\" after --auth):\n\n{{{\n $ tracd -p port --auth=base_project_dir,password_file_path,realm project_path\n}}}\n\nwhere:\n\n * \'\'\'base_project_dir\'\'\' is the base directory of the project; note: this doesn\'t refer to the project name, and it is case-sensitive even for windows environments\n * \'\'\'password_file_path\'\'\' path of the password file\n * \'\'\'realm\'\'\' realm\n * \'\'\'project_path\'\'\' path of the project\n\nExample (on windows skip the \"=\" after --auth):\n\n{{{\n $ tracd -p 8080 \\\n   --auth=project1,/path/to/users.htdigest,mycompany.com /path/to/project1\n}}}\nOf course, the digest file can be be shared so that it is used for more than one project:\n{{{\n $ tracd -p 8080 \\\n   --auth=project1,/path/to/users.htdigest,mycompany.com \\\n   --auth=project2,/path/to/users.htdigest,mycompany.com \\\n   /path/to/project1 /path/to/project2\n}}}\n\nAnother way to share the digest file is to specify \"*\"\nfor the project name:\n{{{\n $ tracd -p 8080 \\\n   --auth=\"*\",/path/to/users.htdigest,mycompany.com \\\n   /path/to/project1 /path/to/project2\n}}}\nIf using the `-s` parameter for serving a Trac environment from the root of a domain, one must use `*` for the project name\n\n== How to set up an htdigest password file ==\n\nIf you have Apache available, you can use the htdigest command to generate the password file. Type \'htdigest\' to get some usage instructions, or read [http://httpd.apache.org/docs/2.0/programs/htdigest.html this page] from the Apache manual to get precise instructions.  You\'ll be prompted for a password to enter for each user that you create.  For the name of the password file, you can use whatever you like, but if you use something like `users.htdigest` it will remind you what the file contains. As a suggestion, put it in your <projectname>/conf folder along with the [TracIni trac.ini] file.\n\nNote that you can start tracd without the --auth argument, but if you click on the \'\'Login\'\' link you will get an error.\n\n== Generating Passwords Without Apache ==\n\nIf you don\'t have Apache available, you can use this simple Python script to generate your passwords:\n\n{{{\n#!python\nfrom optparse import OptionParser\n# The md5 module is deprecated in Python 2.5\ntry:\n    from hashlib import md5\nexcept ImportError:\n    from md5 import md5\nrealm = \'trac\'\n\n# build the options\nusage = \"usage: %prog [options]\"\nparser = OptionParser(usage=usage)\nparser.add_option(\"-u\", \"--username\",action=\"store\", dest=\"username\", type = \"string\",\n                  help=\"the username for whom to generate a password\")\nparser.add_option(\"-p\", \"--password\",action=\"store\", dest=\"password\", type = \"string\",\n                  help=\"the password to use\")\nparser.add_option(\"-r\", \"--realm\",action=\"store\", dest=\"realm\", type = \"string\",\n                  help=\"the realm in which to create the digest\")\n(options, args) = parser.parse_args()\n\n# check options\nif (options.username is None) or (options.password is None):\n   parser.error(\"You must supply both the username and password\")\nif (options.realm is not None):\n   realm = options.realm\n   \n# Generate the string to enter into the htdigest file\nkd = lambda x: md5(\':\'.join(x)).hexdigest()\nprint \':\'.join((options.username, realm, kd([options.username, realm, options.password])))\n}}}\n\nNote: If you use the above script you must use the --auth option to tracd, not --basic-auth, and you must set the realm in the --auth value to \'trac\' (without the quotes). Example usage (assuming you saved the script as trac-digest.py):\n\n{{{\n $ python trac-digest.py -u username -p password >> c:\\digest.txt\n $ tracd --port 8000 --auth=proj_name,c:\\digest.txt,trac c:\\path\\to\\proj_name\n}}}\n\nNote: If you would like to use --basic-auth you need to use htpasswd tool from apache server to generate .htpasswd file. The remaining part is similar but make sure to use empty realm (i.e. coma after path). When using on Windows make sure to use -m option for it (did not tested it on *nix, so not sure if that is the case there).  If you do not have Apache, [trac:source:/tags/trac-0.11b2/contrib/htpasswd.py htpasswd.py] may help.  (Note that it requires a `crypt` or `fcrypt` module; see the source comments for details.)\n\nIt is possible to use md5sum utility to generate digest-password file using such method:\n{{{\n $ printf \"${user}:trac:${password}\" | md5sum - >>user.htdigest\n}}}\nand manually delete \" -\" from the end and add \"${user}:trac:\" to the start of line from \'to-file\'.\n\n== Tips ==\n\n=== Serving static content ===\n\nIf `tracd` is the only webserver used for the project, \nit can also be used to distribute static content \n(tarballs, Doxygen documentation, etc.)\n\nThis static content should be put in the `$TRAC_ENV/htdocs` folder,\nand is accessed by URLs like `<project_URL>/chrome/site/...`.\n\nExample: given a `$TRAC_ENV/htdocs/software-0.1.tar.gz` file,\nthe corresponding relative URL would be `/<project_name>/chrome/site/software-0.1.tar.gz`, \nwhich in turn can be written using the relative link syntax\nin the Wiki: `[/<project_name>/chrome/site/software-0.1.tar.gz]` \n\nSince 0.10, Trac supports a new `htdocs:` TracLinks \nsyntax for the above. With this, the example link above can be written simply \n`htdocs:software-0.1.tar.gz`. \n\n=== Using apache rewrite rules ===\nIn some situations when you choose to use tracd behind apache, you might experience issues with redirects, like being redirected to URLs with the wrong host or protocol. In this case (and only in this case), setting the `[trac] use_base_url_for_redirect` to `true` can help, as this will force Trac to use the value of `[trac] base_url` for doing the redirects.\n\n=== Serving a different base path than / ===\nTracd supports serving projects with different base urls than /<project>. The parameter name to change this is\n{{{\n $ tracd --base-path=/some/path\n}}}\n\n----\nSee also: TracInstall, TracCgi, TracModPython, TracGuide, [trac:TracOnWindowsStandalone?version=13#RunningTracdasservice Running tracd.exe as a Windows service]\n',NULL,NULL),('TracStandalone',2,1397068026254581,'trac','127.0.0.1','= Tracd =\n\nTracd is a lightweight standalone Trac web server.\nIt can be used in a variety of situations, from a test or development server to a multiprocess setup behind another web server used as a load balancer.\n\n== Pros ==\n\n * Fewer dependencies: You don\'t need to install apache or any other web-server.\n * Fast: Should be almost as fast as the [wiki:TracModPython mod_python] version (and much faster than the [wiki:TracCgi CGI]), even more so since version 0.12 where the HTTP/1.1 version of the protocol is enabled by default\n * Automatic reloading: For development, Tracd can be used in \'\'auto_reload\'\' mode, which will automatically restart the server whenever you make a change to the code (in Trac itself or in a plugin).\n\n== Cons ==\n\n * Fewer features: Tracd implements a very simple web-server and is not as configurable or as scalable as Apache httpd.\n * No native HTTPS support: [http://www.rickk.com/sslwrap/ sslwrap] can be used instead,\n   or [http://trac.edgewall.org/wiki/STunnelTracd stunnel -- a tutorial on how to use stunnel with tracd] or Apache with mod_proxy.\n\n== Usage examples ==\n\nA single project on port 8080. (http://localhost:8080/)\n{{{\n $ tracd -p 8080 /path/to/project\n}}}\nStricly speaking this will make your Trac accessible to everybody from your network rather than \'\'localhost only\'\'. To truly limit it use \'\'--hostname\'\' option.\n{{{\n $ tracd --hostname=localhost -p 8080 /path/to/project\n}}}\nWith more than one project. (http://localhost:8080/project1/ and http://localhost:8080/project2/)\n{{{\n $ tracd -p 8080 /path/to/project1 /path/to/project2\n}}}\n\nYou can\'t have the last portion of the path identical between the projects since Trac uses that name to keep the URLs of the\ndifferent projects unique. So if you use `/project1/path/to` and `/project2/path/to`, you will only see the second project.\n\nAn alternative way to serve multiple projects is to specify a parent directory in which each subdirectory is a Trac project, using the `-e` option. The example above could be rewritten:\n{{{\n $ tracd -p 8080 -e /path/to\n}}}\n\nTo exit the server on Windows, be sure to use {{{CTRL-BREAK}}} -- using {{{CTRL-C}}} will leave a Python process running in the background.\n\n== Installing as a Windows Service ==\n\n=== Option 1 ===\nTo install as a Windows service, get the [http://www.google.com/search?q=srvany.exe SRVANY] utility and run:\n{{{\n C:\\path\\to\\instsrv.exe tracd C:\\path\\to\\srvany.exe\n reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\tracd\\Parameters /v Application /d \"\\\"C:\\path\\to\\python.exe\\\" \\\"C:\\path\\to\\python\\scripts\\tracd-script.py\\\" <your tracd parameters>\"\n net start tracd\n}}}\n\n\'\'\'DO NOT\'\'\' use {{{tracd.exe}}}.  Instead register {{{python.exe}}} directly with {{{tracd-script.py}}} as a parameter.  If you use {{{tracd.exe}}}, it will spawn the python process without SRVANY\'s knowledge.  This python process will survive a {{{net stop tracd}}}.\n\nIf you want tracd to start automatically when you boot Windows, do:\n{{{\n sc config tracd start= auto\n}}}\n\nThe spacing here is important.\n\n{{{#!div\nOnce the service is installed, it might be simpler to run the Registry Editor rather than use the `reg add` command documented above.  Navigate to:[[BR]]\n`HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\tracd\\Parameters`\n\nThree (string) parameters are provided:\n||!AppDirectory ||C:\\Python26\\ ||\n||Application ||python.exe ||\n||!AppParameters ||scripts\\tracd-script.py -p 8080 ... ||\n\nNote that, if the !AppDirectory is set as above, the paths of the executable \'\'and\'\' of the script name and parameter values are relative to the directory.  This makes updating Python a little simpler because the change can be limited, here, to a single point.\n(This is true for the path to the .htpasswd file, as well, despite the documentation calling out the /full/path/to/htpasswd; however, you may not wish to store that file under the Python directory.)\n}}}\n\nFor Windows 7 User, srvany.exe may not be an option, so you can use [http://www.google.com/search?q=winserv.exe WINSERV] utility and run:\n{{{\n\"C:\\path\\to\\winserv.exe\" install tracd -displayname \"tracd\" -start auto \"C:\\path\\to\\python.exe\" c:\\path\\to\\python\\scripts\\tracd-script.py <your tracd parameters>\"\n\nnet start tracd\n}}}\n\n=== Option 2 ===\n\nUse [http://trac-hacks.org/wiki/WindowsServiceScript WindowsServiceScript], available at [http://trac-hacks.org/ Trac Hacks]. Installs, removes, starts, stops, etc. your Trac service.\n\n=== Option 3 ===\n\nalso cygwin\'s cygrunsrv.exe can be used:\n{{{\n$ cygrunsrv --install tracd --path /cygdrive/c/Python27/Scripts/tracd.exe --args \'--port 8000 --env-parent-dir E:\\IssueTrackers\\Trac\\Projects\'\n$ net start tracd\n}}}\n\n== Using Authentication ==\n\nTracd allows you to run Trac without the need for Apache, but you can take advantage of Apache\'s password tools (htpasswd and htdigest) to easily create a password file in the proper format for tracd to use in authentication. (It is also possible to create the password file without htpasswd or htdigest; see below for alternatives)\n\nTracd provides support for both Basic and Digest authentication. Digest is considered more secure. The examples below use Digest; to use Basic authentication, replace `--auth` with `--basic-auth` in the command line.\n\nThe general format for using authentication is:\n{{{\n $ tracd -p port --auth=\"base_project_dir,password_file_path,realm\" project_path\n}}}\nwhere:\n * \'\'\'base_project_dir\'\'\': the base directory of the project specified as follows:\n   * when serving multiple projects: \'\'relative\'\' to the `project_path`\n   * when serving only a single project (`-s`): the name of the project directory\n Don\'t use an absolute path here as this won\'t work. \'\'Note:\'\' This parameter is case-sensitive even for environments on Windows.\n * \'\'\'password_file_path\'\'\': path to the password file\n * \'\'\'realm\'\'\': the realm name (can be anything)\n * \'\'\'project_path\'\'\': path of the project\n\n * **`--auth`** in the above means use Digest authentication, replace `--auth` with `--basic-auth` if you want to use Basic auth.  Although Basic authentication does not require a \"realm\", the command parser does, so the second comma is required, followed directly by the closing quote for an empty realm name.\n\nExamples:\n\n{{{\n $ tracd -p 8080 \\\n   --auth=\"project1,/path/to/passwordfile,mycompany.com\" /path/to/project1\n}}}\n\nOf course, the password file can be be shared so that it is used for more than one project:\n{{{\n $ tracd -p 8080 \\\n   --auth=\"project1,/path/to/passwordfile,mycompany.com\" \\\n   --auth=\"project2,/path/to/passwordfile,mycompany.com\" \\\n   /path/to/project1 /path/to/project2\n}}}\n\nAnother way to share the password file is to specify \"*\" for the project name:\n{{{\n $ tracd -p 8080 \\\n   --auth=\"*,/path/to/users.htdigest,mycompany.com\" \\\n   /path/to/project1 /path/to/project2\n}}}\n\n=== Basic Authorization: Using a htpasswd password file ===\nThis section describes how to use `tracd` with Apache .htpasswd files.\n\n  Note: It is necessary (at least with Python 2.6) to install the fcrypt package in order to\n  decode some htpasswd formats.  Trac source code attempt an `import crypt` first, but there\n  is no such package for Python 2.6. Only `SHA-1` passwords (since Trac 1.0) work without this module.\n\nTo create a .htpasswd file use Apache\'s `htpasswd` command (see [#GeneratingPasswordsWithoutApache below] for a method to create these files without using Apache):\n{{{\n $ sudo htpasswd -c /path/to/env/.htpasswd username\n}}}\nthen for additional users:\n{{{\n $ sudo htpasswd /path/to/env/.htpasswd username2\n}}}\n\nThen to start `tracd` run something like this:\n{{{\n $ tracd -p 8080 --basic-auth=\"projectdirname,/fullpath/environmentname/.htpasswd,realmname\" /fullpath/environmentname\n}}}\n\nFor example:\n{{{\n $ tracd -p 8080 --basic-auth=\"testenv,/srv/tracenv/testenv/.htpasswd,My Test Env\" /srv/tracenv/testenv\n}}}\n\'\'Note:\'\' You might need to pass \"-m\" as a parameter to htpasswd on some platforms (OpenBSD).\n\n=== Digest authentication: Using a htdigest password file ===\n\nIf you have Apache available, you can use the htdigest command to generate the password file. Type \'htdigest\' to get some usage instructions, or read [http://httpd.apache.org/docs/2.0/programs/htdigest.html this page] from the Apache manual to get precise instructions.  You\'ll be prompted for a password to enter for each user that you create.  For the name of the password file, you can use whatever you like, but if you use something like `users.htdigest` it will remind you what the file contains. As a suggestion, put it in your <projectname>/conf folder along with the [TracIni trac.ini] file.\n\nNote that you can start tracd without the `--auth` argument, but if you click on the \'\'Login\'\' link you will get an error.\n\n=== Generating Passwords Without Apache ===\n\nBasic Authorization can be accomplished via this [http://aspirine.org/htpasswd_en.html online HTTP Password generator] which also supports `SHA-1`.  Copy the generated password-hash line to the .htpasswd file on your system. Note that Windows Python lacks the \"crypt\" module that is the default hash type for htpasswd ; Windows Python can grok MD5 password hashes just fine and you should use MD5.\n\nYou can use this simple Python script to generate a \'\'\'digest\'\'\' password file:\n\n{{{\n#!python\nfrom optparse import OptionParser\n# The md5 module is deprecated in Python 2.5\ntry:\n    from hashlib import md5\nexcept ImportError:\n    from md5 import md5\nrealm = \'trac\'\n\n# build the options\nusage = \"usage: %prog [options]\"\nparser = OptionParser(usage=usage)\nparser.add_option(\"-u\", \"--username\",action=\"store\", dest=\"username\", type = \"string\",\n                  help=\"the username for whom to generate a password\")\nparser.add_option(\"-p\", \"--password\",action=\"store\", dest=\"password\", type = \"string\",\n                  help=\"the password to use\")\nparser.add_option(\"-r\", \"--realm\",action=\"store\", dest=\"realm\", type = \"string\",\n                  help=\"the realm in which to create the digest\")\n(options, args) = parser.parse_args()\n\n# check options\nif (options.username is None) or (options.password is None):\n   parser.error(\"You must supply both the username and password\")\nif (options.realm is not None):\n   realm = options.realm\n   \n# Generate the string to enter into the htdigest file\nkd = lambda x: md5(\':\'.join(x)).hexdigest()\nprint \':\'.join((options.username, realm, kd([options.username, realm, options.password])))\n}}}\n\nNote: If you use the above script you must set the realm in the `--auth` argument to \'\'\'`trac`\'\'\'. Example usage (assuming you saved the script as trac-digest.py):\n\n{{{\n $ python trac-digest.py -u username -p password >> c:\\digest.txt\n $ tracd --port 8000 --auth=proj_name,c:\\digest.txt,trac c:\\path\\to\\proj_name\n}}}\n\n==== Using `md5sum`\nIt is possible to use `md5sum` utility to generate digest-password file:\n{{{\nuser=\nrealm=\npassword=\npath_to_file=\necho ${user}:${realm}:$(printf \"${user}:${realm}:${password}\" | md5sum - | sed -e \'s/\\s\\+-//\') > ${path_to_file}\n}}}\n\n== Reference ==\n\nHere\'s the online help, as a reminder (`tracd --help`):\n{{{\nUsage: tracd [options] [projenv] ...\n\nOptions:\n  --version             show program\'s version number and exit\n  -h, --help            show this help message and exit\n  -a DIGESTAUTH, --auth=DIGESTAUTH\n                        [projectdir],[htdigest_file],[realm]\n  --basic-auth=BASICAUTH\n                        [projectdir],[htpasswd_file],[realm]\n  -p PORT, --port=PORT  the port number to bind to\n  -b HOSTNAME, --hostname=HOSTNAME\n                        the host name or IP address to bind to\n  --protocol=PROTOCOL   http|scgi|ajp|fcgi\n  -q, --unquote         unquote PATH_INFO (may be needed when using ajp)\n  --http10              use HTTP/1.0 protocol version instead of HTTP/1.1\n  --http11              use HTTP/1.1 protocol version (default)\n  -e PARENTDIR, --env-parent-dir=PARENTDIR\n                        parent directory of the project environments\n  --base-path=BASE_PATH\n                        the initial portion of the request URL\'s \"path\"\n  -r, --auto-reload     restart automatically when sources are modified\n  -s, --single-env      only serve a single project without the project list\n  -d, --daemonize       run in the background as a daemon\n  --pidfile=PIDFILE     when daemonizing, file to which to write pid\n  --umask=MASK          when daemonizing, file mode creation mask to use, in\n                        octal notation (default 022)\n  --group=GROUP         the group to run as\n  --user=USER           the user to run as\n}}}\n\nUse the -d option so that tracd doesn\'t hang if you close the terminal window where tracd was started.\n\n== Tips ==\n\n=== Serving static content ===\n\nIf `tracd` is the only web server used for the project, \nit can also be used to distribute static content \n(tarballs, Doxygen documentation, etc.)\n\nThis static content should be put in the `$TRAC_ENV/htdocs` folder,\nand is accessed by URLs like `<project_URL>/chrome/site/...`.\n\nExample: given a `$TRAC_ENV/htdocs/software-0.1.tar.gz` file,\nthe corresponding relative URL would be `/<project_name>/chrome/site/software-0.1.tar.gz`, \nwhich in turn can be written as `htdocs:software-0.1.tar.gz` (TracLinks syntax) or `[/<project_name>/chrome/site/software-0.1.tar.gz]` (relative link syntax). \n\n \'\'Support for `htdocs:` TracLinks syntax was added in version 0.10\'\'\n\n=== Using tracd behind a proxy\n\nIn some situations when you choose to use tracd behind Apache or another web server.\n\nIn this situation, you might experience issues with redirects, like being redirected to URLs with the wrong host or protocol. In this case (and only in this case), setting the `[trac] use_base_url_for_redirect` to `true` can help, as this will force Trac to use the value of `[trac] base_url` for doing the redirects.\n\nIf you\'re using the AJP protocol to connect with `tracd` (which is possible if you have flup installed), then you might experience problems with double quoting. Consider adding the `--unquote` parameter.\n\nSee also [trac:TracOnWindowsIisAjp], [trac:TracNginxRecipe].\n\n=== Authentication for tracd behind a proxy\nIt is convenient to provide central external authentication to your tracd instances, instead of using {{{--basic-auth}}}. There is some discussion about this in #9206.\n\nBelow is example configuration based on Apache 2.2, mod_proxy, mod_authnz_ldap.\n\nFirst we bring tracd into Apache\'s location namespace.\n\n{{{\n<Location /project/proxified>\n        Require ldap-group cn=somegroup, ou=Groups,dc=domain.com\n        Require ldap-user somespecificusertoo\n        ProxyPass http://localhost:8101/project/proxified/\n        # Turns out we don\'t really need complicated RewriteRules here at all\n        RequestHeader set REMOTE_USER %{REMOTE_USER}s\n</Location>\n}}}\n\nThen we need a single file plugin to recognize HTTP_REMOTE_USER header as valid authentication source. HTTP headers like \'\'\'HTTP_FOO_BAR\'\'\' will get converted to \'\'\'Foo-Bar\'\'\' during processing. Name it something like \'\'\'remote-user-auth.py\'\'\' and drop it into \'\'\'proxified/plugins\'\'\' directory:\n{{{\n#!python\nfrom trac.core import *\nfrom trac.config import BoolOption\nfrom trac.web.api import IAuthenticator\n\nclass MyRemoteUserAuthenticator(Component):\n\n    implements(IAuthenticator)\n\n    obey_remote_user_header = BoolOption(\'trac\', \'obey_remote_user_header\', \'false\', \n               \"\"\"Whether the \'Remote-User:\' HTTP header is to be trusted for user logins \n                (\'\'since ??.??\').\"\"\") \n\n    def authenticate(self, req):\n        if self.obey_remote_user_header and req.get_header(\'Remote-User\'): \n            return req.get_header(\'Remote-User\') \n        return None\n\n}}}\n\nAdd this new parameter to your TracIni:\n{{{\n...\n[trac]\n...\nobey_remote_user_header = true\n...\n}}}\n\nRun tracd:\n{{{\ntracd -p 8101 -r -s proxified --base-path=/project/proxified\n}}}\n\nNote that if you want to install this plugin for all projects, you have to put it in your [TracPlugins#Plugindiscovery global plugins_dir] and enable it in your global trac.ini.\n\nGlobal config (e.g. `/srv/trac/conf/trac.ini`):\n{{{\n[components]\nremote-user-auth.* = enabled\n[inherit]\nplugins_dir = /srv/trac/plugins\n[trac]\nobey_remote_user_header = true\n}}}\n\nEnvironment config (e.g. `/srv/trac/envs/myenv`):\n{{{\n[inherit]\nfile = /srv/trac/conf/trac.ini\n}}}\n\n=== Serving a different base path than / ===\nTracd supports serving projects with different base urls than /<project>. The parameter name to change this is\n{{{\n $ tracd --base-path=/some/path\n}}}\n\n----\nSee also: TracInstall, TracCgi, TracModPython, TracGuide, [trac:TracOnWindowsStandalone#RunningTracdasservice Running tracd.exe as a Windows service]\n',NULL,NULL),('TracSupport',1,1291894092000000,'trac','127.0.0.1','= Trac Support =\n\nLike in most [http://www.opensource.org/ open source projects], \"free\" Trac support is available primarily through the community itself, mainly through the [trac:MailingList mailing list] and the project wiki.\n\nThere is also an [trac:IrcChannel IRC channel], where people might be able to help out. Much of the \'live\' development discussions also happen there.\n\nBefore you start a new support query, make sure you\'ve done the appropriate searching:\n * in the project\'s [trac:TracFaq FAQ]\n * in past messages to the Trac [http://blog.gmane.org/gmane.comp.version-control.subversion.trac.general?set_user_css=http%3A%2F%2Fwww.edgewall.com%2Fcss%2Fgmane.css&do_set_user_css=t Mailing List]\n * in the Trac ticket system, using either a [http://trac.edgewall.org/search?q=&ticket=on&wiki=on full search] or a [http://trac.edgewall.org/query?summary=~&keywords=~ ticket query].\n\nPlease \'\'\'don\'t\'\'\' create a ticket in this Trac for asking a support question about Trac. Only use it when you face a \'\'real\'\' and \'\'new\'\' bug in Trac, and do so only after having read the [trac:NewTicketGuidelines NewTicketGuidelines]. The more a bug report or enhancement request complies with those guidelines, the higher the chances are that it will be fixed or implemented promptly!\n\n----\nSee also: [trac:MailingList MailingList], [trac:TracTroubleshooting TracTroubleshooting], [trac:CommercialServices CommercialServices]\n',NULL,NULL),('TracSupport',2,1397068026240745,'trac','127.0.0.1','= Trac Support =\n\nLike in most [http://www.opensource.org/ open source projects], \"free\" Trac support is available primarily through the community itself, mainly through the [trac:MailingList mailing list] and the [trac: project wiki]. The latter is the authoritative source for the TracGuide (administrator and user guides for Trac).\n\nThere is also an [trac:IrcChannel IRC channel], where people might be able to help out. Much of the \'live\' development discussions also happen there.\n\nBefore you start a new support query, make sure you\'ve done the appropriate searching:\n * in the project\'s [trac:TracFaq FAQ]\n * in past messages to the [http://groups.google.com/group/trac-users Trac Users Mailing List]\n * in the Trac ticket system, using either a [trac:search:?q=&ticket=on&wiki=on full search] or a [trac:query: ticket query].\n\nPlease \'\'\'don\'t\'\'\' create a ticket in trac.egdewall.org for asking a support question about Trac. Only use it when you face a \'\'real\'\' and \'\'new\'\' bug in Trac, and do so only after having read the [trac:NewTicketGuidelines NewTicketGuidelines]. The more a bug report or enhancement request complies with those guidelines, the higher the chances are that it will be fixed or implemented promptly!\n\n----\nSee also: [trac:MailingList], [trac:TracTroubleshooting], [trac:CommercialServices]\n',NULL,NULL),('TracSyntaxColoring',1,1291894092000000,'trac','127.0.0.1','= Syntax Coloring of Source Code =\nTrac supports language-specific syntax highlighting of source code in [wiki:WikiFormatting wiki formatted] text and the [wiki:TracBrowser repository browser].\n\nTo do this, Trac uses external libraries with support for a great number of programming languages.\n\nCurrently Trac supports syntax coloring using one or more of the following packages:\n\n * [http://www.codento.com/people/mtr/genscript/ GNU Enscript] \n * [http://silvercity.sourceforge.net/ SilverCity]\n * [http://pygments.pocoo.org/ Pygments] (but needs a plugin for 0.10, see [#AboutPygments below])\n\nTo activate syntax coloring, simply install either one (or more) of these packages. No additional configuration is required, however to modify the colors, have a look at `trac/htdocs/css/code.css`.\n\nIf you don\'t know why trac isnt detecting an installed library, try turning on Trac logging. It actually appears that Trac is broken with !SilverCity 0.9.6. Either use the current 0.9.7 or the older 0.9.5 http://trac.edgewall.org/wiki/TracFaq#why-is-my-css-code-not-being-highlighted-even-though-i-have-silvercity-installed\n\nWhen in use, Trac will automatically prioritize !SilverCity highlighting over Enscript if possible, (see note below). \n\nIf neither package is available, Trac will display the data as plain text. \n\n\'\'\'Note:\'\'\' Enscript supports a greater number of languages, however !SilverCity is generally faster since it is a library and isn\'t executed in an external process.\n\n=== About !SilverCity ===\n!SilverCity uses the lexer from [http://www.scintilla.org/ Scintilla]. Scintilla supports more languages than !SilverCity implements. If you want to add a language to !SilverCity supported by Scintilla, it\'s not very difficult. See [http://trac.edgewall.org/wiki/SilverCityAddLanguage SilverCityAddLanguage] for some information how.\n\n=== About Pygments ===\n\nStarting with trac 0.11 [http://pygments.org/ pygments] will be the new default highlighter. It\'s a highlighting library implemented in pure python, very fast, easy to extend and [http://pygments.org/docs/ well documented]. While it does not support as many languages as Enscript or Scintilla the overall output quality is much better.\n\nTo use pygments in trac 0.11 you just have to install pygments 0.6 or higher.  If you want to use it in trac 0.10 too you have to install the [th:TracPygmentsPlugin TracPygmentsPlugin] from trac hacks. If you encounter any bugs, please file tickets regarding Pygments at [http://dev.pocoo.org/projects/pygments/ the Pygments Trac site].\n\nThe Pygments default style can specified in the [TracIni#mimeviewer-section mime-viewer] section of trac.ini. The default style can be over-ridden by setting a Style preference on the [/prefs/pygments preferences page]. \n\nIt\'s very likely that the list below is outdated because the list of supported pygments lexers is growing weekly. Just have a look at the page of [http://pygments.org/docs/lexers/ supported lexers] on the pygments webpage.\n\n\n== Syntax Coloring Support ==\n\n|| || !SilverCity || Enscript || Pygments ||\n|| Ada      ||   || X || ||\n|| Asm      ||   || X || ||\n|| Apache Conf (htaccess)) || || || X ||\n|| * ASP    || X || X || ||\n|| * C      || X || X || X ||\n|| * C#     ||   || X(2) || X ||\n|| * C++    || X || X || X ||\n|| * Java   || X(4)|| X || X ||\n|| Awk      ||   || X || ||\n|| Boo || || || X ||\n|| CSS      || X ||   || X ||\n|| Python Doctests || || || X ||\n|| Diff     ||   || X || X ||\n|| Eiffel   ||   || X || ||\n|| Elisp    ||   || X || ||\n|| Fortran  ||   || X(3) || X ||\n|| Haskell  ||   || X || X ||\n|| Genshi || || || X ||\n|| HTML     || X || X || X ||\n|| IDL      ||   || X || ||\n|| INI || || || X ||\n|| Javascript || X || X || X ||\n|| Lua || || || X ||\n|| m4       ||   || X || ||\n|| Makefile ||   || X || X ||\n|| Mako || || || X ||\n|| Matlab   ||   || X (5) || ||\n|| Mygthy || || || X ||\n|| Objective-C|| || X ||X ||\n|| OCaml    ||   ||   || X ||\n|| Pascal   ||   || X || X ||\n|| * Perl   || X || X || X ||\n|| * PHP    || X ||   || X ||\n|| PSP      || X ||   || ||\n|| Pyrex    ||   || X || ||\n|| * Python || X || X || X ||\n|| * Ruby   || X || X (1) || X ||\n|| Scheme   ||   || X || X ||\n|| Shell    ||   || X || X ||\n|| Smarty || || || X ||\n|| SQL      || X || X || X ||\n|| Troff    ||   || X || X ||\n|| TCL      ||   || X || ||\n|| Tex      ||   || X || X ||\n|| Verilog  || X(4) || X || ||\n|| VHDL     ||   || X || ||\n|| Visual Basic |||| X || X ||\n|| VRML     ||   || X || ||\n|| XML      || X ||  || X ||\n\n\'\'(*) Supported as inline code blocks in [wiki:WikiFormatting Wiki text] using WikiProcessors.\'\'\n\n\'\'(1) Ruby highlighting is not included in the Enscript distribution.  Highlighting rules for Ruby can be obtained from: http://neugierig.org/software/ruby/\n\n\'\'(2) C# highlighting is not included in the Enscript distribution.  Highlighting rules for C# can be obtained from: http://wiki.hasno.info/index.php/Csharp.st\n\n\'\'(3) Fortran: as packaged, Enscript only supports the fixed source form. Highlighting rules for Fortran 90x/2003 can be obtained from: http://wiki.hasno.info/index.php/F90.st\n\n\'\'(4) since Silvercity 0.9.7 released on 2006-11-23\n\n\'\'(5) By default `.m` files are considered Objective-C files. In order to treat `.m` files as MATLAB files, add \"text/x-matlab:m\" to the \"mime_map\" setting in the [wiki:TracIni#mimeviewer-section \"[mimeviewer] section of trac.ini\"].\n\n== Extra Software ==\n * GNU Enscript -- http://directory.fsf.org/GNU/enscript.html\n * GNU Enscript for Windows -- http://gnuwin32.sourceforge.net/packages/enscript.htm\n * !SilverCity -- http://silvercity.sf.net/\n * Pygments -- http://pygments.org/\n\n----\nSee also: WikiProcessors, WikiFormatting, TracWiki, TracBrowser\n\n',NULL,NULL),('TracSyntaxColoring',2,1397068026243748,'trac','127.0.0.1','= Syntax Coloring of Source Code =\nTrac supports language-specific syntax highlighting of source code within wiki formatted text in [WikiProcessors#CodeHighlightingSupport wiki processors] blocks and in the [TracBrowser repository browser].\n\nTo do this, Trac uses external libraries with support for a great number of programming languages.\n\nCurrently Trac supports syntax coloring using one or more of the following packages:\n\n * [http://pygments.pocoo.org/ Pygments], by far the preferred system, as it covers a wide range of programming languages and other structured texts and is actively supported\n * [http://www.codento.com/people/mtr/genscript/ GNU Enscript], commonly available on Unix but somewhat unsupported on Windows\n * [http://silvercity.sourceforge.net/ SilverCity], legacy system, some versions can be [http://trac.edgewall.org/wiki/TracFaq#why-is-my-css-code-not-being-highlighted-even-though-i-have-silvercity-installed problematic]\n\n\nTo activate syntax coloring, simply install either one (or more) of these packages (see [#ExtraSoftware] section below).\nIf none of these packages is available, Trac will display the data as plain text. \n\n\n=== About Pygments ===\n\nStarting with trac 0.11 [http://pygments.org/ pygments] will be the new default highlighter. It\'s a highlighting library implemented in pure python, very fast, easy to extend and [http://pygments.org/docs/ well documented].\n\nThe Pygments default style can specified in the [TracIni#mimeviewer-section mime-viewer] section of trac.ini. The default style can be overridden by setting a Style preference on the [/prefs/pygments preferences page]. \n\nIt\'s very likely that the list below is outdated because the list of supported pygments lexers is growing weekly. Just have a look at the page of [http://pygments.org/docs/lexers/ supported lexers] on the pygments webpage.\n\n\n== Syntax Coloring Support ==\n\n=== Known MIME Types\n\n[[KnownMimeTypes]]\n\nNote that the rich content may be directly //rendered// instead of syntax highlighted. This usually depends on which auxiliary packages are installed and on which components are activated in your setup. For example a `text/x-rst` document will be rendered via `docutils` if it is installed and the `trac.mimeview.rst.ReStructuredTextRenderer` is not disabled, and will be syntax highlighted otherwise.\n\nIn a similar way, a document with the mimetype `text/x-trac-wiki` is rendered using the Trac wiki formatter, unless the `trac.mimeview.api.WikiTextRenderer` component is disabled.\n\nHTML documents are directly rendered only if the `render_unsafe_html` settings are enabled in the TracIni (those settings are present in multiple sections, as there are different security concerns depending where the document comes from). If you want to ensure that an HTML document gets syntax highlighted and not rendered, use the `text/xml` mimetype.\n\nIf mimetype such as \'svn:mime-type\' is set to \'text/plain\', there is no coloring even if file is known type like \'java\'.\n\n=== List of Languages Supported, by Highlighter #language-supported\n\nThis list is only indicative.\n\n||                 ||= !SilverCity   =||= Enscript      =||= Pygments =||\n|| Ada             ||                 ||  ✓              ||     ||\n|| Asm             ||                 ||  ✓              ||     ||\n|| Apache Conf     ||                 ||                 ||  ✓  ||\n|| ASP             ||  ✓              ||  ✓              ||     ||\n|| C               ||  ✓              ||  ✓              ||  ✓  ||\n|| C#              ||                 ||  ✓ ^[#a1 (1)]^  ||  ✓  ||\n|| C++             ||  ✓              ||  ✓              ||  ✓  ||\n|| CMake           ||  ?              ||  ?              ||  ✓  ||\n|| Java            ||  ✓ ^[#a2 (2)]^  ||  ✓              ||  ✓  ||\n|| Awk             ||                 ||  ✓              ||     ||\n|| Boo             ||                 ||                 ||  ✓  ||\n|| CSS             ||  ✓              ||                 ||  ✓  ||\n|| Python Doctests ||                 ||                 ||  ✓  ||\n|| Diff            ||                 ||  ✓              ||  ✓  ||\n|| Eiffel          ||                 ||  ✓              ||     ||\n|| Elisp           ||                 ||  ✓              ||     ||\n|| Fortran         ||                 ||  ✓ ^[#a1 (1)]^  ||  ✓  ||\n|| Haskell         ||                 ||  ✓              ||  ✓  ||\n|| Genshi          ||                 ||                 ||  ✓  ||\n|| HTML            ||  ✓              ||  ✓              ||  ✓  ||\n|| IDL             ||                 ||  ✓              ||     ||\n|| INI             ||                 ||                 ||  ✓  ||\n|| Javascript      ||  ✓              ||  ✓              ||  ✓  ||\n|| Lua             ||                 ||                 ||  ✓  ||\n|| m4              ||                 ||  ✓              ||     ||\n|| Makefile        ||                 ||  ✓              ||  ✓  ||\n|| Mako            ||                 ||                 ||  ✓  ||\n|| Matlab ^[#a3 (3)]^  ||             ||  ✓              ||  ✓  ||\n|| Mygthy          ||                 ||                 ||  ✓  ||\n|| Objective-C     ||                 ||  ✓              ||  ✓  ||\n|| OCaml           ||                 ||                 ||  ✓  ||\n|| Pascal          ||                 ||  ✓              ||  ✓  ||\n|| Perl            ||  ✓              ||  ✓              ||  ✓  ||\n|| PHP             ||  ✓              ||                 ||  ✓  ||\n|| PSP             ||  ✓              ||                 ||     ||\n|| Pyrex           ||                 ||  ✓              ||     ||\n|| Python          ||  ✓              ||  ✓              ||  ✓  ||\n|| Ruby            ||  ✓              ||  ✓ ^[#a1 (1)]^  ||  ✓  ||\n|| Scheme          ||                 ||  ✓              ||  ✓  ||\n|| Shell           ||                 ||  ✓              ||  ✓  ||\n|| Smarty          ||                 ||                 ||  ✓  ||\n|| SQL             ||  ✓              ||  ✓              ||  ✓  ||\n|| Troff           ||                 ||  ✓              ||  ✓  ||\n|| TCL             ||                 ||  ✓              ||     ||\n|| Tex             ||                 ||  ✓              ||  ✓  ||\n|| Verilog         ||  ✓ ^[#a2 (2)]^  ||  ✓              ||     ||\n|| VHDL            ||                 ||  ✓              ||     ||\n|| Visual Basic    ||                 ||  ✓              ||  ✓  ||\n|| VRML            ||                 ||  ✓              ||     ||\n|| XML             ||  ✓              ||                 ||  ✓  ||\n\n\n\n\'\'[=#a1 (1)] Not included in the Enscript distribution.  Additional highlighting rules can be obtained for\n[http://neugierig.org/software/ruby/ Ruby],\n[http://wiki.hasno.info/index.php/Csharp.st C#],\n[http://wiki.hasno.info/index.php/F90.st Fortran 90x/2003]\n\n\'\'[=#a2 (2)] since Silvercity 0.9.7 released on 2006-11-23\n\n\'\'[=#a3 (3)] By default `.m` files are considered Objective-C files. In order to treat `.m` files as MATLAB files, add \"text/matlab:m\" to the \"mime_map\" setting in the [wiki:TracIni#mimeviewer-section \"[mimeviewer] section of trac.ini\"].\n\n== Extra Software ==\n * GNU Enscript — http://directory.fsf.org/GNU/enscript.html\n * GNU Enscript for Windows — http://gnuwin32.sourceforge.net/packages/enscript.htm\n * !SilverCity — http://silvercity.sf.net/\n * **Pygments — http://pygments.org/**\n\n----\nSee also: WikiProcessors, WikiFormatting, TracWiki, TracBrowser\n',NULL,NULL),('TracTickets',1,1291894092000000,'trac','127.0.0.1','= The Trac Ticket System =\n[[TracGuideToc]]\n\nThe Trac ticket database provides simple but effective tracking of issues and bugs within a project.\n\nAs the central project management element of Trac, tickets are used for \'\'\'project tasks\'\'\', \'\'\'feature requests\'\'\', \'\'\'bug reports\'\'\' and \'\'\'software support issues\'\'\'. \n\nAs with the TracWiki, this subsystem has been designed with the goal of making user contribution and participation as simple as possible. It should be as easy as possible to report bugs, ask questions and suggest improvements.\n\nAn issue is assigned to a person who must resolve it or reassign the ticket to someone else.\nAll tickets can be edited, annotated, assigned, prioritized and discussed at any time.\n\n== Ticket Fields ==\n\nA  ticket contains the following information attributes:\n \n * \'\'\'Reporter\'\'\' - The author of the ticket.\n * \'\'\'Type\'\'\' - The nature of the ticket (for example, defect or enhancement request)\n\n * \'\'\'Component\'\'\' - The project module or subsystem this ticket concerns.\n * \'\'\'Version\'\'\' - Version of the project that this ticket pertains to.\n * \'\'\'Keywords\'\'\' - Keywords that a ticket is marked with.  Useful for searching and report generation.\n\n * \'\'\'Priority\'\'\' - The importance of this issue, ranging from \'\'trivial\'\' to \'\'blocker\'\'.\n * \'\'\'Milestone\'\'\' - When this issue should be resolved at the latest.\n * \'\'\'Assigned to/Owner\'\'\' - Principal person responsible for handling the issue.\n * \'\'\'Cc\'\'\' - A comma-separated list of other users or E-Mail addresses to notify. \'\'Note that this does not imply responsiblity or any other policy.\'\'\n \n * \'\'\'Resolution\'\'\' - Reason for why a ticket was closed. One of {{{fixed}}}, {{{invalid}}}, {{{wontfix}}}, {{{duplicate}}}, {{{worksforme}}}.\n * \'\'\'Status\'\'\' - What is the current status? One of {{{new}}}, {{{assigned}}}, {{{closed}}}, {{{reopened}}}.\n * \'\'\'Summary\'\'\' - A brief description summarizing the problem or issue.\n * \'\'\'Description\'\'\' - The body of the ticket. A good description should be specific, descriptive and to the point.\n\n\'\'\'Note:\'\'\' Versions of Trac prior to 0.9 did not have the \'\'type\'\' field, but instead provided a \'\'severity\'\' field and different default values for the \'\'priority\'\' field. This change was done to simplify the ticket model by removing the somewhat blurry distinction between \'\'priority\'\' and \'\'severity\'\'. However, the old model is still available if you prefer it: just add/modify the default values of the \'\'priority\'\' and \'\'severity\'\', and optionally hide the \'\'type\'\' field by removing all the possible values through [wiki:TracAdmin trac-admin].\n\n\'\'\'Note:\'\'\' the [trac:TicketTypes type], [trac:TicketComponent component], version, priority and severity fields can be managed with [wiki:TracAdmin trac-admin] or with the [trac:WebAdmin WebAdmin] plugin.\n\n\'\'\'Note:\'\'\' Description of the builtin \'\'priority\'\' values is available at [trac:TicketTypes#Whyistheseverityfieldgone TicketTypes]\n\n== Changing and Commenting Tickets ==\n\nOnce a ticket has been entered into Trac, you can at any time change the\ninformation by \'\'\'annotating\'\'\' the bug. This means changes and comments to\nthe ticket are logged as a part of the ticket itself.\n\nWhen viewing a ticket, the history of changes will appear below the main ticket area.\n\n\'\'In the Trac project, we use ticket comments to discuss issues and tasks. This makes\nunderstanding the motivation behind a design- or implementation choice easier,\nwhen returning to it later.\'\'\n\n\'\'\'Note:\'\'\' An important feature is being able to use TracLinks and\nWikiFormatting in ticket descriptions and comments. Use TracLinks to refer to\nother issues, changesets or files to make your ticket more specific and easier\nto understand.\n\n\'\'\'Note:\'\'\' See TracNotification for how to configure email notifications of ticket changes.\n\n\'\'\'Note:\'\'\' See TracWorkflow for information about the state transitions (ticket lifecycle), and how this workflow can be customized.\n\n== Default Values for Drop-Down Fields ==\n\nThe option selected by default for the various drop-down fields can be set in [wiki:TracIni trac.ini], in the `[ticket]` section:\n\n * `default_component`: Name of the component selected by default\n * `default_milestone`: Name of the default milestone\n * `default_priority`: Default priority value\n * `default_severity`: Default severity value\n * `default_type`: Default ticket type\n * `default_version`: Name of the default version\n * `default_owner`: Name of the default owner, \'\'if no owner for the component has been set\'\'\n\nIf any of these options are omitted, the default value will either be the first in the list, or an empty value, depending on whether the field in question is required to be set.  Some of these can be chosen through the [trac:WebAdmin WebAdmin] plugin in the \"Ticket System\" section (others in the \"trac.ini\" section).  The default owner for a ticket will be the component owner, if that is set, or `default_owner`, if not.\n\n\n== Hiding Fields and Adding Custom Fields ==\n\nMany of the default ticket fields can be hidden from the ticket web interface simply by removing all the possible values through [wiki:TracAdmin trac-admin]. This of course only applies to drop-down fields, such as \'\'type\'\', \'\'priority\'\', \'\'severity\'\', \'\'component\'\', \'\'version\'\' and \'\'milestone\'\'.\n\nTrac also lets you add your own custom ticket fields. See TracTicketsCustomFields for more information.\n\n\n== Assign-to as Drop-Down List ==\n\nIf the list of possible ticket owners is finite, you can change the \'\'assign-to\'\' ticket field from a text input to a drop-down list. This is done by setting the `restrict_owner` option of the `[ticket]` section in [wiki:TracIni trac.ini] to “true”. In that case, Trac will use the list of all users who have accessed the project to populate the drop-down field.\n\nTo appear in the dropdown list, a user needs be registered with the project, \'\'i.e.\'\' a user session should exist in the database. Such an entry is automatically created in the database the first time the user submits a change in the project, for example when editing the user\'s details in the \'\'Settings\'\' page, or simply by authenticating if the user has a login. Also, the user must have `TICKET_MODIFY` [TracPermissions permissions].\n\n\'\'\'Note:\'\'\' See [http://pacopablo.com/wiki/pacopablo/blog/set-assign-to-drop-down Populating Assign To Drop Down] on how to add user entries at database level\n\n\'\'\'Note 2:\'\'\' If you need serious flexibility and aren\'t afraid of a little plugin coding of your own, see [http://trac-hacks.org/wiki/FlexibleAssignToPlugin FlexibleAssignTo] (disclosure: I\'m the author)\n\n\'\'\'Note 3:\'\'\' Activating this option may cause some performance degradation, read more about this in the [trac:TracPerformance#Configuration Trac performance] page.\n\n== Preset Values for New Tickets ==\n\nTo create a link to the new-ticket form filled with preset values, you need to call the `/newticket?` URL with variable=value separated by &. \n\nPossible variables are :\n\n * \'\'\'type\'\'\' - The type droplist\n * \'\'\'reporter\'\'\' - Name or email of the reporter\n * \'\'\'summary\'\'\' - Summary line for the ticket\n * \'\'\'description\'\'\' - Long description of the ticket\n * \'\'\'component\'\'\' - The component droplist\n * \'\'\'version\'\'\' - The version droplist\n * \'\'\'severity\'\'\' - The severity droplist\n * \'\'\'keywords\'\'\' - The keywords \n * \'\'\'priority\'\'\' - The priority droplist\n * \'\'\'milestone\'\'\' - The milestone droplist\n * \'\'\'owner\'\'\' - The person responsible for the ticket\n * \'\'\'cc\'\'\' - The list of emails for notifying about the ticket change\n\n\'\'\'Example:\'\'\' \'\'/trac/newticket?summary=Compile%20Error&version=1.0&component=gui\'\'[[BR]]\n\n----\nSee also:  TracGuide, TracWiki, TracTicketsCustomFields, TracNotification, TracReports, TracQuery',NULL,NULL),('TracTickets',2,1397068026253698,'trac','127.0.0.1','= The Trac Ticket System =\n[[TracGuideToc]]\n\nThe Trac ticket database provides simple but effective tracking of issues and bugs within a project.\n\nAs the central project management element of Trac, tickets can be used for \'\'\'project tasks\'\'\', \'\'\'feature requests\'\'\', \'\'\'bug reports\'\'\', \'\'\'software support issues\'\'\' among others. \n\nAs with the TracWiki, this subsystem has been designed with the goal of making user contribution and participation as simple as possible. It should be as easy as possible to report bugs, ask questions, suggest improvements and discuss resolutions.\n\nAn issue is assigned to a person who must resolve it or reassign the ticket to someone else.\nAll tickets can be edited, annotated, assigned, prioritized and discussed at any time.\n\n[=#edit-permissions]\nHowever, some Trac installations may put restrictions in place about who can change what. For example, the default installation doesn\'t permit to non-authenticated users (\"anonymous\" users) to change anything, even to comment on an issue, for obvious spam prevention reasons. Check the local contributing policy, which you can usually find on the front page WikiStart, or contact your local Trac administrator.\n\n== Ticket Fields ==\n\nA  ticket contains the following information attributes:\n \n * \'\'\'Reporter\'\'\' — The author of the ticket.\n * \'\'\'Type\'\'\' — The nature of the ticket (for example, defect or enhancement request). See TicketTypes for more details.\n * \'\'\'Component\'\'\' — The project module or subsystem this ticket concerns.\n * \'\'\'Version\'\'\' — Version of the project that this ticket pertains to.\n * \'\'\'Keywords\'\'\' — Keywords that a ticket is marked with. Useful for searching and report generation.\n * \'\'\'Priority\'\'\' — The importance of this issue, ranging from \'\'trivial\'\' to \'\'blocker\'\'. A pull-down if different priorities where defined.\n * \'\'\'Milestone\'\'\' — When this issue should be resolved at the latest. A pull-down menu containing a list of milestones.\n * \'\'\'Assigned to/Owner\'\'\' — Principal person responsible for handling the issue.\n * \'\'\'Cc\'\'\' — A comma-separated list of other users or E-Mail addresses to notify. \'\'Note that this does not imply responsiblity or any other policy.\'\'\n * \'\'\'Resolution\'\'\' — Reason for why a ticket was closed. One of {{{fixed}}}, {{{invalid}}}, {{{wontfix}}}, {{{duplicate}}}, {{{worksforme}}}.\n * \'\'\'Status\'\'\' — What is the current status? One of {{{new}}}, {{{assigned}}}, {{{closed}}}, {{{reopened}}}.\n * \'\'\'Summary\'\'\' — A brief description summarizing the problem or issue. Simple text without WikiFormatting.\n * \'\'\'Description\'\'\' — The body of the ticket. A good description should be specific, descriptive and to the point. Accepts WikiFormatting.\n\n\'\'\'Notes:\'\'\' \n - Versions of Trac prior to 0.9 did not have the \'\'type\'\' field, but instead provided a \'\'severity\'\' field and different default values for the \'\'priority\'\' field. This change was done to simplify the ticket model by removing the somewhat blurry distinction between \'\'priority\'\' and \'\'severity\'\'. However, the old model is still available if you prefer it: just add/modify the default values of the \'\'priority\'\' and \'\'severity\'\', and optionally hide the \'\'type\'\' field by removing all the possible values through [wiki:TracAdmin trac-admin].\n\n - the [trac:TicketTypes type], [trac:TicketComponent component], version, priority and severity fields can be managed with [wiki:TracAdmin trac-admin] or with the [trac:WebAdmin WebAdmin] plugin.\n\n - Description of the builtin \'\'priority\'\' values is available at [trac:TicketTypes#Whyistheseverityfieldgone TicketTypes]\n\n== Changing and Commenting Tickets ==\n\nWith appropriate permissions, as already mentioned [#edit-permissions above], a ticket entered into Trac can at any time be modified by \'\'\'annotating\'\'\'.\n\nThen, annotations like changes and comments to the ticket are logged as a part of the ticket itself. When viewing a ticket, the history of changes will appear below the main ticket area.\n\nComment editing (available since 0.12) is meant to be used to make small corrections to comments, like fixing formatting, forgotten WikiFormatting or spelling errors, not major edits. For longer edits, you should be adding a new comment instead. Editing a comment will not produce a new entry on [/timeline] while entering a new comment or other changes will do.\n\nAll edits (field changes, new comments, comment edits) update the \"last changed\" time of the ticket.\n\n\n\'\'\'Notes:\'\'\' \n - An important feature is being able to use TracLinks and WikiFormatting in ticket descriptions and comments. Use TracLinks to refer to other issues, changesets or files to make your ticket more specific and easier to understand.\n\n - See TracNotification for how to configure email notifications of ticket changes.\n\n - See TracWorkflow for information about the state transitions (ticket lifecycle), and how this workflow can be customized.\n\n== Default Values for Drop-Down Fields ==\n\nThe option selected by default for the various drop-down fields can be set in [wiki:TracIni trac.ini], in the `[ticket]` section:\n\n * `default_component`: Name of the component selected by default\n * `default_milestone`: Name of the default milestone\n * `default_priority`: Default priority value\n * `default_severity`: Default severity value\n * `default_type`: Default ticket type\n * `default_version`: Name of the default version\n * `default_owner`: Name of the default owner. If set to the text \"< default >\" (the default value), the component owner is used.\n\nIf any of these options are omitted, the default value will either be the first in the list, or an empty value, depending on whether the field in question is required to be set.  Some of these can be chosen through the [trac:WebAdmin WebAdmin] plugin in the \"Ticket System\" section (others in the [[wiki:TracIni#ticket-section|\"[ticket]\"]] section in `trac.ini`).\n\n\n== Hiding Fields and Adding Custom Fields ==\n\nMany of the default ticket fields can be hidden from the ticket web interface simply by removing all the possible values through [wiki:TracAdmin trac-admin]. This of course only applies to drop-down fields, such as \'\'type\'\', \'\'priority\'\', \'\'severity\'\', \'\'component\'\', \'\'version\'\' and \'\'milestone\'\'.\n\nTrac also lets you add your own custom ticket fields. See TracTicketsCustomFields for more information.\n\n\n== Assign-to as Drop-Down List ==\n\nIf the list of possible ticket owners is finite, you can change the \'\'assign-to\'\' ticket field from a text input to a drop-down list. This is done by setting the `restrict_owner` option of the `[ticket]` section in [wiki:TracIni trac.ini] to “true”. In that case, Trac will use the list of all users who have accessed the project to populate the drop-down field.\n\nTo appear in the dropdown list, a user needs be registered with the project, \'\'i.e.\'\' a user session should exist in the database. Such an entry is automatically created in the database the first time the user submits a change in the project, for example when editing the user\'s details in the \'\'Settings\'\' page, or simply by authenticating if the user has a login. Also, the user must have `TICKET_MODIFY` [TracPermissions permissions].\n\n\'\'\'Notes:\'\'\' \n - See [http://pacopablo.com/wiki/pacopablo/blog/set-assign-to-drop-down Populating Assign To Drop Down] on how to add user entries at database level\n\n - If you need serious flexibility and aren\'t afraid of a little plugin coding of your own, see [http://trac-hacks.org/wiki/FlexibleAssignToPlugin FlexibleAssignTo] (disclosure: I\'m the author)\n\n -  Activating this option may cause some performance degradation, read more about this in the [trac:TracPerformance#Configuration Trac performance] page.\n\n== Preset Values for New Tickets ==\n\nTo create a link to the new-ticket form filled with preset values, you need to call the `/newticket?` URL with `variable=value` separated by `&`. \n\nPossible variables are :\n\n * \'\'\'type\'\'\' — The type droplist\n * \'\'\'reporter\'\'\' — Name or email of the reporter\n * \'\'\'summary\'\'\' — Summary line for the ticket\n * \'\'\'description\'\'\' — Long description of the ticket\n * \'\'\'component\'\'\' — The component droplist\n * \'\'\'version\'\'\' — The version droplist\n * \'\'\'severity\'\'\' — The severity droplist\n * \'\'\'keywords\'\'\' — The keywords \n * \'\'\'priority\'\'\' — The priority droplist\n * \'\'\'milestone\'\'\' — The milestone droplist\n * \'\'\'owner\'\'\' — The person responsible for the ticket\n * \'\'\'cc\'\'\' — The list of emails for notifying about the ticket change\n\nExample: \'\'`[/newticket?summary=Compile%20Error&version=1.0&component=gui]`\'\'[[BR]]\n\n----\nSee also:  TracGuide, TracWiki, TracTicketsCustomFields, TracNotification, TracReports, TracQuery\n',NULL,NULL),('TracTicketsCustomFields',1,1291894092000000,'trac','127.0.0.1','= Custom Ticket Fields =\nTrac supports adding custom, user-defined fields to the ticket module. Using custom fields, you can add typed, site-specific properties to tickets.\n\n== Configuration ==\nConfiguring custom ticket fields is done in the [wiki:TracIni trac.ini] file. All field definitions should be under a section named `[ticket-custom]`.\n\nThe syntax of each field definition is:\n{{{\n FIELD_NAME = TYPE\n (FIELD_NAME.OPTION = VALUE)\n ...\n}}}\nThe example below should help to explain the syntax.\n\n=== Available Field Types and Options ===\n * \'\'\'text\'\'\': A simple (one line) text field.\n   * label: Descriptive label.\n   * value: Default value.\n   * order: Sort order placement. (Determines relative placement in forms with respect to other custom fields.)\n   * format: Either `plain` for plain text or `wiki` to interpret the content as WikiFormatting. (\'\'since 0.11.3\'\')\n * \'\'\'checkbox\'\'\': A boolean value check box.\n   * label: Descriptive label.\n   * value: Default value (0 or 1).\n   * order: Sort order placement.\n * \'\'\'select\'\'\': Drop-down select box. Uses a list of values.\n   * label: Descriptive label.\n   * options: List of values, separated by \'\'\'|\'\'\' (vertical pipe).\n   * value: Default value (one of the values from options).\n   * order: Sort order placement.\n * \'\'\'radio\'\'\': Radio buttons. Essentially the same as \'\'\'select\'\'\'.\n   * label: Descriptive label.\n   * options: List of values, separated by \'\'\'|\'\'\' (vertical pipe).\n   * value: Default value (one of the values from options).\n   * order: Sort order placement.\n * \'\'\'textarea\'\'\': Multi-line text area.\n   * label: Descriptive label.\n   * value: Default text.\n   * cols: Width in columns.\n   * rows: Height in lines.\n   * order: Sort order placement.\n   * format: Either `plain` for plain text or `wiki` to interpret the content as WikiFormatting. (\'\'since 0.11.3\'\')\n\n=== Sample Config ===\n{{{\n[ticket-custom]\n\ntest_one = text\ntest_one.label = Just a text box\n\ntest_two = text\ntest_two.label = Another text-box\ntest_two.value = Default [mailto:joe@nospam.com owner]\ntest_two.format = wiki\n\ntest_three = checkbox\ntest_three.label = Some checkbox\ntest_three.value = 1\n\ntest_four = select\ntest_four.label = My selectbox\ntest_four.options = one|two|third option|four\ntest_four.value = two\n\ntest_five = radio\ntest_five.label = Radio buttons are fun\ntest_five.options = uno|dos|tres|cuatro|cinco\ntest_five.value = dos\n\ntest_six = textarea\ntest_six.label = This is a large textarea\ntest_six.value = Default text\ntest_six.cols = 60\ntest_six.rows = 30\n}}}\n\n\'\'Note: To make entering an option for a `select` type field optional, specify a leading `|` in the `fieldname.options` option.\'\'\n\n=== Reports Involving Custom Fields ===\n\nCustom ticket fields are stored in the `ticket_custom` table, not in the `ticket` table. So to display the values from custom fields in a report, you will need a join on the 2 tables. Let\'s use an example with a custom ticket field called `progress`.\n\n{{{\n#!sql\nSELECT p.value AS __color__,\n   id AS ticket, summary, owner, c.value AS progress\n  FROM ticket t, enum p, ticket_custom c\n  WHERE status IN (\'assigned\') AND t.id = c.ticket AND c.name = \'progress\'\nAND p.name = t.priority AND p.type = \'priority\'\n  ORDER BY p.value\n}}}\n\'\'\'Note\'\'\' that this will only show tickets that have progress set in them, which is \'\'\'not the same as showing all tickets\'\'\'. If you created this custom ticket field \'\'after\'\' you have already created some tickets, they will not have that field defined, and thus they will never show up on this ticket query. If you go back and modify those tickets, the field will be defined, and they will appear in the query. If that\'s all you want, you\'re set.\n\nHowever, if you want to show all ticket entries (with progress defined and without), you need to use a `JOIN` for every custom field that is in the query.\n{{{\n#!sql\nSELECT p.value AS __color__,\n   id AS ticket, summary, component, version, milestone, severity,\n   (CASE status WHEN \'assigned\' THEN owner||\' *\' ELSE owner END) AS owner,\n   time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter,\n  (CASE WHEN c.value = \'0\' THEN \'None\' ELSE c.value END) AS progress\n  FROM ticket t\n     LEFT OUTER JOIN ticket_custom c ON (t.id = c.ticket AND c.name = \'progress\')\n     JOIN enum p ON p.name = t.priority AND p.type=\'priority\'\n  WHERE status IN (\'new\', \'assigned\', \'reopened\')\n  ORDER BY p.value, milestone, severity, time\n}}}\n\nNote in particular the `LEFT OUTER JOIN` statement here.\n\n=== Updating the database ===\n\nAs noted above, any tickets created before a custom field has been defined will not have a value for that field. Here\'s a bit of SQL (tested with SQLite) that you can run directly on the Trac database to set an initial value for custom ticket fields. Inserts the default value of \'None\' into a custom field called \'request_source\' for all tickets that have no existing value:\n\n{{{\n#!sql\nINSERT INTO ticket_custom\n   (ticket, name, value)\n   SELECT \n      id AS ticket,\n      \'request_source\' AS name,\n      \'None\' AS value\n   FROM ticket \n   WHERE id NOT IN (\n      SELECT ticket FROM ticket_custom\n   );\n}}}\n\nIf you added multiple custom fields at different points in time, you should be more specific in the subquery on table {{{ticket}}} by adding the exact custom field name to the query:\n\n{{{\n#!sql\nINSERT INTO ticket_custom\n   (ticket, name, value)\n   SELECT \n      id AS ticket,\n      \'request_source\' AS name,\n      \'None\' AS value\n   FROM ticket \n   WHERE id NOT IN (\n      SELECT ticket FROM ticket_custom WHERE name = \'request_source\'\n   );\n}}}\n\n----\nSee also: TracTickets, TracIni',NULL,NULL),('TracTicketsCustomFields',2,1397068026273911,'trac','127.0.0.1','= Custom Ticket Fields =\nTrac supports adding custom, user-defined fields to the ticket module. Using custom fields, you can add typed, site-specific properties to tickets.\n\n== Configuration ==\nConfiguring custom ticket fields is done in the [wiki:TracIni trac.ini] file. All field definitions should be under a section named `[ticket-custom]`.\n\nThe syntax of each field definition is:\n{{{\n FIELD_NAME = TYPE\n (FIELD_NAME.OPTION = VALUE)\n ...\n}}}\nThe example below should help to explain the syntax.\n\n=== Available Field Types and Options ===\n * \'\'\'text\'\'\': A simple (one line) text field.\n   * label: Descriptive label.\n   * value: Default value.\n   * order: Sort order placement. (Determines relative placement in forms with respect to other custom fields.)\n   * format: One of: \n     * `plain` for plain text \n     * `wiki` to interpret the content as WikiFormatting (\'\'since 0.11.3\'\') \n     * `reference` to treat the content as a queryable value (\'\'since 1.0\'\') \n     * `list` to interpret the content as a list of queryable values, separated by whitespace (\'\'since 1.0\'\')\n * \'\'\'checkbox\'\'\': A boolean value check box.\n   * label: Descriptive label.\n   * value: Default value (0 or 1).\n   * order: Sort order placement.\n * \'\'\'select\'\'\': Drop-down select box. Uses a list of values.\n   * label: Descriptive label.\n   * options: List of values, separated by \'\'\'|\'\'\' (vertical pipe).\n   * value: Default value (one of the values from options).\n   * order: Sort order placement.\n * \'\'\'radio\'\'\': Radio buttons. Essentially the same as \'\'\'select\'\'\'.\n   * label: Descriptive label.\n   * options: List of values, separated by \'\'\'|\'\'\' (vertical pipe).\n   * value: Default value (one of the values from options).\n   * order: Sort order placement.\n * \'\'\'textarea\'\'\': Multi-line text area.\n   * label: Descriptive label.\n   * value: Default text.\n   * cols: Width in columns.\n   * rows: Height in lines.\n   * order: Sort order placement.\n   * format: Either `plain` for plain text or `wiki` to interpret the content as WikiFormatting. (\'\'since 0.11.3\'\')\n\n=== Sample Config ===\n{{{\n[ticket-custom]\n\ntest_one = text\ntest_one.label = Just a text box\n\ntest_two = text\ntest_two.label = Another text-box\ntest_two.value = Default [mailto:joe@nospam.com owner]\ntest_two.format = wiki\n\ntest_three = checkbox\ntest_three.label = Some checkbox\ntest_three.value = 1\n\ntest_four = select\ntest_four.label = My selectbox\ntest_four.options = one|two|third option|four\ntest_four.value = two\n\ntest_five = radio\ntest_five.label = Radio buttons are fun\ntest_five.options = uno|dos|tres|cuatro|cinco\ntest_five.value = dos\n\ntest_six = textarea\ntest_six.label = This is a large textarea\ntest_six.value = Default text\ntest_six.cols = 60\ntest_six.rows = 30\n}}}\n\n\'\'Note: To make entering an option for a `select` type field optional, specify a leading `|` in the `fieldname.options` option.\'\'\n\n=== Reports Involving Custom Fields ===\n\nCustom ticket fields are stored in the `ticket_custom` table, not in the `ticket` table. So to display the values from custom fields in a report, you will need a join on the 2 tables. Let\'s use an example with a custom ticket field called `progress`.\n\n{{{\n#!sql\nSELECT p.value AS __color__,\n   id AS ticket, summary, owner, c.value AS progress\n  FROM ticket t, enum p, ticket_custom c\n  WHERE status IN (\'assigned\') AND t.id = c.ticket AND c.name = \'progress\'\nAND p.name = t.priority AND p.type = \'priority\'\n  ORDER BY p.value\n}}}\n\'\'\'Note\'\'\' that this will only show tickets that have progress set in them, which is \'\'\'not the same as showing all tickets\'\'\'. If you created this custom ticket field \'\'after\'\' you have already created some tickets, they will not have that field defined, and thus they will never show up on this ticket query. If you go back and modify those tickets, the field will be defined, and they will appear in the query. If that\'s all you want, you\'re set.\n\nHowever, if you want to show all ticket entries (with progress defined and without), you need to use a `JOIN` for every custom field that is in the query.\n{{{\n#!sql\nSELECT p.value AS __color__,\n   id AS ticket, summary, component, version, milestone, severity,\n   (CASE status WHEN \'assigned\' THEN owner||\' *\' ELSE owner END) AS owner,\n   time AS created,\n   changetime AS _changetime, description AS _description,\n   reporter AS _reporter,\n  (CASE WHEN c.value = \'0\' THEN \'None\' ELSE c.value END) AS progress\n  FROM ticket t\n     LEFT OUTER JOIN ticket_custom c ON (t.id = c.ticket AND c.name = \'progress\')\n     JOIN enum p ON p.name = t.priority AND p.type=\'priority\'\n  WHERE status IN (\'new\', \'assigned\', \'reopened\')\n  ORDER BY p.value, milestone, severity, time\n}}}\n\nNote in particular the `LEFT OUTER JOIN` statement here.\n\n=== Updating the database ===\n\nAs noted above, any tickets created before a custom field has been defined will not have a value for that field. Here\'s a bit of SQL (tested with SQLite) that you can run directly on the Trac database to set an initial value for custom ticket fields. Inserts the default value of \'None\' into a custom field called \'request_source\' for all tickets that have no existing value:\n\n{{{\n#!sql\nINSERT INTO ticket_custom\n   (ticket, name, value)\n   SELECT \n      id AS ticket,\n      \'request_source\' AS name,\n      \'None\' AS value\n   FROM ticket \n   WHERE id NOT IN (\n      SELECT ticket FROM ticket_custom\n   );\n}}}\n\nIf you added multiple custom fields at different points in time, you should be more specific in the subquery on table {{{ticket}}} by adding the exact custom field name to the query:\n\n{{{\n#!sql\nINSERT INTO ticket_custom\n   (ticket, name, value)\n   SELECT \n      id AS ticket,\n      \'request_source\' AS name,\n      \'None\' AS value\n   FROM ticket \n   WHERE id NOT IN (\n      SELECT ticket FROM ticket_custom WHERE name = \'request_source\'\n   );\n}}}\n\n----\nSee also: TracTickets, TracIni',NULL,NULL),('TracTimeline',1,1291894092000000,'trac','127.0.0.1','= The Trac Timeline =\n[[TracGuideToc]]\n\nThe timeline provides a historic view of the project in a single report.\n\nIt lists all Trac events that have occurred in chronological order, a\nbrief description of each event and if applicable, the person responsible for\nthe change.\n\nThe timeline lists these kinds of events:\n * \'\'\'Wiki page events\'\'\' -- Creation and changes\n * \'\'\'Ticket events\'\'\' -- Creation and resolution/closing (and optionally other changes)\n * \'\'\'Source code changes \'\'\' -- Repository check-ins\n * \'\'\'Milestone \'\'\' -- Milestone completed\n\nEach event entry provides a hyperlink to the specific event in question, as well as\na brief excerpt of the actual comment or text, if available.\n\nSee [wiki:TracIni#timeline TracIni] for timeline configuration options.\n\n== RSS Support ==\n\nThe Timeline module supports subscription using RSS 2.0 syndication. To subscribe to project events, click the orange \'\'\'XML\'\'\' icon at the bottom of the page. See TracRss for more information on RSS support in Trac.\n\n----\nSee also: TracGuide, TracWiki, WikiFormatting, TracRss, TracNotification',NULL,NULL),('TracTimeline',2,1397068026265073,'trac','127.0.0.1','= The Trac Timeline =\n[[TracGuideToc]]\n\nThe timeline provides a historic view of the project in a single report.\n\nIt lists all Trac events that have occurred in chronological order, a\nbrief description of each event and if applicable, the person responsible for\nthe change.\n\nThe timeline lists these kinds of events:\n * \'\'\'Wiki page events\'\'\' — Creation and changes\n * \'\'\'Ticket events\'\'\' — Creation and resolution/closing (and optionally other changes)\n * \'\'\'Source code changes \'\'\' — Repository check-ins\n * \'\'\'Milestone \'\'\' — Milestone completed\n\nEach event entry provides a hyperlink to the specific event in question, who authored the change as well as\na brief excerpt of the actual comment or text, if available.\n\nIt is possible to filter the displayed events with the various filters in the option panel:\n * \'\'View changes from\'\' — the date from which to start displaying events (current date if empty). Events that occurred after this date will not be shown, only those that occurred before that date.\n * \'\'and X days back\'\' — how many days backwards in time to get events.\n * \'\'done by\'\' — the author of an event. It accepts a space-separated list of authors for which events should be included. Alternatively, if the author names are prefixed by a \"-\" character, then the events having those authors will be excluded, and all the others included. Single or double quotes can be used for specifying author names containing space characters. \'\'(since 0.12)\'\'\n * \'\'Changesets in all repositories\'\' — if you have more than one repository connected to your Trac project, then you can filter the output so events from specific repositories are not shown. \'\'(since 0.12)\'\'\n * \'\'Milestones reached\'\' — display or hide milestones reached.\n * \'\'Opened and closed tickets\'\' — display or hide ticket open or close events.\n * \'\'Wiki changes\'\' — display or hide Wiki change events.\n\nSee !TracIni\'s [wiki:TracIni#timeline-section \"[timeline] section\"] for timeline configuration options.\n\n== RSS Support ==\n\nThe Timeline module supports subscription using RSS 2.0 syndication. To subscribe to project events, click the orange \'\'\'XML\'\'\' icon at the bottom of the page. See TracRss for more information on RSS support in Trac.\n\n----\nSee also: TracGuide, TracIni, TracWiki, WikiFormatting, TracRss, TracNotification\n',NULL,NULL),('TracUnicode',1,1291894092000000,'trac','127.0.0.1','= Unicode Support in Trac =\n[[TracGuideToc]]\n\nTrac stores all text using UTF-8 encoding, including text in tickets and wiki pages. Internal processing of text uses true Unicode representations.\n\nAs such, it supports most (all?) commonly used character encodings.\n\nIf your encoding is not UTF-8, you can use [wiki:TracModPython mod_python] to handle it.  For example, if your local encoding is gbk, you can set \n   default_charset = gbk\nin trac.ini.\n\nYou also must make sure that your [trac:DatabaseBackend database backend] stores its data in UTF-8; otherwise strange things will happen.\n\nTo convert your database to UTF-8, the easiest way is to dump the database, convert the dump into UTF-8 and then import the converted dump back into the database.[[BR]]\nYou can use [http://www.gnu.org/software/libiconv/documentation/libiconv/iconv.1.html iconv] to convert the dump.\n\n\n== Examples ==\n\n=== Arabic ===\nتراك يقوم بحفظ كل الكلمات باستخدام صيغة UTF-8، بما في ذلك الكلمات المستخدمة في صفحات  التيكت والويكي.\n\n=== Bulgarian ===\nБългарският език работи ли?\n\n=== Česky ===\nČeština v kódování UTF-8, žádný problém.\n\n=== Chinese ===\nTraditional: 繁體中文, 漢字測試; Simplified: 简体中文，汉字测试\n\n=== Croatian ===\nAko podržava srpski i slovenski mora podržavati i Hrvatski - čćžšđ ČĆŽŠĐ \n\n=== English ===\nYes indeed, Trac supports English. Fully.\n\n=== Français ===\nIl est possible d\'écrire en Français : à, ç, û, ...\n\n=== German ===\nTrac-Wiki muß auch deutsche Umlaute richtig anzeigen: ö, ä, ü, Ä, Ö, Ü; und das scharfe ß\n\n=== Greek ===\nΤα Ελληνικά υποστηρίζονται επαρκώς επίσης.\n\n=== Hebrew ===\nאני יכול לאכול זכוכית וזה לא מזיק לי\n\n=== Hindi ===\nअब हिन्दी में।\n\n=== Hungarian ===\nÁrvíztűrő tükörfúrógép\n\n=== Icelandic ===\nÆvar sagði við ömmu sína: Sjáðu hvað ég er stór!\n\n=== Japanese ===\n漢字 ひらがな カタカナ ﾊﾝｶｸｶﾅ 日本語試験\n\n=== Korean ===\n이번에는 한글로 써보겠습니다. 잘 보이나요? 한글\n\n=== Latvian ===\n\nLatviešu valoda arī strādā!\n\n=== Lithuanian ===\nSudalyvaukime ir mes. Ar veikia lietuviškos raidės? ąčęėįšųūž ĄČĘĖĮŠŲŪŽ Žinoma, kad veikia :)\nKas tie mes?\n\n=== Persian (Farsi) ===\nاین یک متن فارسی است ولی امکان نوشتن مستقیم فارسی نیست چون حالت متن از راست به چپ و جود ندارد برای فارسی نوشتن باید از HTML استفاده کنید.\n{{{\n#!html\n<div dir=\"rtl\">\n}}}\nاین نمونه یک متن از راست به چپ فارسی است که در HTML نوشته شده تا اعداد 12345 و حروف لاتین ABCDEF در محل خودشان نمایش داده شوند.\n{{{\n#!html\n</div>\n}}}\n\n=== Polish ===\nPchnąć w tę łódź jeża lub osiem skrzyń fig; Nocna gżegżółka zawsze dzienną przekuka.\n\n=== Portuguese ===\nÉ possível guardar caracteres especias da língua portuguesa, incluindo o símbolo da moeda européia \'€\', trema \'ü\', crase \'à\', agudos \'áéíóú\', circunflexos \'âêô\', til \'ãõ\', cedilha \'ç\', ordinais \'ªº\', grau \'°¹²³\'.\n\n=== Russian ===\nПроверка русского языка: кажется работает... И буква \"ё\" есть...\n\n=== Serbian ===\nPodržan, uprkos činjenici da se za njegovo pisanje koriste чак два алфабета.\n\n=== Slovenian ===\nTa suhi škafec pušča vodo že od nekdaj!\n\n=== Spanish ===\nEsto es un pequeño texto en Español, donde el veloz murciélago hindú comía cardlllo y kiwi\n\n=== Swedish ===\nRäven raskar över isen med luva på.\n\n=== Thai ===\nTrac แสดงภาษาไทยได้อย่างถูกต้อง!\n\n=== Ukrainian ===\nПеревірка української мови...\n\n=== Urdu ===\nٹریک اردو بھی سپورٹ کرتا ہے۔\n\n=== Vietnamese ===\nViết tiếng Việt cũng được.\n',NULL,NULL),('TracUnicode',2,1397068026264431,'trac','127.0.0.1','= Unicode Support in Trac =\n[[TracGuideToc]]\n\nTrac stores all text using UTF-8 encoding, including text in tickets and wiki pages. Internal processing of text uses true Unicode representations.\n\nAs such, it supports most (all?) commonly used character encodings.\n\nIf the default encoding in your source code repository is not UTF-8, you can specify it in the [TracIni#trac-section trac.ini], for example:\n{{{\ndefault_charset = gbk\n}}}\n\nYou also must make sure that your [trac:DatabaseBackend database backend] stores its data in UTF-8; otherwise strange things will happen.\n\nTo convert your database to UTF-8, the easiest way is to dump the database, convert the dump into UTF-8 and then import the converted dump back into the database.[[BR]]\nYou can use [http://www.gnu.org/software/libiconv/documentation/libiconv/iconv.1.html iconv] to convert the dump.\n\n\n== Examples ==\n\n=== Arabic ===\nتراك يقوم بحفظ كل الكلمات باستخدام صيغة UTF-8، بما في ذلك الكلمات المستخدمة في صفحات  التيكت والويكي.\n\n=== Bulgarian ===\nБългарският език работи ли?\n\n=== Česky ===\nČeština v kódování UTF-8, žádný problém.\n\n=== Chinese ===\nTraditional: 繁體中文, 漢字測試; Simplified: 简体中文，汉字测试\n\n=== Croatian ===\nAko podržava srpski i slovenski mora podržavati i Hrvatski - čćžšđ ČĆŽŠĐ \n\n=== English ===\nYes indeed, Trac supports English. Fully.\n\n=== Français ===\nIl est possible d\'écrire en Français : à, ç, û, ...\n\n=== German ===\nTrac-Wiki muß auch deutsche Umlaute richtig anzeigen: ö, ä, ü, Ä, Ö, Ü; und das scharfe ß\n\n=== Greek ===\nΤα Ελληνικά υποστηρίζονται επαρκώς επίσης.\n\n=== Hebrew ===\nאני יכול לאכול זכוכית וזה לא מזיק לי\n\n=== Hindi ===\nअब हिन्दी में।\n\n=== Hungarian ===\nÁrvíztűrő tükörfúrógép\n\n=== Icelandic ===\nÆvar sagði við ömmu sína: Sjáðu hvað ég er stór!\n\n=== Japanese ===\n漢字 ひらがな カタカナ ﾊﾝｶｸｶﾅ 日本語試験\n\n=== Korean ===\n이번에는 한글로 써보겠습니다. 잘 보이나요? 한글\n\n=== Latvian ===\n\nLatviešu valoda arī strādā!\n\n=== Lithuanian ===\nSudalyvaukime ir mes. Ar veikia lietuviškos raidės? ąčęėįšųūž ĄČĘĖĮŠŲŪŽ Žinoma, kad veikia :)\nKas tie mes?\n\n=== Persian (Farsi) ===\nاین یک متن فارسی است ولی امکان نوشتن مستقیم فارسی نیست چون حالت متن از راست به چپ و جود ندارد برای فارسی نوشتن باید از HTML استفاده کنید.\n{{{\n#!html\n<div dir=\"rtl\">\n}}}\nاین نمونه یک متن از راست به چپ فارسی است که در HTML نوشته شده تا اعداد 12345 و حروف لاتین ABCDEF در محل خودشان نمایش داده شوند.\n{{{\n#!html\n</div>\n}}}\n\n=== Polish ===\nPchnąć w tę łódź jeża lub osiem skrzyń fig; Nocna gżegżółka zawsze dzienną przekuka.\n\n=== Portuguese ===\nÉ possível guardar caracteres especias da língua portuguesa, incluindo o símbolo da moeda européia \'€\', trema \'ü\', crase \'à\', agudos \'áéíóú\', circunflexos \'âêô\', til \'ãõ\', cedilha \'ç\', ordinais \'ªº\', grau \'°¹²³\'.\n\n=== Russian ===\nПроверка русского языка: кажется работает... И буква \"ё\" есть...\n\n=== Serbian ===\nPodržan, uprkos činjenici da se za njegovo pisanje koriste чак два алфабета.\n\n=== Slovenian ===\nTa suhi škafec pušča vodo že od nekdaj!\n\n=== Spanish ===\nEsto es un pequeño texto en Español, donde el veloz murciélago hindú comía cardlllo y kiwi\n\n=== Swedish ===\nRäven raskar över isen med luva på.\n\n=== Thai ===\nTrac แสดงภาษาไทยได้อย่างถูกต้อง!\n\n=== Ukrainian ===\nПеревірка української мови...\n\n=== Urdu ===\nٹریک اردو بھی سپورٹ کرتا ہے۔\n\n=== Vietnamese ===\nViết tiếng Việt cũng được.\n',NULL,NULL),('TracUpgrade',1,1291894092000000,'trac','127.0.0.1','= Upgrade Instructions =\n[[TracGuideToc]]\n\n== Instructions ==\n\nTypically, there are five steps involved in upgrading to a newer version of Trac:\n\n=== 1. Update the Trac Code === #UpdatetheTracCode\n\nGet the new version as described in TracInstall, or your operating system specific procedure.\n\nIf you installed a recent 0.11 version of Trac via {{{easy_install}}}, it might be the easiest to use it also to upgrade you Trac installation.\n\n{{{\n# easy_install --upgrade Trac\n}}}\n\nIf you do a manual (not operating system specific) upgrade, you should also stop any running Trac server before the installation. Doing \"hot\" upgrades is not advised, especially not on Windows ([trac:ticket:7625 #7265]).\n\nYou may also want to remove the pre-existing Trac code by deleting the `trac` directory from the Python `lib/site-packages` directory, or remove Trac .eggs from former versions.\nThe location of the site-packages directory depends on the operating system, and the location in which Python was installed. However, the following locations are common:\n * on Linux: /usr/lib/python2.X/site-packages\n * on Windows: C:\\Python2.X\\lib\\site-packages\n * on MacOSX: /Library/Python/2.X/site-packages\n\nYou may also want to remove the Trac `cgi-bin`, `htdocs`, `templates` and `wiki-default` directories that are commonly found in a directory called `share/trac` (the exact location depends on your platform).\n\nThis cleanup is not mandatory, but it makes it easier to troubleshoot issues later on, as you won\'t waste your time looking at code or templates from a previous release that are not being used anymore... As usual, make a backup before actually deleting things.\n\nIf you had the webadmin plugin installed, you can now uninstall it as it is now part of the Trac code base.\n\n=== 2. Upgrade the Trac Environment === #UpgradetheTracEnvironment\n\nEnvironment upgrades are not necessary for minor version releases unless otherwise noted. \n\nAfter restarting, Trac should show the instances which need a manual upgrade via the automated upgrade scripts to ease the pain. These scripts are run via [TracAdmin trac-admin]:\n{{{\ntrac-admin /path/to/projenv upgrade\n}}}\n\nThis command will do nothing if the environment is already up-to-date.\n\nNote that a backup of your database will be performed automatically prior to the upgrade. \nThis feature is relatively new for the PostgreSQL or MySQL database backends, so if it fails, you will have to backup the database manually. Then, to perform the actual upgrade, run:\n{{{\ntrac-admin /path/to/projenv upgrade --no-backup\n}}}\n\nIf you are using custom CSS styles or modified templates in the templates directory of the TracEnvironment, you will need to convert them to the Genshi way of doing things. To continue to use your style sheet, follow the instructions at TracInterfaceCustomization#SiteAppearance.\n\n=== 3. Update the Trac Documentation === #UpdatetheTracDocumentation\n\nEvery [TracEnvironment Trac environment] includes a copy of the Trac documentation for the installed version. As you probably want to keep the included documentation in sync with the installed version of Trac, [TracAdmin trac-admin] provides a command to upgrade the documentation:\n{{{\ntrac-admin /path/to/projenv wiki upgrade\n}}}\n\nNote that this procedure will of course leave your `WikiStart` page intact.\n\n=== 4. Resynchronize the Trac Environment Against the Source Code Repository ===\n\nEach [TracEnvironment Trac environment] must be resynchronized against the source code repository in order to avoid errors such as \"[http://trac.edgewall.org/ticket/6120 No changeset ??? in the repository]\" while browsing the source through the Trac interface:\n\n{{{\ntrac-admin /path/to/projenv resync\n}}}\n\n=== 5. Steps specific to a given Trac version  ===\n==== Upgrading to Trac 0.11 ====\n===== Site Templates =====\nThe templating engine has changed in 0.11, please look at TracInterfaceCustomization for more information.\n\n===== Trac Macros, Plugins =====\nThe Trac macros will need to be adapted, as the old-style wiki-macros are not supported anymore (due to the drop of [trac:ClearSilver ClearSilver] and the HDF); they need to be converted to the new-style macros, see WikiMacros. When they are converted to the new style, they need to be placed into the plugins directory instead and not wiki-macros, which is no longer scanned for macros or plugins.\n\n===== For FCGI/WSGI/CGI users =====\nFor those who run Trac under the CGI environment, run this command in order to obtain the trac.*gi file:\n{{{\ntrac-admin /path/to/env deploy /deploy/directory/path\n}}}\n\nThis will create a deploy directory with the following two subdirectories: `cgi-bin` and `htdocs`. Then update your Apache configuration file `httpd.conf` with this new `trac.cgi` location and `htdocs` location.\n\n=== 6. Restart the Web Server === #RestarttheWebServer\n\nIf you are not running [wiki:TracCgi CGI], reload the new Trac code by restarting your web server.\n\n== Known Issues ==\n\n=== parent dir ===\nIf you use a trac parent env configuration and one of the plugins in one child does not work, none of the children work.\n\n=== some core modules won\'t load === \nThis can happen in particular with Python 2.3 on Windows when upgrading without uninstalling first.\nSome modules were previously capitalized and were changed to lower case, e.g. trac/About.py became trac/about.py. You may find such messages in the Trac log:\n{{{\nERROR: Skipping \"trac.about = trac.about\": (can\'t import \"No module named about\")\n}}}\nRemove the `Lib/site-packages/trac` folder and reinstall.\n\n=== Wiki Upgrade ===\n`trac-admin` will not delete or remove default wiki pages that were present in a previous version but are no longer in the new version.\n\n\n== Changing Database Backend ==\n=== SQLite to PostgreSQL ===\n\nThe [http://trac-hacks.org/wiki/SqliteToPgScript sqlite2pg] script on [http://trac-hacks.org trac-hacks.org] has been written to assist in migrating a SQLite database to a PostgreSQL database\n\n== Older Versions ==\n\nFor upgrades from versions older than Trac 0.10, refer first to trac:wiki:0.10/TracUpgrade.\n\nNote that downgrading from Trac 0.11 to Trac 0.10.4 or 0.10.5 is easy, but has to be done manually, e.g.\n{{{\n$ sqlite3 db/trac.db \"update system set value=20 where name=\'database_version\'\"\n}}}\n(upgrade can be redone the normal way later on)\n\n-----\nSee also: TracGuide, TracInstall',NULL,NULL),('TracUpgrade',2,1397068026260777,'trac','127.0.0.1','= Upgrade Instructions =\n[[TracGuideToc]]\n[[PageOutline(2-4,,inline,unnumbered)]]\n\n== Instructions ==\n\nTypically, there are seven steps involved in upgrading to a newer version of Trac:\n\n=== 1. Bring your server off-line\n\nIt is not a good idea to update a running server: the server processes may have parts of the current packages cached in memory, and updating the code will likely trigger [#ZipImportError internal errors]. \n\n=== 2. Update the Trac Code === #UpdatetheTracCode\n\nGet the new version as described in TracInstall, or your operating system specific procedure.\n\nIf you already have a 0.11 version of Trac installed via `easy_install`, it might be easiest to also use `easy_install` to upgrade your Trac installation:\n\n{{{\n# easy_install --upgrade Trac==0.12\n}}}\n\nIf you do a manual (not operating system-specific) upgrade, you should also stop any running Trac servers before the installation. Doing \"hot\" upgrades is not advised, especially on Windows ([trac:#7265]).\n\nYou may also want to remove the pre-existing Trac code by deleting the `trac` directory from the Python `lib/site-packages` directory, or remove Trac `.egg` files from former versions.\nThe location of the site-packages directory depends on the operating system and the location in which Python was installed. However, the following locations are typical:\n * on Linux: `/usr/lib/python2.X/site-packages`\n * on Windows: `C:\\Python2.X\\lib\\site-packages`\n * on MacOSX: `/Library/Python/2.X/site-packages`\n\nYou may also want to remove the Trac `cgi-bin`, `htdocs`, `templates` and `wiki-default` directories that are commonly found in a directory called `share/trac`. (The exact location depends on your platform.)\n\nThis cleanup is not mandatory, but makes it easier to troubleshoot issues later on, as you won\'t waste your time looking at code or templates from a previous release that are not being used anymore... As usual, make a backup before actually deleting things.\n\n=== 3. Upgrade the Trac Environment === #UpgradetheTracEnvironment\n\nEnvironment upgrades are not necessary for minor version releases unless otherwise noted. \n\nAfter restarting, Trac should show the instances which need a manual upgrade via the automated upgrade scripts to ease the pain. These scripts are run via [TracAdmin trac-admin]:\n{{{\ntrac-admin /path/to/projenv upgrade\n}}}\n\nThis command will do nothing if the environment is already up-to-date.\n\nNote that a backup of your database will be performed automatically prior to the upgrade. \nThis feature is relatively new for the PostgreSQL or MySQL database backends, so if it fails, you will have to backup the database manually. Then, to perform the actual upgrade, run:\n{{{\ntrac-admin /path/to/projenv upgrade --no-backup\n}}}\n\n=== 4. Update the Trac Documentation === #UpdatetheTracDocumentation\n\nEvery [TracEnvironment Trac environment] includes a copy of the Trac documentation for the installed version. As you probably want to keep the included documentation in sync with the installed version of Trac, [TracAdmin trac-admin] provides a command to upgrade the documentation:\n{{{\ntrac-admin /path/to/projenv wiki upgrade\n}}}\n\nNote that this procedure will leave your `WikiStart` page intact.\n\n\n=== 5. Refresh static resources ===\n\nIf you have set up a web server to give out static resources directly (accessed using the `/chrome/` URL) then you will need to refresh them using the same command:\n{{{\ntrac-admin /path/to/env deploy /deploy/path\n}}}\nthis will extract static resources and CGI scripts (`trac.wsgi`, etc) from new Trac version and its plugins into `/deploy/path`.\n\nSome web browsers (IE, Opera) cache CSS and Javascript files aggressively, so you may need to instruct your users to manually erase the contents of their browser\'s cache, a forced refreshed (`<F5>`) should be enough.\n{{{#!comment\nRemove above note once #9936 is fixed.\n}}}\n\n=== 6. Steps specific to a given Trac version  ===\n==== Upgrading from Trac 0.12 to Trac 1.0 ==== #to1.0\n\nThe Trac components for Subversion support are no longer enabled by default. To enable the svn support, you need to make sure the `tracopt.versioncontrol.svn` components are enabled, for example by setting the following in the TracIni:\n{{{\n[components]\ntracopt.versioncontrol.svn.* = enabled\n}}}\nThe upgrade procedure should take care of this and change the TracIni appropriately, unless you already had the svn components explicitly disabled.\n\nAnother step in the automatic upgrade will change the way the attachments are stored. If you\'re a bit paranoid, you might want to take a backup of the `attachments` directory before upgrading (but if you are, you already did a full copy of the environment, no?). In case the `attachments` directory contains some files which are //not// attachments, the last step of the migration to the new layout will fail: the deletion of the now unused `attachments` directory can\'t be done if there are still files and folders in it. You may ignore this error, but better go have a look to these files, move them elsewhere and remove the `attachments` directory manually to cleanup the environment. The attachments themselves are now all located in your environment below the `files/attachments` directory.\n\n\n==== Upgrading from Trac 0.11 to Trac 0.12 ====\n\n===== Python 2.3 no longer supported =====\nThe minimum supported version of python is now 2.4\n\n===== SQLite v3.x required =====\nSQLite v2.x is no longer supported. If you still use a Trac database of this format, you\'ll need to convert it to SQLite v3.x first. See [trac:PySqlite#UpgradingSQLitefrom2.xto3.x] for details.\n\n===== PySqlite 2 required =====\nPySqlite 1.1.x is no longer supported. Please install 2.5.5 or later if possible (see [#Tracdatabaseupgrade Trac database upgrade] below).\n\n===== Multiple Repository Support =====\nThe latest version includes support for multiple repositories. If you plan to add more repositories to your Trac instance, please refer to TracRepositoryAdmin#Migration.\n\nThis may be of interest to users with only one repository, since there\'s now a way to avoid the potentially costly resync check at every request.\n\n===== Resynchronize the Trac Environment Against the Source Code Repository =====\n\nEach [TracEnvironment Trac environment] must be resynchronized against the source code repository in order to avoid errors such as \"[http://trac.edgewall.org/ticket/6120 No changeset ??? in the repository]\" while browsing the source through the Trac interface:\n\n{{{\ntrac-admin /path/to/projenv repository resync \'*\'\n}}}\n\n===== Improved repository synchronization =====\nIn addition to supporting multiple repositories, there is now a more efficient method for synchronizing Trac and your repositories.\n\nWhile you can keep the same synchronization as in 0.11 adding the post-commit hook as outlined in TracRepositoryAdmin#Synchronization and TracRepositoryAdmin#ExplicitSync will allow more efficient synchronization and is more or less required for multiple repositories.\n\nNote that if you were using the `trac-post-commit-hook`, \'\'you\'re strongly advised to upgrade it\'\' to the new hook documented in the above references and [TracWorkflow#Howtocombinethetracopt.ticket.commit_updaterwiththetestingworkflow here], as the old hook will not work with anything else than the default repository and even for this case, it won\'t trigger the appropriate notifications.\n\n===== Authz permission checking =====\nThe authz permission checking has been migrated to a fine-grained permission policy. If you use authz permissions (aka `[trac] authz_file` and `authz_module_name`), you must add `AuthzSourcePolicy` in front of your permission policies in `[trac] permission_policies`. You must also remove `BROWSER_VIEW`, `CHANGESET_VIEW`, `FILE_VIEW` and `LOG_VIEW` from your global permissions (with `trac-admin $ENV permission remove` or the \"Permissions\" admin panel).\n\n===== Microsecond timestamps =====\nAll timestamps in database tables (except the `session` table) have been changed from \"seconds since epoch\" to \"microseconds since epoch\" values. This change should be transparent to most users, except for custom reports. If any of your reports use date/time columns in calculations (e.g. to pass them to `datetime()`), you must divide the values retrieved from the database by 1\'000\'000. Similarly, if a report provides a calculated value to be displayed as a date/time (i.e. with a column named \"time\", \"datetime\", \"changetime\", \"date\", \"created\" or \"modified\"), you must provide a microsecond timestamp, that is, multiply your previous calculation with 1\'000\'000.\n\n==== Upgrading from Trac 0.10 to Trac 0.11 ====\n===== Site Templates and Styles =====\nThe templating engine has changed in 0.11 to Genshi, please look at TracInterfaceCustomization for more information.\n\nIf you are using custom CSS styles or modified templates in the `templates` directory of the TracEnvironment, you will need to convert them to the Genshi way of doing things. To continue to use your style sheet, follow the instructions at TracInterfaceCustomization#SiteAppearance.\n\n===== Trac Macros, Plugins =====\nThe Trac macros will need to be adapted, as the old-style wiki-macros are not supported anymore (due to the drop of [trac:ClearSilver] and the HDF); they need to be converted to the new-style macros, see WikiMacros. When they are converted to the new style, they need to be placed into the plugins directory instead and not wiki-macros, which is no longer scanned for macros or plugins.\n\n===== For FCGI/WSGI/CGI users =====\nFor those who run Trac under the CGI environment, run this command in order to obtain the trac.*gi file:\n{{{\ntrac-admin /path/to/env deploy /deploy/directory/path\n}}}\n\nThis will create a deploy directory with the following two subdirectories: `cgi-bin` and `htdocs`. Then update your Apache configuration file `httpd.conf` with this new `trac.cgi` location and `htdocs` location.\n\n===== Web Admin plugin integrated =====\nIf you had the webadmin plugin installed, you can uninstall it as it is part of the Trac code base since 0.11.\n\n=== 7. Restart the Web Server === #RestarttheWebServer\n\nIf you are not running [wiki:TracCgi CGI], reload the new Trac code by restarting your web server.\n\n== Known Issues ==\n\nThings you should pay attention to, while upgrading.\n\n=== Customized Templates\n\nTrac supports customization of its Genshi templates by placing copies of the templates in the `<env>/templates` folder of your [TracEnvironment environment] or in a common location specified in the [[TracIni#GlobalConfiguration| [inherit] templates_dir]] configuration setting. If you choose to do so, be wary that you will need to repeat your changes manually on a copy of the new templates when you upgrade to a new release of Trac (even a minor one), as the templates will likely evolve. So keep a diff around ;-)\n\nThe preferred way to perform TracInterfaceCustomization is to write a custom plugin doing an appropriate `ITemplateStreamFilter` transformation, as this is more robust in case of changes: we usually won\'t modify element `id`s or change CSS `class`es, and if we have to do so, this will be documented in the TracDev/ApiChanges pages.\n\n=== !ZipImportError ===\n\nDue to internal caching of zipped packages,  whenever the content of the packages change on disk, the in-memory zip index will no longer match and you\'ll get irrecoverable !ZipImportError errors. Better anticipate and bring your server down for maintenance before upgrading.\nSee [trac:#7014] for details.\n\n=== Wiki Upgrade ===\n`trac-admin` will not delete or remove default wiki pages that were present in a previous version but are no longer in the new version.\n\n=== Trac database upgrade ===\n\nA known issue in some versions of PySqlite (2.5.2-2.5.4) prevents the trac-admin upgrade script from successfully upgrading the database format. It is advised to use either a newer or older version of the sqlite python bindings to avoid this error. For more details see ticket [trac:#9434].\n\n=== parent dir ===\nIf you use a trac parent env configuration and one of the plugins in one child does not work, none of the children work.\n\n== Related topics\n\n=== Upgrading Python ===\n\nUpgrading Python to a newer version will require reinstallation of Python packages: Trac of course; also [http://pypi.python.org/pypi/setuptools easy_install], if you\'ve been using that.  Assuming you\'re using Subversion, you\'ll also need to upgrade the Python bindings for svn.\n\n==== Windows and Python 2.6 ====\n\nIf you\'ve been using !CollabNet\'s Subversion package, you may need to uninstall that in favor of [http://alagazam.net/ Alagazam], which has the Python bindings readily available (see TracSubversion).  The good news is, that works with no tweaking.\n\n=== Changing Database Backend ===\n==== SQLite to PostgreSQL ====\n\nThe [http://trac-hacks.org/wiki/SqliteToPgScript sqlite2pg] script on [http://trac-hacks.org trac-hacks.org] has been written to assist in migrating a SQLite database to a PostgreSQL database\n\n=== Upgrading from older versions of Trac === #OlderVersions\n\nFor upgrades from versions older than Trac 0.10, refer first to [trac:wiki:0.10/TracUpgrade#SpecificVersions].\n\n-----\nSee also: TracGuide, TracInstall\n',NULL,NULL),('TracWiki',1,1291894092000000,'trac','127.0.0.1','= The Trac Wiki Engine =\n[[TracGuideToc]]\n\nTrac has a built-in wiki engine, used for text and documentation throughout the system. WikiFormatting is used in [wiki:TitleIndex wiki pages], [wiki:TracTickets tickets] and [wiki:TracChangeset check-in log messages].  This allows for formatted text and hyperlinks in and between all Trac modules.\n\nEditing wiki text is easy, using any web browser and a simple [WikiFormatting formatting system], rather than more complex markup languages like HTML.  The reasoning behind its design is that HTML, with its large collection of nestable tags, is too complicated to allow fast-paced editing, and distracts from the actual content of the pages. Note though that Trac also supports [wiki:WikiHtml HTML], [wiki:WikiRestructuredText reStructuredText] and [http://www.textism.com/tools/textile/ Textile] as alternative markup formats.\n\nThe main goal of the wiki is to make editing text easier and \'\'encourage\'\' people to contribute and annotate text content for a project.\n\nThe wiki itself does not enforce any structure, but rather resembles a stack of empty sheets of paper, where you can organize information and documentation as you see fit, and later reorganize if necessary.\n\nFor more help on editing wiki text, see these pages:\n * WikiFormatting\n * WikiPageNames\n * WikiNewPage\n * TracLinks\n * WikiMacros\n * WikiProcessors\n * PageTemplates\n\nIf you want to practice editing, please use the SandBox.\n\nSome more information about wiki on the web:\n * http://wikipedia.org/wiki/Wiki\n * http://c2.com/cgi/wiki?WikiHistory\n * http://www.usemod.com/cgi-bin/mb.pl?WhyWikiWorks\n\n----\nSee also: TracGuide',NULL,NULL),('TracWiki',2,1397068026229850,'trac','127.0.0.1','\n= The Trac Wiki System =\n[[TracGuideToc]]\n\nTrac has a built-in wiki system which you can use for organizing knowledge and information in a very flexible way by [WikiNewPage creating pages] containing an intuitive and easy to learn textual markup. This text markup is also used in all other parts of the system, not only in [wiki:TitleIndex wiki pages], but also in [wiki:TracTickets ticket] description and comments, [wiki:TracChangeset check-in log messages], [wiki:TracRoadmap milestone] descriptions and [wiki:TracReports report] descriptions, even in third-party extensions.\nIt allows for formatted text and hyperlinks in and between all Trac modules.\n\nEditing wiki text is easy, using any web browser and a simple [WikiFormatting formatting system], rather than more complex markup languages like HTML.  The reasoning behind its design is that HTML, with its large collection of nestable tags, is too complicated to allow fast-paced editing, and distracts from the actual content of the pages. Note though that Trac also supports [WikiHtml HTML], [WikiRestructuredText reStructuredText] and [http://www.textism.com/tools/textile/ Textile] as alternative markup formats, which can eventually be used in parts of a page (so called wiki “blocks”).\n\nThe main goal of the wiki is to make editing text easier and \'\'encourage\'\' people to contribute and annotate text content for a project. Trac also provides a simple toolbar to make formatting text even easier, and supports the [http://universaleditbutton.org/Universal_Edit_Button universal edit button] of your browser.\n\nThe wiki itself does not enforce any structure, but rather resembles a stack of empty sheets of paper, where you can organize information and documentation as you see fit, and later reorganize if necessary. \nAs contributing to a wiki is essentially building hypertext, \ngeneral advice regarding HTML authoring apply here as well.\nFor example, the \'\'[http://www.w3.org/Provider/Style Style Guide for online hypertext]\'\' explains how to think about the\n[http://www.w3.org/Provider/Style/Structure.html overall structure of a work] \nand how to organize information [http://www.w3.org/Provider/Style/WithinDocument.html within each document]. One of the most important tip is “make your HTML page such that you can read it even if you don\'t follow any links.”\n\nLearn more about:\n * WikiFormatting rules, including advanced topics like WikiMacros and WikiProcessors\n * How to use WikiPageNames and other forms of TracLinks which are used to refer in a precise way to any resource within Trac\n\nIf you want to practice editing, please use the SandBox. Note that not all Trac wikis are editable by anyone, this depends on the local policy; check with your Trac administrators.\n\nBefore saving your changes, you can \'\'Preview\'\' the page or \'\'Review the Changes\'\' you\'ve made.\nYou can get an automatic preview of the formatting as you type when you activate the \'\'Edit Side-by-side\'\' mode (you have to Preview the page for the setting to take effect). \'\' There is a [wiki:/TracIni#trac-section configurable delay] between when you make your edit and when the automatic preview will update.\'\'\n\nSome more information about wikis on the web:\n * A definition of [http://wikipedia.org/wiki/Wiki Wiki], in a famous wiki encyclopedia\n * The [http://c2.com/cgi/wiki?WikiHistory History] of the original wiki\n * A wiki page explaining [http://www.usemod.com/cgi-bin/mb.pl?WhyWikiWorks why wiki works]\n\n----\nSee also: TracGuide\n',NULL,NULL),('TracWorkflow',1,1291894092000000,'trac','127.0.0.1','= The Trac Ticket Workflow System =\n[[TracGuideToc]]\n\nThe Trac issue database provides a configurable workflow.\n\n== The Default Ticket Workflow ==\n=== Environments upgraded from 0.10 ===\nWhen you run `trac-admin <env> upgrade`, your `trac.ini` will be modified to include a `[ticket-workflow]` section.\nThe workflow configured in this case is the original workflow, so that ticket actions will behave like they did in 0.10.\n\nGraphically, that looks like this:\n\n[[Image(htdocs:../common/guide/original-workflow.png)]]\n\nThere are some significant \"warts\" in this; such as accepting a ticket sets it to \'assigned\' state, and assigning a ticket sets it to \'new\' state.  Perfectly obvious, right?\nSo you will probably want to migrate to \"basic\" workflow; [trac:source:trunk/contrib/workflow/migrate_original_to_basic.py contrib/workflow/migrate_original_to_basic.py] may be helpful.\n\n=== Environments created with 0.11 ===\nWhen a new environment is created, a default workflow is configured in your trac.ini.  This workflow is the basic workflow (described in `basic-workflow.ini`), which is somewhat different from the workflow of the 0.10 releases.\n\nGraphically, it looks like this:\n\n[[Image(htdocs:../common/guide/basic-workflow.png)]]\n\n== Additional Ticket Workflows ==\n\nThere are several example workflows provided in the Trac source tree; look in [trac:source:trunk/contrib/workflow contrib/workflow] for `.ini` config sections.  One of those may be a good match for what you want. They can be pasted into the `[ticket-workflow]` section of your `trac.ini` file. However if you have existing tickets then there may be issues if those tickets have states that are not in the new workflow. \n\nHere are some [http://trac.edgewall.org/wiki/WorkFlow/Examples diagrams] of the above examples.\n\n== Basic Ticket Workflow Customization ==\n\nNote: Ticket \"statuses\" or \"states\" are not separately defined. The states a ticket can be in are automatically generated by the transitions defined in a workflow. Therefore, creating a new ticket state simply requires defining a state transition in the workflow that starts or ends with that state.\n\nCreate a `[ticket-workflow]` section in `trac.ini`.\nWithin this section, each entry is an action that may be taken on a ticket. \nFor example, consider the `accept` action from `simple-workflow.ini`:\n{{{\naccept = new,accepted -> accepted\naccept.permissions = TICKET_MODIFY\naccept.operations = set_owner_to_self\n}}}\nThe first line in this example defines the `accept` action, along with the states the action is valid in (`new` and `accepted`), and the new state of the ticket when the action is taken (`accepted`).\nThe `accept.permissions` line specifies what permissions the user must have to use this action.\nThe `accept.operations` line specifies changes that will be made to the ticket in addition to the status change when this action is taken.  In this case, when a user clicks on `accept`, the ticket owner field is updated to the logged in user.  Multiple operations may be specified in a comma separated list.\n\nThe available operations are:\n - del_owner -- Clear the owner field.\n - set_owner -- Sets the owner to the selected or entered owner.\n   - \'\'actionname\'\'`.set_owner` may optionally be set to a comma delimited list or a single value.\n - set_owner_to_self -- Sets the owner to the logged in user.\n - del_resolution -- Clears the resolution field\n - set_resolution -- Sets the resolution to the selected value.\n   - \'\'actionname\'\'`.set_resolution` may optionally be set to a comma delimited list or a single value.\n{{{\nExample:\n\nresolve_new = new -> closed\nresolve_new.name = resolve\nresolve_new.operations = set_resolution\nresolve_new.permissions = TICKET_MODIFY\nresolve_new.set_resolution = invalid,wontfix\n}}}\n - leave_status -- Displays \"leave as <current status>\" and makes no change to the ticket.\n\'\'\'Note:\'\'\' Specifying conflicting operations (such as `set_owner` and `del_owner`) has unspecified results.\n\n{{{\nresolve_accepted = accepted -> closed\nresolve_accepted.name = resolve\nresolve_accepted.permissions = TICKET_MODIFY\nresolve_accepted.operations = set_resolution\n}}}\n\nIn this example, we see the `.name` attribute used.  The action here is `resolve_accepted`, but it will be presented to the user as `resolve`.\n\nFor actions that should be available in all states, `*` may be used in place of the state.  The obvious example is the `leave` action:\n{{{\nleave = * -> *\nleave.operations = leave_status\nleave.default = 1\n}}}\nThis also shows the use of the `.default` attribute.  This value is expected to be an integer, and the order in which the actions are displayed is determined by this value.  The action with the highest `.default` value is listed first, and is selected by default.  The rest of the actions are listed in order of decreasing `.default` values.\nIf not specified for an action, `.default` is 0.  The value may be negative.\n\nThere are a couple of hard-coded constraints to the workflow.  In particular, tickets are created with status `new`, and tickets are expected to have a `closed` state.  Further, the default reports/queries treat any state other than `closed` as an open state.\n\nWhile creating or modifying a ticket workfow, `contrib/workflow/workflow_parser.py` may be useful.  It can create `.dot` files that [http://www.graphviz.org GraphViz] understands to provide a visual description of the workflow.\n\nThis can be done as follows (your install path may be different).\n{{{\ncd /var/local/trac_devel/contrib/workflow/\nsudo ./showworkflow /srv/trac/PlannerSuite/conf/trac.ini\n}}}\nAnd then open up the resulting `trac.pdf` file created by the script (it will be in the same directory as the `trac.ini` file).\n\nAn online copy of the workflow parser is available at http://foss.wush.net/cgi-bin/visual-workflow.pl\n\nAfter you have changed a workflow, you need to restart apache for the changes to take effect. This is important, because the changes will still show up when you run your script, but all the old workflow steps will still be there until the server is restarted.\n\n== Example: Adding optional Testing with Workflow ==\n\nBy adding the following to your [ticket-workflow] section of trac.ini you get optional testing.  When the ticket is in new, accepted or needs_work status you can choose to submit it for testing.  When it\'s in the testing status the user gets the option to reject it and send it back to needs_work, or pass the testing and send it along to closed.  If they accept it then it gets automatically marked as closed and the resolution is set to fixed.  Since all the old work flow remains, a ticket can skip this entire section.\n\n{{{\ntesting = new,accepted,needs_work,assigned,reopened -> testing\ntesting.name = Submit to reporter for testing\ntesting.permissions = TICKET_MODIFY\n\nreject = testing -> needs_work\nreject.name = Failed testing, return to developer\n\npass = testing -> closed\npass.name = Passes Testing\npass.operations = set_resolution\npass.set_resolution = fixed\n}}}\n\n== Example: Add simple optional generic review state ==\n\nSometimes Trac is used in situations where \"testing\" can mean different things to different people so you may want to create an optional workflow state that is between the default workflow\'s `assigned` and `closed` states, but does not impose implementation-specific details. The only new state you need to add for this is a `reviewing` state. A ticket may then be \"submitted for review\" from any state that it can be reassigned. If a review passes, you can re-use the `resolve` action to close the ticket, and if it fails you can re-use the `reassign` action to push it back into the normal workflow.\n\nThe new `reviewing` state along with its associated `review` action looks like this:\n\n{{{\nreview = new,assigned,reopened -> reviewing\nreview.operations = set_owner\nreview.permissions = TICKET_MODIFY\n}}}\n\nThen, to integrate this with the default Trac 0.11 workflow, you also need to add the `reviewing` state to the `accept` and `resolve` actions, like so:\n\n{{{\naccept = new,reviewing -> assigned\n[…]\nresolve = new,assigned,reopened,reviewing -> closed\n}}}\n\nOptionally, you can also add a new action that allows you to change the ticket\'s owner without moving the ticket out of the `reviewing` state. This enables you to reassign review work without pushing the ticket back to the `new` status.\n\n{{{\nreassign_reviewing = reviewing -> *\nreassign_reviewing.name = reassign review\nreassign_reviewing.operations = set_owner\nreassign_reviewing.permissions = TICKET_MODIFY\n}}}\n\nThe full `[ticket-workflow]` configuration will thus look like this:\n\n{{{\n[ticket-workflow]\naccept = new,reviewing -> assigned\naccept.operations = set_owner_to_self\naccept.permissions = TICKET_MODIFY\nleave = * -> *\nleave.default = 1\nleave.operations = leave_status\nreassign = new,assigned,reopened -> new\nreassign.operations = set_owner\nreassign.permissions = TICKET_MODIFY\nreopen = closed -> reopened\nreopen.operations = del_resolution\nreopen.permissions = TICKET_CREATE\nresolve = new,assigned,reopened,reviewing -> closed\nresolve.operations = set_resolution\nresolve.permissions = TICKET_MODIFY\nreview = new,assigned,reopened -> reviewing\nreview.operations = set_owner\nreview.permissions = TICKET_MODIFY\nreassign_reviewing = reviewing -> *\nreassign_reviewing.operations = set_owner\nreassign_reviewing.name = reassign review\nreassign_reviewing.permissions = TICKET_MODIFY\n}}}\n\n== Example: Limit the resolution options for a new ticket ==\n\nThe above resolve_new operation allows you to set the possible resolutions for a new ticket.  By modifying the existing resolve action and removing the new status from before the `->` we then get two resolve actions.  One with limited resolutions for new tickets, and then the regular one once a ticket is accepted.\n\n{{{\nresolve_new = new -> closed\nresolve_new.name = resolve\nresolve_new.operations = set_resolution\nresolve_new.permissions = TICKET_MODIFY\nresolve_new.set_resolution = invalid,wontfix,duplicate\n\nresolve = assigned,accepted,reopened -> closed\nresolve.operations = set_resolution\nresolve.permissions = TICKET_MODIFY\n}}}\n\n== Advanced Ticket Workflow Customization ==\n\nIf the customization above is not extensive enough for your needs, you can extend the workflow using plugins.  These plugins can provide additional operations for the workflow (like code_review), or implement side-effects for an action (such as triggering a build) that may not be merely simple state changes.  Look at [trac:source:trunk/sample-plugins/workflow sample-plugins/workflow] for a few simple examples to get started.\n\nBut if even that is not enough, you can disable the !ConfigurableTicketWorkflow component and create a plugin that completely replaces it.\n\n== Adding Workflow States to Milestone Progress Bars ==\n\nIf you add additional states to your workflow, you may want to customize your milestone progress bars as well.  See [TracIni#milestone-groups-section TracIni].\n\n== some ideas for next steps ==\n\nNew enhancement ideas for the workflow system should be filed as enhancement tickets against the `ticket system` component.  If desired, add a single-line link to that ticket here.  Also look at the [th:wiki:AdvancedTicketWorkflowPlugin] as it provides experimental operations.\n\nIf you have a response to the comments below, create an enhancement ticket, and replace the description below with a link to the ticket.\n\n * the \"operation\" could be on the nodes, possible operations are:\n   * \'\'\'preops\'\'\': automatic, before entering the state/activity\n   * \'\'\'postops\'\'\': automatic, when leaving the state/activity\n   * \'\'\'actions\'\'\': can be chosen by the owner in the list at the bottom, and/or drop-down/pop-up together with the default actions of leaving the node on one of the arrows.\n\'\'This appears to add complexity without adding functionality; please provide a detailed example where these additions allow something currently impossible to implement.\'\'\n\n * operations could be anything: sum up the time used for the activity, or just write some statistical fields like \n\'\'A workflow plugin can add an arbitrary workflow operation, so this is already possible.\'\'\n\n * set_actor should be an operation allowing to set the owner, e.g. as a \"preop\":\n   * either to a role, a person\n   * entered fix at define time, or at run time, e.g. out of a field, or select.\n\'\'This is either duplicating the existing `set_owner` operation, or needs to be clarified.\'\'\n\n * Actions should be selectable based on the ticket type (different Workflows for different tickets)\n\'\'Look into the [th:wiki:AdvancedTicketWorkflowPlugin]\'s `triage` operation.\'\'\n',NULL,NULL),('TracWorkflow',2,1397068026255678,'trac','127.0.0.1','= The Trac Ticket Workflow System =\n[[TracGuideToc]]\n\nThe Trac issue database provides a configurable workflow.\n\n== The Default Ticket Workflow ==\n=== Environments upgraded from 0.10 ===\nWhen you run `trac-admin <env> upgrade`, your `trac.ini` will be modified to include a `[ticket-workflow]` section.\nThe workflow configured in this case is the original workflow, so that ticket actions will behave like they did in 0.10.\n\nGraphically, that looks like this:\n\n{{{#!Workflow width=500 height=240\nleave = * -> *\nleave.operations = leave_status\nleave.default = 1\naccept = new -> assigned\naccept.permissions = TICKET_MODIFY\naccept.operations = set_owner_to_self\nresolve = new,assigned,reopened -> closed\nresolve.permissions = TICKET_MODIFY\nresolve.operations = set_resolution\nreassign = new,assigned,reopened -> new\nreassign.permissions = TICKET_MODIFY\nreassign.operations = set_owner\nreopen = closed -> reopened\nreopen.permissions = TICKET_CREATE\nreopen.operations = del_resolution\n}}}\n\nThere are some significant \"warts\" in this; such as accepting a ticket sets it to \'assigned\' state, and assigning a ticket sets it to \'new\' state.  Perfectly obvious, right?\nSo you will probably want to migrate to \"basic\" workflow; [trac:source:trunk/contrib/workflow/migrate_original_to_basic.py contrib/workflow/migrate_original_to_basic.py] may be helpful.\n\n=== Environments created with 0.11 ===\nWhen a new environment is created, a default workflow is configured in your trac.ini.  This workflow is the basic workflow (described in `basic-workflow.ini`), which is somewhat different from the workflow of the 0.10 releases.\n\nGraphically, it looks like this:\n\n{{{#!Workflow width=700 height=300\nleave = * -> *\nleave.operations = leave_status\nleave.default = 1\naccept = new,assigned,accepted,reopened -> accepted\naccept.permissions = TICKET_MODIFY\naccept.operations = set_owner_to_self\nresolve = new,assigned,accepted,reopened -> closed\nresolve.permissions = TICKET_MODIFY\nresolve.operations = set_resolution\nreassign = new,assigned,accepted,reopened -> assigned\nreassign.permissions = TICKET_MODIFY\nreassign.operations = set_owner\nreopen = closed -> reopened\nreopen.permissions = TICKET_CREATE\nreopen.operations = del_resolution\n}}}\n\n== Additional Ticket Workflows ==\n\nThere are several example workflows provided in the Trac source tree; look in [trac:source:trunk/contrib/workflow contrib/workflow] for `.ini` config sections.  One of those may be a good match for what you want. They can be pasted into the `[ticket-workflow]` section of your `trac.ini` file. However if you have existing tickets then there may be issues if those tickets have states that are not in the new workflow. \n\nHere are some [http://trac.edgewall.org/wiki/WorkFlow/Examples diagrams] of the above examples.\n\n== Basic Ticket Workflow Customization ==\n\nNote: Ticket \"statuses\" or \"states\" are not separately defined. The states a ticket can be in are automatically generated by the transitions defined in a workflow. Therefore, creating a new ticket state simply requires defining a state transition in the workflow that starts or ends with that state.\n\nCreate a `[ticket-workflow]` section in `trac.ini`.\nWithin this section, each entry is an action that may be taken on a ticket. \nFor example, consider the `accept` action from `simple-workflow.ini`:\n{{{\naccept = new,accepted -> accepted\naccept.permissions = TICKET_MODIFY\naccept.operations = set_owner_to_self\n}}}\nThe first line in this example defines the `accept` action, along with the states the action is valid in (`new` and `accepted`), and the new state of the ticket when the action is taken (`accepted`).\nThe `accept.permissions` line specifies what permissions the user must have to use this action.\nThe `accept.operations` line specifies changes that will be made to the ticket in addition to the status change when this action is taken.  In this case, when a user clicks on `accept`, the ticket owner field is updated to the logged in user.  Multiple operations may be specified in a comma separated list.\n\nThe available operations are:\n - del_owner -- Clear the owner field.\n - set_owner -- Sets the owner to the selected or entered owner.\n   - \'\'actionname\'\'`.set_owner` may optionally be set to a comma delimited list or a single value.\n - set_owner_to_self -- Sets the owner to the logged in user.\n - del_resolution -- Clears the resolution field\n - set_resolution -- Sets the resolution to the selected value.\n   - \'\'actionname\'\'`.set_resolution` may optionally be set to a comma delimited list or a single value. Example:\n     {{{\nresolve_new = new -> closed\nresolve_new.name = resolve\nresolve_new.operations = set_resolution\nresolve_new.permissions = TICKET_MODIFY\nresolve_new.set_resolution = invalid,wontfix\n     }}}\n - leave_status -- Displays \"leave as <current status>\" and makes no change to the ticket.\n\'\'\'Note:\'\'\' Specifying conflicting operations (such as `set_owner` and `del_owner`) has unspecified results.\n\n{{{\nresolve_accepted = accepted -> closed\nresolve_accepted.name = resolve\nresolve_accepted.permissions = TICKET_MODIFY\nresolve_accepted.operations = set_resolution\n}}}\n\nIn this example, we see the `.name` attribute used.  The action here is `resolve_accepted`, but it will be presented to the user as `resolve`.\n\nFor actions that should be available in all states, `*` may be used in place of the state.  The obvious example is the `leave` action:\n{{{\nleave = * -> *\nleave.operations = leave_status\nleave.default = 1\n}}}\nThis also shows the use of the `.default` attribute.  This value is expected to be an integer, and the order in which the actions are displayed is determined by this value.  The action with the highest `.default` value is listed first, and is selected by default.  The rest of the actions are listed in order of decreasing `.default` values.\nIf not specified for an action, `.default` is 0.  The value may be negative.\n\nThere are a couple of hard-coded constraints to the workflow.  In particular, tickets are created with status `new`, and tickets are expected to have a `closed` state.  Further, the default reports/queries treat any state other than `closed` as an open state.\n\nWhile creating or modifying a ticket workflow, `contrib/workflow/workflow_parser.py` may be useful.  It can create `.dot` files that [http://www.graphviz.org GraphViz] understands to provide a visual description of the workflow.\n\nThis can be done as follows (your install path may be different).\n{{{\ncd /var/local/trac_devel/contrib/workflow/\nsudo ./showworkflow /srv/trac/PlannerSuite/conf/trac.ini\n}}}\nAnd then open up the resulting `trac.pdf` file created by the script (it will be in the same directory as the `trac.ini` file).\n\nAn online copy of the workflow parser is available at http://foss.wush.net/cgi-bin/visual-workflow.pl\n\nAfter you have changed a workflow, you need to restart apache for the changes to take effect. This is important, because the changes will still show up when you run your script, but all the old workflow steps will still be there until the server is restarted.\n\n== Example: Adding optional Testing with Workflow ==\n\nBy adding the following to your [ticket-workflow] section of trac.ini you get optional testing.  When the ticket is in new, accepted or needs_work status you can choose to submit it for testing.  When it\'s in the testing status the user gets the option to reject it and send it back to needs_work, or pass the testing and send it along to closed.  If they accept it then it gets automatically marked as closed and the resolution is set to fixed.  Since all the old work flow remains, a ticket can skip this entire section.\n\n{{{\ntesting = new,accepted,needs_work,assigned,reopened -> testing\ntesting.name = Submit to reporter for testing\ntesting.permissions = TICKET_MODIFY\n\nreject = testing -> needs_work\nreject.name = Failed testing, return to developer\n\npass = testing -> closed\npass.name = Passes Testing\npass.operations = set_resolution\npass.set_resolution = fixed\n}}}\n\n=== How to combine the `tracopt.ticket.commit_updater` with the testing workflow ===\n\nThe [[trac:source:trunk/tracopt/ticket/commit_updater.py|tracopt.ticket.commit_updater]] is the optional component that [[TracRepositoryAdmin#trac-post-commit-hook|replaces the old trac-post-commit-hook]], in Trac 0.12.\n\nBy default it reacts on some keywords found in changeset message logs like \'\'close\'\', \'\'fix\'\' etc. and performs the corresponding workflow action.\n\nIf you have a more complex workflow, like the testing stage described above and you want the \'\'closes\'\' keyword to move the ticket to the \'\'testing\'\' status instead of the \'\'closed\'\' status, you need to adapt the code a bit. \n\nHave a look at the [[trac:wiki:0.11/TracWorkflow#How-ToCombineSVNtrac-post-commit-hookWithTestWorkflow|Trac 0.11 recipe]] for the `trac-post-commit-hook`, this will give you some ideas about how to modify the component.\n\n== Example: Add simple optional generic review state ==\n\nSometimes Trac is used in situations where \"testing\" can mean different things to different people so you may want to create an optional workflow state that is between the default workflow\'s `assigned` and `closed` states, but does not impose implementation-specific details. The only new state you need to add for this is a `reviewing` state. A ticket may then be \"submitted for review\" from any state that it can be reassigned. If a review passes, you can re-use the `resolve` action to close the ticket, and if it fails you can re-use the `reassign` action to push it back into the normal workflow.\n\nThe new `reviewing` state along with its associated `review` action looks like this:\n\n{{{\nreview = new,assigned,reopened -> reviewing\nreview.operations = set_owner\nreview.permissions = TICKET_MODIFY\n}}}\n\nThen, to integrate this with the default Trac 0.11 workflow, you also need to add the `reviewing` state to the `accept` and `resolve` actions, like so:\n\n{{{\naccept = new,reviewing -> assigned\n[…]\nresolve = new,assigned,reopened,reviewing -> closed\n}}}\n\nOptionally, you can also add a new action that allows you to change the ticket\'s owner without moving the ticket out of the `reviewing` state. This enables you to reassign review work without pushing the ticket back to the `new` status.\n\n{{{\nreassign_reviewing = reviewing -> *\nreassign_reviewing.name = reassign review\nreassign_reviewing.operations = set_owner\nreassign_reviewing.permissions = TICKET_MODIFY\n}}}\n\nThe full `[ticket-workflow]` configuration will thus look like this:\n\n{{{\n[ticket-workflow]\naccept = new,reviewing -> assigned\naccept.operations = set_owner_to_self\naccept.permissions = TICKET_MODIFY\nleave = * -> *\nleave.default = 1\nleave.operations = leave_status\nreassign = new,assigned,accepted,reopened -> assigned\nreassign.operations = set_owner\nreassign.permissions = TICKET_MODIFY\nreopen = closed -> reopened\nreopen.operations = del_resolution\nreopen.permissions = TICKET_CREATE\nresolve = new,assigned,reopened,reviewing -> closed\nresolve.operations = set_resolution\nresolve.permissions = TICKET_MODIFY\nreview = new,assigned,reopened -> reviewing\nreview.operations = set_owner\nreview.permissions = TICKET_MODIFY\nreassign_reviewing = reviewing -> *\nreassign_reviewing.operations = set_owner\nreassign_reviewing.name = reassign review\nreassign_reviewing.permissions = TICKET_MODIFY\n}}}\n\n== Example: Limit the resolution options for a new ticket ==\n\nThe above resolve_new operation allows you to set the possible resolutions for a new ticket.  By modifying the existing resolve action and removing the new status from before the `->` we then get two resolve actions.  One with limited resolutions for new tickets, and then the regular one once a ticket is accepted.\n\n{{{\nresolve_new = new -> closed\nresolve_new.name = resolve\nresolve_new.operations = set_resolution\nresolve_new.permissions = TICKET_MODIFY\nresolve_new.set_resolution = invalid,wontfix,duplicate\n\nresolve = assigned,accepted,reopened -> closed\nresolve.operations = set_resolution\nresolve.permissions = TICKET_MODIFY\n}}}\n\n== Advanced Ticket Workflow Customization ==\n\nIf the customization above is not extensive enough for your needs, you can extend the workflow using plugins.  These plugins can provide additional operations for the workflow (like code_review), or implement side-effects for an action (such as triggering a build) that may not be merely simple state changes.  Look at [trac:source:trunk/sample-plugins/workflow sample-plugins/workflow] for a few simple examples to get started.\n\nBut if even that is not enough, you can disable the !ConfigurableTicketWorkflow component and create a plugin that completely replaces it.\n\n== Adding Workflow States to Milestone Progress Bars ==\n\nIf you add additional states to your workflow, you may want to customize your milestone progress bars as well.  See [TracIni#milestone-groups-section TracIni].\n\n== some ideas for next steps ==\n\nNew enhancement ideas for the workflow system should be filed as enhancement tickets against the `ticket system` component.  If desired, add a single-line link to that ticket here.  Also look at the [http://trac-hacks.org/wiki/AdvancedTicketWorkflowPlugin AdvancedTicketWorkflowPlugin] as it provides experimental operations.\n\nIf you have a response to the comments below, create an enhancement ticket, and replace the description below with a link to the ticket.\n\n * the \"operation\" could be on the nodes, possible operations are:\n   * \'\'\'preops\'\'\': automatic, before entering the state/activity\n   * \'\'\'postops\'\'\': automatic, when leaving the state/activity\n   * \'\'\'actions\'\'\': can be chosen by the owner in the list at the bottom, and/or drop-down/pop-up together with the default actions of leaving the node on one of the arrows.\n\'\'This appears to add complexity without adding functionality; please provide a detailed example where these additions allow something currently impossible to implement.\'\'\n\n * operations could be anything: sum up the time used for the activity, or just write some statistical fields like \n\'\'A workflow plugin can add an arbitrary workflow operation, so this is already possible.\'\'\n\n * set_actor should be an operation allowing to set the owner, e.g. as a \"preop\":\n   * either to a role, a person\n   * entered fix at define time, or at run time, e.g. out of a field, or select.\n\'\'This is either duplicating the existing `set_owner` operation, or needs to be clarified.\'\'\n\n * Actions should be selectable based on the ticket type (different Workflows for different tickets)\n\'\'Look into the [http://trac-hacks.org/wiki/AdvancedTicketWorkflowPlugin AdvancedTicketWorkflowPlugin]\'s `triage` operation.\'\'\n\n * I\'d wish to have an option to perform automatic status changes. In my case, I do not want to start with \"new\", but with \"assigned\". So tickets in state \"new\" should automatically go into state \"assigned\". Or is there already a way to do this and I just missed it?\n\'\'Have a look at [http://trac-hacks.org/wiki/TicketCreationStatusPlugin TicketCreationStatusPlugin] and [http://trac-hacks.org/wiki/TicketConditionalCreationStatusPlugin TicketConditionalCreationStatusPlugin]\'\'\n\n * I added a \'testing\' state. A tester can close the ticket or reject it. I\'d like the transition from testing to rejected to set the owner to the person that put the ticket in \'testing\'. The [http://trac-hacks.org/wiki/AdvancedTicketWorkflowPlugin AdvancedTicketWorkflowPlugin] is close with set_owner_to_field, but we need something like set_field_to_owner.\n\n * I\'d like to track the time a ticket is in each state, adding up \'disjoints\' intervals in the same state.\n',NULL,NULL),('VariousPloneConfiguarion',1,1302001381000000,'akshat','59.163.79.36','== Various Plone Configuarion ==\r\nIn this section various configurations of Plone which has been used at NCRA-TIFR website has been documented.\r\n\r\n[wiki:SetupLogo How to Setup Logo in Plone]\r\n\r\n[wiki:NewPackagesInstallation How to install new Packages in Plone]\r\n\r\n[wiki:MySQLConfiguration MySQL Configuration in Zope/Plone]\r\n\r\n----\r\n[wiki:Plone Back to Plone]\r\n','',0),('VariousPloneConfiguarion',2,1302001454000000,'akshat','59.163.79.36','== Various Plone Configuarion ==\r\nIn this section various configurations of Plone which has been used at NCRA-TIFR website has been documented.\r\n\r\n[wiki:SetupLogo How to Setup Logo in Plone]\r\n\r\n[wiki:NewPackagesInstallation How to install new Packages in Plone]\r\n\r\n[wiki:MySQLConfiguration MySQL Configuration in Zope/Plone]\r\n\r\n[wiki:InstalledPackages Installed Packages in Plone in NCRA-TIFR Pune Website]\r\n\r\n----\r\n[wiki:Plone Back to Plone]\r\n','',0),('VariousPloneConfiguarion',3,1302081035000000,'akshat','158.144.16.5','== Various Plone Configuarion ==\r\nIn this section various configurations of Plone which has been used at NCRA-TIFR website has been documented.\r\n\r\n[wiki:SetupLogo How to Setup Logo in Plone]\r\n\r\n[wiki:SetupLogo How to Setup Footer in Plone]\r\n\r\n[wiki:NewPackagesInstallation How to install new Packages in Plone]\r\n\r\n[wiki:MySQLConfiguration MySQL Configuration in Zope/Plone]\r\n\r\n[wiki:InstalledPackages Installed Packages in Plone in NCRA-TIFR Pune Website]\r\n\r\n----\r\n[wiki:Plone Back to Plone]\r\n','',0),('VariousPloneConfiguarion',4,1302081054000000,'akshat','158.144.16.5','== Various Plone Configuarion ==\r\nIn this section various configurations of Plone which has been used at NCRA-TIFR website has been documented.\r\n\r\n[wiki:SetupLogo How to Setup Logo in Plone]\r\n\r\n[wiki:SetupFooter How to Setup Footer in Plone]\r\n\r\n[wiki:NewPackagesInstallation How to install new Packages in Plone]\r\n\r\n[wiki:MySQLConfiguration MySQL Configuration in Zope/Plone]\r\n\r\n[wiki:InstalledPackages Installed Packages in Plone in NCRA-TIFR Pune Website]\r\n\r\n----\r\n[wiki:Plone Back to Plone]\r\n','',0),('VariousPloneConfiguarion',5,1335267379748567,'akshat','158.144.16.26','== Various Plone Configuarion ==\r\nIn this section various configurations of Plone which has been used at NCRA-TIFR website has been documented.\r\n\r\n[wiki:HidingTabs Making tabs not appear]\r\n\r\n[wiki:SetupLogo How to Setup Logo in Plone]\r\n\r\n[wiki:SetupFooter How to Setup Footer in Plone]\r\n\r\n[wiki:NewPackagesInstallation How to install new Packages in Plone]\r\n\r\n[wiki:MySQLConfiguration MySQL Configuration in Zope/Plone]\r\n\r\n[wiki:InstalledPackages Installed Packages in Plone in NCRA-TIFR Pune Website]\r\n\r\n----\r\n[wiki:Plone Back to Plone]','',0),('VariousPloneConfiguarion',6,1335267429525313,'akshat','158.144.16.26','== Various Plone Configuarion ==\r\nIn this section various configurations of Plone which has been used at NCRA-TIFR website has been documented.\r\n\r\n[wiki:Tabs Dealing with the Tabs]\r\n\r\n[wiki:SetupLogo How to Setup Logo in Plone]\r\n\r\n[wiki:SetupFooter How to Setup Footer in Plone]\r\n\r\n[wiki:NewPackagesInstallation How to install new Packages in Plone]\r\n\r\n[wiki:MySQLConfiguration MySQL Configuration in Zope/Plone]\r\n\r\n[wiki:InstalledPackages Installed Packages in Plone in NCRA-TIFR Pune Website]\r\n\r\n----\r\n[wiki:Plone Back to Plone]','',0),('VariousPloneConfiguarion',7,1397143764566338,'admin','192.168.0.13','== Various Plone Configuarion ==\r\nIn this section various configurations of Plone which has been used at NCRA-TIFR website has been documented.\r\n\r\n[wiki:Tabs Dealing with the Tabs]\r\n\r\n[wiki:SetupLogo How to Setup Logo in Plone]\r\n\r\n[wiki:SetupFooter How to Setup Footer in Plone]\r\n\r\n[wiki:NewPackagesInstallation How to install new Packages in Plone]\r\n\r\n[wiki:MySQLConfiguration MySQL Configuration in Zope/Plone]\r\n\r\n[wiki:InstalledPackages Installed Packages in Plone in NCRA-TIFR Pune Website]\r\n\r\n----\r\n[wiki:Plone Back to Plone]\r\n----','',0),('Vim',1,1402568808980633,'akshat','192.168.0.18','== Vim Editor ==\r\n\r\n[http://people.csail.mit.edu/vgod/vim/vim-cheat-sheet-en.pdf Handy PDF]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('Vim',2,1405347479108953,'akshat','192.168.0.18','== Vim Editor ==\r\n\r\n[[Image(Vim.jpg,90px,right)]]\r\n\r\n[http://people.csail.mit.edu/vgod/vim/vim-cheat-sheet-en.pdf Handy PDF]\r\n\r\n----\r\n\r\n[wiki:Contents List all Pages]\r\n\r\n----','',0),('WikiDeletePage',1,1291894092000000,'trac','127.0.0.1','= Deleting a Wiki Page =\n\nExisting wiki pages can be completely deleted using the \'\'Delete Page\'\' or the \'\'Delete this Version\'\' buttons at the bottom of the wiki page. These buttons are only visible for users with `WIKI_DELETE` permissions.\n\n\'\'\'Note:\'\'\' Deleting a wiki page is an irreversible operation.\n\nIn general, it is recommended to create redirection pages instead of completely deleting an old page, as to not frustrate the visitor with broken links when coming to the site from a search engine. A redirection page is a short page that  contains a link such as  “See !SomeOtherPage”. However, deleting specific versions or even complete pages can make sense to remove spam or other abusive submissions.\n\n----\nSee also: TracWiki, TracPermissions\n',NULL,NULL),('WikiDeletePage',2,1397068026270621,'trac','127.0.0.1','= Deleting a Wiki Page =\n\nExisting wiki pages can be completely deleted using the \'\'Delete Page\'\' or the \'\'Delete this Version\'\' buttons at the bottom of the wiki page. These buttons are only visible for users with `WIKI_DELETE` permissions.\n\n\'\'\'Note:\'\'\' Deleting a wiki page is an irreversible operation.\n\nIf you want to delete a page because you actually re-created a new page with the same content but a different name, it is recommended to keep the page and use it as a redirection page instead of completely deleting it, as to not frustrate the visitor with broken links when coming to the site from a search engine. \n\nIn this situation, chances are that you actually wanted to [[WikiNewPage#renaming|rename]] the page instead of doing a copy + delete. \nThe \'\'Rename\'\' operation also offers you the possibility to create a redirection page.\nA redirection page is a short page that  contains a link such as  “See !SomeOtherPage”. \n\nHowever, deleting specific versions or even complete pages can make sense to remove spam or other abusive submissions.\n\n----\nSee also: TracWiki, TracPermissions\n',NULL,NULL),('WikiFormatting',1,1291894092000000,'trac','127.0.0.1','= WikiFormatting =\n[[TracGuideToc]]\n\nWiki markup is a core feature in Trac, tightly integrating all the other parts of Trac into a flexible and powerful whole.\n\nTrac has a built in small and powerful wiki rendering engine. This wiki engine implements an ever growing subset of the commands from other popular Wikis,\nespecially [http://moinmoin.wikiwikiweb.de/ MoinMoin]. \n\n\nThis page demonstrates the formatting syntax available anywhere WikiFormatting is allowed.\n\n\n== Font Styles ==\n\nThe Trac wiki supports the following font styles:\n{{{\n * \'\'\'bold\'\'\', \'\'\'!\'\'\' can be bold too\'\'\', and \'\'\'! \'\'\'\n * \'\'italic\'\'\n * \'\'\'\'\'bold italic\'\'\'\'\'\n * __underline__\n * {{{monospace}}} or `monospace`\n * ~~strike-through~~\n * ^superscript^ \n * ,,subscript,,\n}}}\n\nDisplay:\n * \'\'\'bold\'\'\', \'\'\'!\'\'\' can be bold too\'\'\', and \'\'\'! \'\'\'\n * \'\'italic\'\'\n * \'\'\'\'\'bold italic\'\'\'\'\'\n * __underline__\n * {{{monospace}}} or `monospace`\n * ~~strike-through~~\n * ^superscript^ \n * ,,subscript,,\n\nNotes:\n * `{{{...}}}` and {{{`...`}}} commands not only select a monospace font, but also treat their content as verbatim text, meaning that no further wiki processing is done on this text.\n * {{{ ! }}} tells wiki parser to not take the following characters as wiki format, so pay attention to put a space after !, e.g. when ending bold.\n\n== Headings ==\n\nYou can create heading by starting a line with one up to five \'\'equal\'\' characters (\"=\")\nfollowed by a single space and the headline text. The line should end with a space \nfollowed by the same number of \'\'=\'\' characters.\nThe heading might optionally be followed by an explicit id. If not, an implicit but nevertheless readable id will be generated.\n\nExample:\n{{{\n= Heading =\n== Subheading ==\n=== About \'\'this\'\' ===\n=== Explicit id === #using-explicit-id-in-heading\n}}}\n\nDisplay:\n= Heading =\n== Subheading ==\n=== About \'\'this\'\' ===\n=== Explicit id === #using-explicit-id-in-heading\n\n== Paragraphs ==\n\nA new text paragraph is created whenever two blocks of text are separated by one or more empty lines.\n\nA forced line break can also be inserted, using:\n{{{\nLine 1[[BR]]Line 2\n}}}\nDisplay:\n\nLine 1[[BR]]Line 2\n\n\n== Lists ==\n\nThe wiki supports both ordered/numbered and unordered lists.\n\nExample:\n{{{\n * Item 1\n   * Item 1.1\n      * Item 1.1.1   \n      * Item 1.1.2\n      * Item 1.1.3\n   * Item 1.2\n * Item 2\n\n 1. Item 1\n   a. Item 1.a\n   a. Item 1.b\n      i. Item 1.b.i\n      i. Item 1.b.ii\n 1. Item 2\nAnd numbered lists can also be given an explicit number:\n 3. Item 3\n}}}\n\nDisplay:\n * Item 1\n   * Item 1.1\n      * Item 1.1.1\n      * Item 1.1.2\n      * Item 1.1.3\n   * Item 1.2\n * Item 2\n\n 1. Item 1\n   a. Item 1.a\n   a. Item 1.b\n      i. Item 1.b.i\n      i. Item 1.b.ii\n 1. Item 2\nAnd numbered lists can also be given an explicit number:\n 3. Item 3\n\nNote that there must be one or more spaces preceding the list item markers, otherwise the list will be treated as a normal paragraph.\n\n\n== Definition Lists ==\n\n\nThe wiki also supports definition lists.\n\nExample:\n{{{\n llama::\n   some kind of mammal, with hair\n ppython::\n   some kind of reptile, without hair\n   (can you spot the typo?)\n}}}\n\nDisplay:\n llama::\n   some kind of mammal, with hair\n ppython::\n   some kind of reptile, without hair\n   (can you spot the typo?)\n\nNote that you need a space in front of the defined term.\n\n\n== Preformatted Text ==\n\nBlock containing preformatted text are suitable for source code snippets, notes and examples. Use three \'\'curly braces\'\' wrapped around the text to define a block quote. The curly braces need to be on a separate line.\n  \nExample:\n{{{\n {{{\n  def HelloWorld():\n      print \"Hello World\"\n }}}\n}}}\n\nDisplay:\n{{{\n def HelloWorld():\n     print \"Hello World\"\n}}}\n\n\n== Blockquotes ==\n\nIn order to mark a paragraph as blockquote, indent that paragraph with two spaces.\n\nExample:\n{{{\n  This text is a quote from someone else.\n}}}\n\nDisplay:\n  This text is a quote from someone else.\n\n== Discussion Citations ==\n\nTo delineate a citation in an ongoing discussion thread, such as the ticket comment area, e-mail-like citation marks (\">\", \">>\", etc.) may be used.  \n\nExample:\n{{{\n>> Someone\'s original text\n> Someone else\'s reply text\nMy reply text\n}}}\n\nDisplay:\n>> Someone\'s original text\n> Someone else\'s reply text\nMy reply text\n\n\'\'Note: Some WikiFormatting elements, such as lists and preformatted text, are  lost in the citation area.  Some reformatting may be necessary to create a clear citation.\'\'\n\n== Tables ==\n\nSimple tables can be created like this:\n{{{\n||Cell 1||Cell 2||Cell 3||\n||Cell 4||Cell 5||Cell 6||\n}}}\n\nDisplay:\n||Cell 1||Cell 2||Cell 3||\n||Cell 4||Cell 5||Cell 6||\n\nNote that more complex tables can be created using\n[wiki:WikiRestructuredText#BiggerReSTExample reStructuredText].\n\n\n== Links ==\n\nHyperlinks are automatically created for WikiPageNames and URLs. !WikiPageLinks can be disabled by prepending an exclamation mark \"!\" character, such as {{{!WikiPageLink}}}.\n\nExample:\n{{{\n TitleIndex, http://www.edgewall.com/, !NotAlink\n}}}\n\nDisplay:\n TitleIndex, http://www.edgewall.com/, !NotAlink\n\nLinks can be given a more descriptive title by writing the link followed by a space and a title and all this inside square brackets.  If the descriptive title is omitted, then the explicit prefix is discarded, unless the link is an external link. This can be useful for wiki pages not adhering to the WikiPageNames convention.\n\nExample:\n{{{\n * [http://www.edgewall.com/ Edgewall Software]\n * [wiki:TitleIndex Title Index]\n * [wiki:ISO9000]\n}}}\n\nDisplay:\n * [http://www.edgewall.com/ Edgewall Software]\n * [wiki:TitleIndex Title Index]\n * [wiki:ISO9000]\n\n== Trac Links ==\n\nWiki pages can link directly to other parts of the Trac system. Pages can refer to tickets, reports, changesets, milestones, source files and other Wiki pages using the following notations:\n{{{\n * Tickets: #1 or ticket:1\n * Reports: {1} or report:1\n * Changesets: r1, [1] or changeset:1\n * ...\n}}}\n\nDisplay:\n * Tickets: #1 or ticket:1\n * Reports: {1} or report:1\n * Changesets: r1, [1] or changeset:1\n * ... \n\nThere are many more flavors of Trac links, see TracLinks for more in-depth information.\n\n\n== Escaping Links and WikiPageNames ==\n\nYou may avoid making hyperlinks out of TracLinks by preceding an expression with a single \"!\" (exclamation mark).\n\nExample:\n{{{\n !NoHyperLink\n !#42 is not a link\n}}}\n\nDisplay:\n !NoHyperLink\n !#42 is not a link\n\n\n== Images ==\n\nUrls ending with `.png`, `.gif` or `.jpg` are no longer automatically interpreted as image links, and converted to `<img>` tags.\n\nYou now have to use the ![[Image]] macro. The simplest way to include an image is to upload it as attachment to the current page, and put the filename in a macro call like `[[Image(picture.gif)]]`.\n\nIn addition to the current page, it is possible to refer to other resources:\n * `[[Image(wiki:WikiFormatting:picture.gif)]]` (referring to attachment on another page)\n * `[[Image(ticket:1:picture.gif)]]` (file attached to a ticket)\n * `[[Image(htdocs:picture.gif)]]` (referring to a file inside project htdocs)\n * `[[Image(source:/trunk/trac/htdocs/trac_logo_mini.png)]]` (a file in repository)\n\nExample display: [[Image(htdocs:../common/trac_logo_mini.png)]]\n\nSee WikiMacros for further documentation on the `[[Image()]]` macro.\n\n\n== Macros ==\n\nMacros are \'\'custom functions\'\' to insert dynamic content in a page.\n\nExample:\n{{{\n [[RecentChanges(Trac,3)]]\n}}}\n\nDisplay:\n [[RecentChanges(Trac,3)]]\n\nSee WikiMacros for more information, and a list of installed macros.\n\n\n== Processors ==\n\nTrac supports alternative markup formats using WikiProcessors. For example, processors are used to write pages in \n[wiki:WikiRestructuredText reStructuredText] or [wiki:WikiHtml HTML]. \n\nExample 1:\n{{{\n#!html\n<pre class=\"wiki\">{{{\n#!html\n&lt;h1 style=\"text-align: right; color: blue\"&gt;HTML Test&lt;/h1&gt;\n}}}</pre>\n}}}\n\nDisplay:\n{{{\n#!html\n<h1 style=\"text-align: right; color: blue\">HTML Test</h1>\n}}}\n\nExample:\n{{{\n#!html\n<pre class=\"wiki\">{{{\n#!python\nclass Test:\n\n    def __init__(self):\n        print \"Hello World\"\nif __name__ == \'__main__\':\n   Test()\n}}}</pre>\n}}}\n\nDisplay:\n{{{\n#!python\nclass Test:\n    def __init__(self):\n        print \"Hello World\"\nif __name__ == \'__main__\':\n   Test()\n}}}\n\nPerl:\n{{{\n#!perl\nmy ($test) = 0;\nif ($test > 0) {\n    print \"hello\";\n}\n}}}\n\nSee WikiProcessors for more information.\n\n\n== Comments ==\n\nComments can be added to the plain text. These will not be rendered and will not display in any other format than plain text.\n{{{\n{{{\n#!comment\nYour comment here\n}}}\n}}}\n\n\n== Miscellaneous ==\n\nFour or more dashes will be replaced by a horizontal line (<HR>)\n\nExample:\n{{{\n ----\n}}}\n\nDisplay:\n----\n\n\n\n----\nSee also: TracLinks, TracGuide, WikiHtml, WikiMacros, WikiProcessors, TracSyntaxColoring.',NULL,NULL),('WikiFormatting',2,1397068026244665,'trac','127.0.0.1','= WikiFormatting =\n[[TracGuideToc]]\n\nWiki markup is a core feature in Trac, tightly integrating all the other parts of Trac into a flexible and powerful whole.\n\nTrac has a built in small and powerful wiki rendering engine. This wiki engine implements an ever growing subset of the commands from other popular Wikis,\nespecially [http://moinmo.in/ MoinMoin] and [trac:WikiCreole].\n\n\nThis page will give you an in-depth explanation of the wiki markup available anywhere WikiFormatting is allowed.\n\nThe \'\'Cheat sheet\'\' below gives you a quick overview for the most common syntax, each link in the \'\'Category\'\' column will lead you to the more detailed explanation later in this page.\n\nA few other wiki pages present the advanced features of the Trac wiki markup in more depth: \n - TracLinks covers all the possible ways to refer precisely to any Trac resource or parts thereof,\n - WikiPageNames talks about the various names a wiki page can take, CamelCase or not\n - WikiMacros lists the macros available for generating dynamic content,\n - WikiProcessors and WikiHtml details how parts of the wiki text can be processed in special ways\n\n\n== Cheat sheet ==\n\n||= \'\'\'Category\'\'\' =||= \'\'\'Wiki Markup\'\'\' =||= \'\'\'Display\'\'\' =||\n|-----------------------------------------------------------\n{{{#!th rowspan=3\n[#FontStyles Font Styles]\n}}}\n|| `\'\'\'bold\'\'\'`, `\'\'italic\'\'`, `\'\'\'\'\'Wikipedia style\'\'\'\'\'` || \\\n|| \'\'\'bold\'\'\', \'\'italic\'\', \'\'\'\'\'Wikipedia style\'\'\'\'\' ||\n|| {{{`monospaced (\'\'other markup ignored\'\')`}}} || \\\n|| `monospaced (\'\'other markup ignored\'\')` ||\n|| `**bold**`, `//italic//`, `**//!WikiCreole style//**` || \\\n|| **bold**, //italic//, **//!WikiCreole style//** ||\n|-----------------------------------------------------------\n||= [#Headings Headings] =||\\\n{{{#!td \n {{{\n == Level 2 ==\n === Level 3 ^([#hn note])^\n }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\n== Level 2 ==\n=== Level 3 ^([#hn note])^\n}}}\n|-----------------------------------------------------------\n||= [#Paragraphs Paragraphs]  =||\\\n{{{#!td\n {{{\n First paragraph\n on multiple lines.\n\n Second paragraph.\n }}}\n}}}\n{{{#!td\nFirst paragraph\non multiple lines.\n\nSecond paragraph.\n}}}\n|-----------------------------------------------------------\n||= [#Lists Lists] =||\\\n{{{#!td\n {{{\n * bullets list\n   on multiple lines\n   1. nested list\n     a. different numbering \n        styles\n }}}\n}}}\n{{{#!td\n* bullets list\n  on multiple lines\n  1. nested list\n    a. different numbering\n       styles\n}}}\n|-----------------------------------------------------------\n{{{#!th\n[#DefinitionLists Definition Lists]\n}}}\n{{{#!td\n {{{\n  term:: definition on\n         multiple lines\n }}}\n}}}\n{{{#!td\n term:: definition on\n        multiple lines\n}}}\n|-----------------------------------------------------------\n||= [#PreformattedText Preformatted Text] =||\\\n{{{#!td\n {{{\n {{{\n multiple lines, \'\'no wiki\'\'\n       white space respected\n }}}\n }}}\n}}}\n{{{#!td\n {{{\n multiple lines, \'\'no wiki\'\'\n       white space respected\n }}}\n}}}\n|-----------------------------------------------------------\n||= [#Blockquotes Blockquotes] =||\\\n{{{#!td\n {{{\n   if there\'s some leading\n   space the text is quoted\n }}}\n}}}\n{{{#!td\n if there\'s some leading\n space the text is quoted\n}}}\n|-----------------------------------------------------------\n||= [#DiscussionCitations Discussion Citations] =||\\\n{{{#!td\n {{{\n >> ... (I said)\n > (he replied)\n }}}\n}}}\n{{{#!td\n>>... (I said)\n> (he replied)\n}}}\n|-----------------------------------------------------------\n||= [#Tables Tables] =||\\\n{{{#!td\n {{{\n ||= Table Header =|| Cell ||\n ||||  (details below)  ||\n }}}\n}}}\n{{{#!td\n||= Table Header =|| Cell ||\n||||  (details below)  ||\n}}}\n|-----------------------------------------------------------\n{{{#!th rowspan=2\n[#Links Links]\n}}}\n|| `http://trac.edgewall.org` ||\\\n|| http://trac.edgewall.org ||\n|| `WikiFormatting (CamelCase)` ||\\\n|| WikiFormatting (CamelCase) ||\n|-----------------------------------------------------------\n{{{#!th rowspan=5\n[#TracLinks TracLinks]\n}}}\n|| `wiki:WikiFormatting`, `wiki:\"WikiFormatting\"` ||\\\n|| wiki:WikiFormatting, wiki:\"WikiFormatting\" ||\n|| `#1 (ticket)`, `[1] (changeset)`, `{1} (report)` ||\\\n|| #1 (ticket), [1] (changeset), {1} (report) ||\n|| `ticket:1, ticket:1#comment:1` ||\\\n|| ticket:1, ticket:1#comment:1 ||\n|| `Ticket [ticket:1]`, `[ticket:1 ticket one]` ||\\\n|| Ticket [ticket:1], [ticket:1 ticket one] ||\n|| `Ticket [[ticket:1]]`, `[[ticket:1|ticket one]]` ||\\\n|| Ticket [[ticket:1]], [[ticket:1|ticket one]] ||\n|-----------------------------------------------------------\n{{{#!th rowspan=2 \n[#SettingAnchors Setting Anchors]\n}}}\n|| `[=#point1 (1)] First...` ||\\\n|| [=#point1 (1)] First... ||\n|| `see [#point1 (1)]` ||\\\n|| see [#point1 (1)] ||\n|-----------------------------------------------------------\n{{{#!th rowspan=3\n[#Escaping Escaping Markup]\n}}}\n|| `!\'\' doubled quotes` ||\\\n|| !\'\' doubled quotes ||\n|| `!wiki:WikiFormatting`, `!WikiFormatting` ||\\\n|| !wiki:WikiFormatting, !WikiFormatting ||\n|| {{{`}}}`{{{-}}}`{{{`}}}` triple curly brackets` ||\\\n|| `{{{-}}}` triple curly brackets ||\n|-----------------------------------------------------------\n||= [#Images Images] =|| `[[Image(`\'\'link\'\'`)]]` || [[Image(htdocs:../common/trac_logo_mini.png)]] ||\n|-----------------------------------------------------------\n{{{#!th rowspan=2\n[#Macros Macros]\n}}}\n|| `[[MacroList(*)]]` ||  \'\'(short list of all available macros)\'\'  ||\n|| `[[Image?]]` ||  \'\'(help for the Image macro)\'\'  ||\n|-----------------------------------------------------------\n||= [#Processors Processors] =||\\\n{{{#!td\n {{{\n {{{\n #!div style=\"font-size: 80%\"\n Code highlighting:\n   {{{#!python\n   hello = lambda: \"world\"\n   }}}\n }}}\n }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\n {{{\n #!div style=\"font-size: 80%\"\n Code highlighting:\n   {{{#!python \n   hello = lambda: \"world\"\n   }}}\n }}}\n}}}\n|-----------------------------------------------------------\n||= [#Comments Comments] =||\\\n{{{#!td\n {{{\n {{{#!comment\n Note to Editors: ...\n }}}\n }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\n {{{#!comment\n Note to Editors: ...\n }}}\n}}}\n|-----------------------------------------------------------\n||= [#Miscellaneous Miscellaneous] =||\\\n{{{#!td\n {{{\n Line [[br]] break \n Line \\\\ break\n ----\n }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\nLine [[br]] break\nLine \\\\ break\n----\n}}}\n\n\n== Font Styles ==\n\nThe Trac wiki supports the following font styles:\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n   * \'\'\'bold\'\'\', \n     \'\'\' triple quotes !\'\'\' \n     can be bold too if prefixed by ! \'\'\', \n   * \'\'italic\'\'\n   * \'\'\'\'\'bold italic\'\'\'\'\' or \'\'italic and\n     \'\'\' italic bold \'\'\' \'\'\n   * __underline__\n   * {{{monospace}}} or `monospace`\n     (hence `{{{` or {{{`}}} quoting)\n   * ~~strike-through~~\n   * ^superscript^ \n   * ,,subscript,,\n   * **also bold**, //italic as well//, \n     and **\'\' bold italic **\'\' //(since 0.12)//\n  }}}\n}}}\n{{{#!td\n * \'\'\'bold\'\'\', \n   \'\'\' triple quotes !\'\'\' \n   can be bold too if prefixed by ! \'\'\', \n * \'\'italic\'\'\n * \'\'\'\'\'bold italic\'\'\'\'\' or \'\'italic and\n   \'\'\' italic bold \'\'\' \'\'\n * __underline__\n * {{{monospace}}} or `monospace`\n   (hence `{{{` or {{{`}}} quoting)\n * ~~strike-through~~\n * ^superscript^ \n * ,,subscript,,\n * **also bold**, //italic as well//, \n   and **\'\' bold italic **\'\' //(since 0.12)//\n}}}\n\nNotes:\n * `{{{...}}}` and {{{`...`}}} commands not only select a monospace font, but also treat their content as verbatim text, meaning that no further wiki processing is done on this text.\n * {{{ ! }}} tells wiki parser to not take the following characters as wiki format, so pay attention to put a space after !, e.g. when ending bold.\n * all the font styles marks have to be used in opening/closing pairs, \n   and they must nest properly (in particular, an `\'\'` italic can\'t be paired \n   with a `//` one, and `\'\'\'` can\'t be paired with `**`)\n\n\n== Headings ==\n\nYou can create heading by starting a line with one up to six \'\'equal\'\' characters (\"=\")\nfollowed by a single space and the headline text. \n\n[=#hn]\nThe headline text can be followed by the same number of \"=\" characters, but this is no longer mandatory.\n\nFinally, the heading might optionally be followed by an explicit id. If not, an implicit but nevertheless readable id will be generated.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  = Heading =\n  == Subheading\n  === About \'\'this\'\' ===\n  === Explicit id === #using-explicit-id-in-heading\n  == Subheading #sub2\n}}}\n}}}\n{{{#!td style=\"padding: 1em;\"\n  {{{\n  #!div\n  = Heading =\n  == Subheading\n  === About \'\'this\'\' ===\n  === Explicit id === #using-explicit-id-in-heading\n  == Subheading #sub2\n  }}}\n}}}\n\n== Paragraphs ==\n\nA new text paragraph is created whenever two blocks of text are separated by one or more empty lines.\n\nA forced line break can also be inserted, using:\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  Line 1[[BR]]Line 2\n  }}}\n  {{{\n  Paragraph\n  one\n\n  Paragraph \n  two\n  }}}\n}}}\n{{{#!td\n  Line 1[[BR]]Line 2\n\n  Paragraph \n  one\n\n  Paragraph \n  two\n}}}\n\n== Lists ==\n\nThe wiki supports both ordered/numbered and unordered lists.\n\nExample:\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n   * Item 1\n     * Item 1.1\n        * Item 1.1.1   \n        * Item 1.1.2\n        * Item 1.1.3\n     * Item 1.2\n   * Item 2\n  - items can start at the beginning of a line\n    and they can span multiple lines\n    - be careful though to continue the line \n    with the appropriate indentation, otherwise\n  that will start a new paragraph...\n  \n   1. Item 1\n     a. Item 1.a\n     a. Item 1.b\n        i. Item 1.b.i\n        i. Item 1.b.ii\n   1. Item 2\n  And numbered lists can also be restarted\n  with an explicit number:\n   3. Item 3\n  }}}\n}}}\n{{{#!td\n * Item 1\n   * Item 1.1\n      * Item 1.1.1   \n      * Item 1.1.2\n      * Item 1.1.3\n   * Item 1.2\n * Item 2\n- items can start at the beginning of a line\n  and they can span multiple lines\n  - be careful though to continue the line \n  with the appropriate indentation, otherwise\nthat will start a new paragraph...\n\n 1. Item 1\n   a. Item 1.a\n   a. Item 1.b\n      i. Item 1.b.i\n      i. Item 1.b.ii\n 1. Item 2\nAnd numbered lists can also be restarted with an explicit number:\n 3. Item 3\n}}}\n\n\n== Definition Lists ==\n\nThe wiki also supports definition lists.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n   llama::\n     some kind of mammal, with hair\n   ppython::\n     some kind of reptile, without hair\n     (can you spot the typo?)\n  }}}\n}}}\n{{{#!td\n llama::\n   some kind of mammal, with hair\n ppython::\n   some kind of reptile, without hair\n   (can you spot the typo?)\n}}}\n\nNote that you need a space in front of the defined term.\n\n\n== Preformatted Text ==\n\nBlock containing preformatted text are suitable for source code snippets, notes and examples. Use three \'\'curly braces\'\' wrapped around the text to define a block quote. The curly braces need to be on a separate line.\n  \n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  {{{\n  def HelloWorld():\n      print \'\'\'Hello World\'\'\'\n  }}}\n  }}}\n}}}\n{{{#!td\n  {{{\n  def HelloWorld():\n      print \'\'\'Hello World\'\'\'\n  }}}\n}}}\n\nNote that this kind of block is also used for selecting lines that should be processed through WikiProcessors.\n\n== Blockquotes ==\n\nIn order to mark a paragraph as blockquote, indent that paragraph with two spaces.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n{{{\nParagraph\n  This text is a quote from someone else.\n}}}\n}}}\n{{{#!td\nParagraph\n  This text is a quote from someone else.\n}}}\n\n== Discussion Citations ==\n\nTo delineate a citation in an ongoing discussion thread, such as the ticket comment area, e-mail-like citation marks (\">\", \">>\", etc.) may be used.  \n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  >> Someone\'s original text\n  > Someone else\'s reply text\n  >  - which can be any kind of Wiki markup\n  My reply text\n  }}}\n}}}\n{{{#!td\n>> Someone\'s original text\n> Someone else\'s reply text\n>  - which can be any kind of Wiki markup\nMy reply text\n}}}\n\n\n== Tables ==\n=== Simple Tables ===\nSimple tables can be created like this:\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  ||Cell 1||Cell 2||Cell 3||\n  ||Cell 4||Cell 5||Cell 6||\n  }}}\n}}}\n{{{#!td style=\"padding: 2em;\"\n||Cell 1||Cell 2||Cell 3||\n||Cell 4||Cell 5||Cell 6||\n}}}\n\nCell headings can be specified by wrapping the content in a pair of \'=\' characters.\nNote that the \'=\' characters have to stick to the cell separators, like this:\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  ||        ||= stable =||= latest =||\n  ||= 0.10 =||  0.10.5  || 0.10.6dev||\n  ||= 0.11 =||  0.11.6  || 0.11.7dev||\n  }}}\n}}}\n{{{#!td style=\"padding: 2em;\"\n||        ||= stable =||= latest =||\n||= 0.10 =||  0.10.5  || 0.10.6dev||\n||= 0.11 =||  0.11.6  || 0.11.7dev||\n}}}\n\nFinally, specifying an empty cell means that the next non empty cell will span the empty cells. For example:\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  || 1 || 2 || 3 ||\n  |||| 1-2 || 3 ||\n  || 1 |||| 2-3 ||\n  |||||| 1-2-3 ||\n  }}}\n}}}\n{{{#!td style=\"padding: 2em;\"\n|| 1 || 2 || 3 ||\n|||| 1-2 || 3 ||\n|| 1 |||| 2-3 ||\n|||||| 1-2-3 ||\n}}}\n\nNote that if the content of a cell \"sticks\" to one side of the cell and only one, then the text will be aligned on that side. Example:\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  ||=Text =||= Numbers =||\n  ||left align    ||        1.0||\n  ||  center      ||        4.5||\n  ||      right align||     4.5||\n  || default alignment ||   2.5||\n  ||default||         2.5||\n  ||  default ||      2.5||\n  || default ||       2.5||\n  }}}\n}}}\n{{{#!td style=\"padding: 2em;\"\n||=Text =||= Numbers =||\n||left align    ||        1.0||\n||  center      ||        4.5||\n||      right align||     4.5||\n|| default alignment ||   2.5||\n||default||         2.5||\n||  default ||      2.5||\n|| default ||       2.5||\n}}}\n\nIf contrary to the example above, the cells in your table contain more text, it might be convenient to spread a table row over multiple lines of markup. The `\\` character placed at the end of a line after a cell separator tells Trac to not start a new row for the cells on the next line.\n\n||= Wiki Markup =||\n{{{#!td\n  {{{\n  || this is column 1 [http://trac.edgewall.org/newticket new ticket] || \\\n  || this is column 2 [http://trac.edgewall.org/roadmap the road ahead] || \\\n  || that\'s column 3 and last one ||\n  }}}\n}}}\n|-------------\n||= Display =||\n{{{#!td style=\"padding: 2em;\"\n|| this is column 1 [http://trac.edgewall.org/newticket new ticket] || \\\n|| this is column 2 [http://trac.edgewall.org/roadmap the road ahead] || \\\n|| that\'s column 3 and last one ||\n}}}\n\n=== Complex Tables ===\n\nIf the possibilities offered by the simple \"pipe\"-based markup for tables described above are not enough for your needs, you can create more elaborated tables by using [#Processors-example-tables WikiProcessor based tables].\n\n\n== Links ==\n\nHyperlinks are automatically created for WikiPageNames and URLs. !WikiPageLinks can be disabled by prepending an exclamation mark \"!\" character, such as {{{!WikiPageLink}}}.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  TitleIndex, http://www.edgewall.com/, !NotAlink\n  }}}\n}}}\n{{{#!td\nTitleIndex, http://www.edgewall.com/, !NotAlink\n}}}\n\nLinks can be given a more descriptive title by writing the link followed by a space and a title and all this inside square brackets. \nIf the descriptive title is omitted, then the explicit prefix is discarded, unless the link is an external link. This can be useful for wiki pages not adhering to the WikiPageNames convention.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n   * [http://www.edgewall.com Edgewall Software]\n   * [wiki:TitleIndex Title Index] \n   * [wiki:TitleIndex] \n   * [wiki:ISO9000]\n  }}}\n}}}\n{{{#!td\n   * [http://www.edgewall.com Edgewall Software]\n   * [wiki:TitleIndex Title Index] \n   * [wiki:TitleIndex] \n   * [wiki:ISO9000]\n}}}\n\nFollowing the [trac:WikiCreole] trend, the descriptive title can also be specified by writing the link followed by a pipe (\'|\') and a title and all this inside //double// square brackets. \n\n{{{#!td\n  {{{\n   * [[http://www.edgewall.com|Edgewall Software]]\n   * [[wiki:TitleIndex|Title Index]]\n     or even [[TitleIndex|Title Index]]\n   * [[wiki:TitleIndex]]\n     \'\'\' but not ![[TitleIndex]]! \'\'\'\n   * [[ISO9000]]\n  }}}\n}}}\n{{{#!td\n   * [[http://www.edgewall.com|Edgewall Software]]\n   * [[wiki:TitleIndex|Title Index]]\n     or even [[TitleIndex|Title Index]]\n   * [[wiki:TitleIndex]]\n     \'\'\' but not ![[TitleIndex]]! \'\'\'\n   * [[ISO9000]]\n}}}\n\n\'\'\'Note\'\'\': the [trac:WikiCreole] style for links is quick to type and\ncertainly looks familiar as it\'s the one used on Wikipedia and in many\nother wikis. Unfortunately it conflicts with the syntax for [#Macros macros].\nSo in the rare case when you need to refer to a page which is named after\na macro (typical examples being TitleIndex, InterTrac and InterWiki), \nby writing `[[TitleIndex]]` you will actually call the macro instead of linking\nto the page.\n\n== Trac Links ==\n\nWiki pages can link directly to other parts of the Trac system. Pages can refer to tickets, reports, changesets, milestones, source files and other Wiki pages using the following notations:\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n   * Tickets: #1 or ticket:1\n   * Reports: {1} or report:1\n   * Changesets: r1, [1] or changeset:1\n   * ...\n   * targeting other Trac instances, \n     so called InterTrac links:\n     - Tickets: #Trac1 or Trac:ticket:1\n     - Changesets: [Trac1] or Trac:changeset:1\n  }}}\n}}}\n{{{#!td\n * Tickets: #1 or ticket:1\n * Reports: {1} or report:1\n * Changesets: r1, [1] or changeset:1\n * ... \n * targeting other Trac instances, \n   so called InterTrac links:\n   - Tickets: #Trac1 or Trac:ticket:1\n   - Changesets: [Trac1] or Trac:changeset:1\n}}}\n\nThere are many more flavors of Trac links, see TracLinks for more in-depth information and a reference for all the default link resolvers.\n\n\n== Setting Anchors ==\n\nAn anchor, or more correctly speaking, an [http://www.w3.org/TR/REC-html40/struct/links.html#h-12.2.1 anchor name] can be added explicitly at any place in the Wiki page, in order to uniquely identify a position in the document:\n\n{{{\n[=#point1]\n}}}\n\nThis syntax was chosen to match the format for explicitly naming the header id [#Headings documented above]. For example:\n{{{\n== Long title == #title\n}}}\n\nIt\'s also very close to the syntax for the corresponding link to that anchor:\n{{{\n[#point1]\n}}}\n\nOptionally, a label can be given to the anchor:\n{{{\n[[=#point1 \'\'\'Point 1\'\'\']]\n}}}\n\n||= Wiki Markup =||= Display =||\n|----------------------------------\n{{{#!td\n  {{{\n  [#point2 jump to the second point]\n\n  ...\n\n  Point2:  [=#point2] Jump here\n  }}}\n}}}\n{{{#!td\n  [#point2 jump to the second point]\n\n  ...\n\n  Point2:  [=#point2] Jump here\n}}}\n\nFor more complex anchors (e.g. when a custom title is wanted), one can use the Span macro, e.g. `[[span(id=point2, class=wikianchor, title=Point 2, ^(2)^)]]`.\n\n\n== Escaping Links, WikiPageNames and other Markup == #Escaping\n\nYou may avoid making hyperlinks out of TracLinks by preceding an expression with a single \"!\" (exclamation mark).\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n   !NoHyperLink\n   !#42 is not a link\n  }}}\n  {{{\nVarious forms of escaping for list markup:\n `-` escaped minus sign \\\\\n ``1. escaped number  \\\\\n {{{*}}} escaped asterisk sign\n  }}}\n}}}\n{{{#!td\n !NoHyperLink\n !#42 is not a link\n\nVarious forms of escaping for list markup:\n `-` escaped minus sign \\\\\n ``1. escaped number  \\\\\n {{{*}}} escaped asterisk sign\n}}}\n\n== Images ==\n\nUrls ending with `.png`, `.gif` or `.jpg` are no longer automatically interpreted as image links, and converted to `<img>` tags.\n\nYou now have to use the ![[Image]] macro. The simplest way to include an image is to upload it as attachment to the current page, and put the filename in a macro call like `[[Image(picture.gif)]]`.\n\nIn addition to the current page, it is possible to refer to other resources:\n * `[[Image(wiki:WikiFormatting:picture.gif)]]` (referring to attachment on another page)\n * `[[Image(ticket:1:picture.gif)]]` (file attached to a ticket)\n * `[[Image(htdocs:picture.gif)]]` (referring to a file inside the [TracEnvironment environment] `htdocs` directory)\n * `[[Image(source:/trunk/trac/htdocs/trac_logo_mini.png)]]` (a file in repository)\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  [[Image(htdocs:../common/trac_logo_mini.png)]]\n  }}}\n}}}\n{{{#!td\n[[Image(htdocs:../common/trac_logo_mini.png)]]\n}}}\n\nSee WikiMacros for further documentation on the `[[Image()]]` macro, which has several useful options (`title=`, `link=`, etc.)\n\n\n== Macros ==\n\nMacros are \'\'custom functions\'\' to insert dynamic content in a page.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  [[RecentChanges(Trac,3)]]\n  }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\n[[RecentChanges(Trac,3)]]\n}}}\n\nSee WikiMacros for more information, and a list of installed macros.\n\nThe detailed help for a specific macro can also be obtained more directly by appending a \"?\" to the macro name.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  [[MacroList?]]\n  }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\n[[MacroList?]]\n}}}\n\n\n== Processors ==\n\nTrac supports alternative markup formats using WikiProcessors. For example, processors are used to write pages in \n[wiki:WikiRestructuredText reStructuredText] or [wiki:WikiHtml HTML]. \n\n||= Wiki Markup =||= Display =||\n|--------------------------------------------------------\n{{{#!td align=\"center\" colspan=2 style=\"border: 0px; font-size: 90%\"\n\n   [=#Processors-example-html Example 1:] HTML\n\n}}}\n|--------------------------------------------------------\n{{{#!td style=\"border: 0px\"\n  {{{\n  {{{\n  #!html\n  <h1 style=\"text-align: right; color: blue\">\n   HTML Test\n  </h1>\n  }}}\n  }}}\n}}}\n{{{#!td valign=\"top\"  style=\"border: 0px\"\n\n{{{\n#!html\n<h1 style=\"text-align: right; color: blue\">HTML Test</h1>\n}}}\n\n}}}\n|--------------------------------------------------------\n{{{#!td align=\"center\" colspan=2 style=\"border: 0px; font-size: 90%\"\n\n   [=#Processors-example-highlight Example 2:] Code Highlighting\n\n}}}\n|--------------------------------------------------------\n{{{#!td style=\"border: 0px\"\n  {{{\n  {{{\n  #!python\n  class Test:\n  \n      def __init__(self):\n          print \"Hello World\"\n  if __name__ == \'__main__\':\n     Test()\n  }}}\n  }}}\n}}}\n{{{\n#!td valign=\"top\"  style=\"border: 0px\"\n\n{{{\n#!python\nclass Test:\n    def __init__(self):\n        print \"Hello World\"\nif __name__ == \'__main__\':\n   Test()\n}}}\n\n}}}\n|--------------------------------------------------------\n{{{#!td align=\"center\" colspan=2 style=\"border: 0px; font-size: 90%\"\n\n       [=#Processors-example-tables Example 3:] Complex Tables\n\n}}}\n|--------------------------------------------------------\n{{{#!td style=\"border: 0px\"\n  {{{\n  {{{#!th rowspan=4 align=justify\n  With the `#td` and `#th` processors,\n  table cells can contain any content:\n  }}}\n  |----------------\n  {{{#!td\n    - lists\n    - embedded tables\n    - simple multiline content\n  }}}\n  |----------------\n  {{{#!td\n  As processors can be easily nested, \n  so can be tables:\n    {{{#!th\n    Example:\n    }}}\n    {{{#!td style=\"background: #eef\"\n    || must be at the third level now... ||\n    }}}\n  }}}\n  |----------------\n  {{{#!td\n  Even when you don\'t have complex markup,\n  this form of table cells can be convenient\n  to write content on multiple lines.\n  }}}\n  }}}\n}}}\n{{{\n#!td  valign=\"top\"  style=\"border: 0px\"\n\n  {{{#!th rowspan=4 align=justify\n  With the `#td` and `#th` processors,\n  table cells can contain any content:\n  }}}\n  |----------------\n  {{{#!td\n    - lists\n    - embedded tables\n    - simple multiline content\n  }}}\n  |----------------\n  {{{#!td\n  As processors can be easily nested, \n  so can be tables:\n    {{{#!th\n    Example:\n    }}}\n    {{{#!td style=\"background: #eef\"\n    || must be at the third level now... ||\n    }}}\n  }}}\n  |----------------\n  {{{#!td\n  Even when you don\'t have complex markup,\n  this form of table cells can be convenient\n  to write content on multiple lines.\n  }}}\n\n}}}\n\nSee WikiProcessors for more information.\n\n\n== Comments ==\n\nComments can be added to the plain text. These will not be rendered and will not display in any other format than plain text.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  Nothing to\n  {{{\n  #!comment\n  Your comment for editors here\n  }}}\n  see ;-)\n  }}}\n}}}\n{{{#!td\n  Nothing to\n  {{{\n  #!comment\n  Your comment for editors here\n  }}}\n  see ;-)\n}}}\n\n== Miscellaneous ==\n\nAn horizontal line can be used to separated different parts of your page:\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  Four or more dashes will be replaced \n  by an horizontal line (<HR>)\n  ----\n  See?\n  }}}\n}}}\n{{{#!td\nFour or more dashes will be replaced\nby an horizontal line (<HR>)\n----\nSee?\n}}}\n|----------------------------------\n{{{#!td\n  {{{\n  \"macro\" style [[br]] line break\n  }}}\n}}}\n{{{#!td\n\"macro\" style [[br]] line break\n}}}\n|----------------------------------\n{{{#!td\n  {{{\n  !WikiCreole style \\\\ line\\\\break\n  }}}\n}}}\n{{{#!td\n!WikiCreole style \\\\ line\\\\break\n}}}\n\n',NULL,NULL),('WikiHtml',1,1291894092000000,'trac','127.0.0.1','= Using HTML in Wiki Text =\n\nTrac supports inserting HTML into any wiki context, accomplished using the HTML [wiki:WikiProcessors WikiProcessor].\n\nHTML support is built-in, and does not require installing any additional packages.\n\n== How to Use HTML ==\nTo inform the wiki engine that a block of text should be treated as HTML, use the \'\'html\'\' processor. \n\nThis example should explain:\n{{{\n#!html\n<pre class=\"wiki\">{{{\n#!html\n&lt;h1 style=\"text-align: right; color: blue\"&gt;HTML Test&lt;/h1&gt;\n}}}</pre>\n}}}\n\nResults in:\n{{{\n#!html\n<h1 style=\"text-align: right; color: blue\">HTML Test</h1>\n}}}\n\nNote that Trac sanitizes your HTML code before displaying it. That means that if you try to use potentially dangerous constructs such as Javascript event handlers, those will be removed from the output. \n\nSince 0.11, the filtering is done by Genshi, and as such, the produced output will be a well-formed fragment of HTML. In other words, this mean that you can no longer use two HTML blocks, one for opening a <div>, the second for closing it, in order to wrap arbitrary wiki text.\nThe new way to wrap any wiki content inside a <div> is to use the \'\'div\'\' Wiki  processor:\n\n{{{\n{{{\n#!div class=important style=\"border: 2pt solid; text-align: center\"\nThis is the \'\'only\'\' way to go in Trac 0.11\n}}}\n}}}\n\nResults in:\n{{{\n#!div class=important style=\"border: 2pt solid; text-align: center\"\nThis is the \'\'only\'\' way to go in Trac 0.11\n}}}\n\nNote that if you don\'t specify a CSS class, the `wikipage` class will be added, so that the special layout of headers is respected in the <div>. If you specify explicitly the padding property, you have to take this into account (tip: [http://getfirebug.com/ get FireBug]!).\n\nFor spans, you should rather use the Macro call syntax:\n{{{\n Hello [[span(\'\'WORLD\'\' (click [#world-anchor here]), style=color: green; font-size: 120%, id=world-anchor)]]!\n}}}\n\nResults in:\n Hello [[span(\'\'WORLD\'\' (click [#world-anchor here]), style=color: green; font-size: 120%, id=world-anchor)]]!\n\n\n== Images ==\nIf you want display an image inline, append the following: \'\'\'?format=raw\'\'\' after the file name.  For example, to display the Trac logo inline, use this syntax:\n\n{{{\n <img src=\"http://www.edgewall.org/gfx/trac_logo.png?format=raw\" />\n}}}\n\n{{{\n#!html\n<img src=\"http://www.edgewall.org/gfx/trac_logo.png?format=raw\" />\n}}}\n\n\n\n== More Information ==\n\n * http://www.w3.org/ -- World Wide Web Consortium\n * http://www.w3.org/MarkUp/ -- HTML Markup Home Page\n\n----\nSee also:  WikiProcessors, WikiFormatting, WikiRestructuredText',NULL,NULL),('WikiHtml',2,1397068026248714,'trac','127.0.0.1','= Using HTML in Wiki Text =\n\nTrac supports inserting HTML into any wiki context, accomplished using the `#!html` [wiki:WikiProcessors WikiProcessor]. \n\nHowever a constraint is that this HTML has to be well-formed.\nIn particular you can\'t insert a start tag in an `#!html` block,\nresume normal wiki text and insert the corresponding end tag in a \nsecond `#!html` block. \n\nFortunately, for creating styled <div>s, <span>s  or even complex tables\ncontaining arbitrary Wiki text, there\'s a powerful alternative: use of\ndedicated `#!div`, `#!span` and `#!table`, `#!tr`, `#!td` and `#!th` blocks.\n\nThose Wiki processors are built-in, and does not require installing any additional packages.\n\n== How to use `#!html` == #HowtoUseHTML\nTo inform the wiki engine that a block of text should be treated as HTML, use the \'\'html\'\' processor. \n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  {{{\n  #!html\n  <h1 style=\"text-align: right; color: blue\">HTML Test</h1>\n  }}}\n  }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\n  {{{\n  #!html\n  <h1 style=\"text-align: right; color: blue\">HTML Test</h1>\n  }}}\n}}}\n\nNote that Trac sanitizes your HTML code before displaying it. That means that if you try to use potentially dangerous constructs such as Javascript event handlers, those will be removed from the output. \n\nSince 0.11, the filtering is done by Genshi, and as such, the produced output will be a well-formed fragment of HTML. As noted above in the introduction, this mean that you can no longer use two HTML blocks, one for opening a <div>, the second for closing it, in order to wrap arbitrary wiki text.\nThe new way to wrap any wiki content inside a <div> is to use the `#!div` Wiki  processor.\n\n== How to use `#!div` and `#!span` == #HowtoUseDivSpan\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  {{{\n  #!div class=\"important\" \n  **important** is a predefined class.\n  }}}\n  }}}\n  {{{\n  {{{\n  #!div style=\"border: 1pt dotted; margin: 1em\"\n  **wikipage** is another predefined class that will \n  be used when no class is specified.\n  }}}\n  }}}\n  {{{\n  {{{\n  #!div class=\"compact\" style=\"border: 1pt dotted; margin: 1em\"\n  **compact** is another predefined class reducing\n  the padding within the `<div>` to a minimum.\n  }}}\n  }}}\n  {{{\n  {{{\n  #!div class=\"wikipage compact\" style=\"border: 1pt dotted\"\n  Classes can be combined (here **wikipage** and **compact**)\n  which results in this case in reduced //vertical// \n  padding but there\'s still some horizontal space for coping\n  with headings.\n  }}}\n  }}}\n  {{{\n  {{{\n  #!div class=\"\" style=\"border: 1pt dotted; margin: 1em\"\n  Explicitly specifying no classes is //not// the same\n  as specifying no class attribute, as this will remove\n  the //wikipage// default class.\n  }}}\n  }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\n\n  {{{\n  #!div class=\"important\" \n  **important** is a predefined class.\n  }}}\n\n  {{{\n  #!div style=\"border: 1pt dotted; margin: 1em\"\n  **wikipage** is another predefined class that will \n  be used when no class is specified.\n  }}}\n\n  {{{\n  #!div class=\"compact\" style=\"border: 1pt dotted; margin: 1em\"\n  **compact** is another predefined class reducing\n  the padding within the `<div>` to a minimum.\n  }}}\n\n  {{{\n  #!div class=\"wikipage compact\" style=\"border: 1pt dotted\"\n  Classes can be combined (here **wikipage** and **compact**)\n  which results in this case in reduced //vertical// \n  padding but there\'s still some horizontal space for coping\n  with headings.\n  }}}\n\n  {{{\n  #!div class=\"\" style=\"border: 1pt dotted; margin: 1em\"\n  Explicitly specifying no classes is //not// the same\n  as specifying no class attribute, as this will remove\n  the //wikipage// default class.\n  }}}\n\n}}}\n\nNote that the contents of a `#!div` block are contained in one or more paragraphs, which have a non-zero top and bottom margin. This leads to the top and bottom padding in the example above. To remove the top and bottom margin of the contents, add the `compact` class to the `#!div`. Another predefined class besides `wikipage` and `compact` is `important`, which can be used to make a paragraph stand out. Extra CSS classes can be defined via the `site/style.css` file for example, see TracInterfaceCustomization#SiteAppearance.\n\nFor spans, you should rather use the Macro call syntax:\n||= Wiki Markup =||\n{{{#!td\n  {{{\n  Hello \n  [[span(\'\'WORLD\'\' (click [#anchor here]), style=color: green; font-size: 120%, id=anchor)]]!\n  }}}\n}}}\n|---------------------------------------------------------------------------------\n||= Display =||\n{{{#!td style=\"padding-left: 2em\"\n  Hello\n  [[span(\'\'WORLD\'\' (click [#anchor here]), style=color: green; font-size: 120%, id=anchor)]]!\n}}}\n\n== How to use `#!td` and other table related processors == #Tables\n\n`#!td` or `#!th` processors are actually the main ones, for creating table data and header cells, respectively. The other processors `#!table` and `#!tr` are not required for introducing a table structure, as `#!td` and `#!th` will do this automatically. The `|-` row separator can be used to start a new row when needed, but some may prefer to use a `#!tr` block for that, as this introduces a more formal grouping and offers the possibility to use an extra level of indentation. The main purpose of the `#!table` and `#!tr` is to give the possibility to specify HTML attributes, like \'\'style\'\' or \'\'valign\'\' to these elements.\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n {{{\n Simple 2x2 table with rich content:\n {{{#!th align=left\n  - Left\n  - Header\n }}}\n {{{#!th align=left\n  - Right\n  - Header\n }}}\n |----------------------------------\n {{{#!td style=\"background: #ffd\"\n  - Left\n  - Content\n }}}\n {{{#!td style=\"vertical-align: top\"\n !RightContent\n }}}\n |----------------------------------\n || ... and this can be mixed||\\\n ||with pipe-based cells ||\n {{{#!td colspan=2\n Pick the style the more appropriate\n to your content\n \n See WikiFormatting#Tables for details\n on the pipe-based table syntax.\n }}}\n \n If one needs to add some \n attributes to the table itself...\n \n {{{\n #!table style=\"border:none;text-align:center;margin:auto\"\n   {{{#!tr ====================================\n     {{{#!th style=\"border: none\"\n     Left header\n     }}}\n     {{{#!th style=\"border: none\"\n     Right header\n     }}}\n   }}}\n   {{{#!tr ==== style=\"border: 1px dotted grey\"\n     {{{#!td style=\"border: none\"\n     1.1\n     }}}\n     {{{#!td style=\"border: none\"\n     1.2\n     }}}\n   }}}\n   {{{#!tr ====================================\n     {{{#!td style=\"border: none\"\n     2.1\n     }}}\n     {{{#!td\n     2.2\n     }}}\n   }}}\n }}}\n\n\n }}}\n}}}\n{{{#!td valign=top\nSimple 2x2 table with rich content:\n{{{#!th align=left\n - Left\n - Header\n}}}\n{{{#!th align=left\n - Right\n - Header\n}}}\n|----------------------------------\n{{{#!td style=\"background: #ffd\"\n - Left\n - Content\n}}}\n{{{#!td style=\"vertical-align: top\"\n!RightContent\n}}}\n|----------------------------------\n|| ... and this can be mixed||\\\n||with pipe-based cells ||\n{{{#!td colspan=2\nPick the style the more appropriate\nto your content\n\nSee WikiFormatting#Tables for details\non the pipe-based table syntax.\n}}}\n\nIf one needs to add some \nattributes to the table itself...\n\n{{{\n#!table style=\"border:none;text-align:center;margin:auto\"\n  {{{#!tr ====================================\n    {{{#!th style=\"border: none\"\n    Left header\n    }}}\n    {{{#!th style=\"border: none\"\n    Right header\n    }}}\n  }}}\n  {{{#!tr ==== style=\"border: 1px dotted grey\"\n    {{{#!td style=\"border: none\"\n    1.1\n    }}}\n    {{{#!td style=\"border: none\"\n    1.2\n    }}}\n  }}}\n  {{{#!tr ====================================\n    {{{#!td style=\"border: none\"\n    2.1\n    }}}\n    {{{#!td\n    2.2\n    }}}\n  }}}\n}}}\n}}}\n\nNote that by default tables are assigned the \"wiki\" CSS class, which gives a distinctive look to the header cells and a default border to the table and cells (as can be seen for the tables on this page). By removing this class (`#!table class=\"\"`), one regains complete control on the table presentation. In particular, neither the table, the rows nor the cells will have a border, so this is a more effective way to get such an effect than having to specify a `style=\"border: no\"` parameter everywhere. \n\n{{{#!table class=\"\"\n||= Wiki Markup =||= Display =||\n {{{#!td\n  {{{\n  {{{#!table class=\"\"\n  ||  0||  1||  2||\n  || 10|| 20|| 30||\n  || 11|| 22|| 33||\n  ||||||=  numbers  =||\n  }}}\n  }}}\n }}}\n {{{#!td\n  {{{#!table class=\"\"\n  ||  0||  1||  2||\n  || 10|| 20|| 30||\n  || 11|| 22|| 33||\n  ||||||=  numbers  =||\n  }}}\n }}}\n}}}\n\nOther classes can be specified as alternatives (remember that you can define your own in [TracInterfaceCustomization#SiteAppearance site/style.css]).\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  {{{#!table class=\"listing\"\n  ||  0||  1||  2||\n  || 10|| 20|| 30||\n  || 11|| 22|| 33||\n  ||||||=  numbers  =||\n  }}}\n  }}}\n}}}\n{{{#!td\n  {{{#!table class=\"listing\"\n  ||  0||  1||  2||\n  || 10|| 20|| 30||\n  || 11|| 22|| 33||\n  ||||||=  numbers  =||\n  }}}\n}}}\n\n\n== HTML comments ==\nHTML comments are stripped from the output of the `html` processor. To add an HTML comment to a wiki page, use the `htmlcomment` processor (available since 0.12). For example, the following code block:\n||= Wiki Markup =||\n{{{#!td\n  {{{\n  {{{\n  #!htmlcomment\n  This block is translated to an HTML comment.\n  It can contain <tags> and &entities; that will not be escaped in the output.\n  }}}\n  }}}\n}}}\n|---------------------------------------------------------------------------------\n||= Display =||\n{{{#!td\n  {{{\n  <!--\n  This block is translated to an HTML comment.\n  It can contain <tags> and &entities; that will not be escaped in the output.\n  -->\n  }}}\n}}}\n\nPlease note that the character sequence \"`--`\" is not allowed in HTML comments, and will generate a rendering error.\n\n\n== More Information ==\n\n * http://www.w3.org/ -- World Wide Web Consortium\n * http://www.w3.org/MarkUp/ -- HTML Markup Home Page\n\n----\nSee also:  WikiProcessors, WikiFormatting, WikiRestructuredText\n',NULL,NULL),('WikiMacros',1,1291894092000000,'trac','127.0.0.1','= Trac Macros =\n\n[[PageOutline]]\n\nTrac macros are plugins to extend the Trac engine with custom \'functions\' written in Python. A macro inserts dynamic HTML data in any context supporting WikiFormatting.\n\nAnother kind of macros are WikiProcessors. They typically deal with alternate markup formats and representation of larger blocks of information (like source code highlighting).\n\n== Using Macros ==\nMacro calls are enclosed in two \'\'square brackets\'\'. Like Python functions, macros can also have arguments, a comma separated list within parentheses.\n\nTrac macros can also be written as TracPlugins. This gives them some capabilities that macros do not have, such as being able to directly access the HTTP request.\n\n=== Example ===\n\nA list of 3 most recently changed wiki pages starting with \'Trac\':\n\n{{{\n [[RecentChanges(Trac,3)]]\n}}}\n\nDisplay:\n [[RecentChanges(Trac,3)]]\n\n== Available Macros ==\n\n\'\'Note that the following list will only contain the macro documentation if you\'ve not enabled `-OO` optimizations, or not set the `PythonOptimize` option for [wiki:TracModPython mod_python].\'\'\n\n[[MacroList]]\n\n== Macros from around the world ==\n\nThe [http://trac-hacks.org/ Trac Hacks] site provides a wide collection of macros and other Trac [TracPlugins plugins] contributed by the Trac community. If you\'re looking for new macros, or have written one that you\'d like to share with the world, please don\'t hesitate to visit that site.\n\n== Developing Custom Macros ==\nMacros, like Trac itself, are written in the [http://python.org/ Python programming language].\n\nFor more information about developing macros, see the [trac:TracDev development resources] on the main project site.\n\n\n== Implementation ==\n\nHere are 2 simple examples showing how to create a Macro with Trac 0.11. \n\nAlso, have a look at [trac:source:tags/trac-0.11/sample-plugins/Timestamp.py Timestamp.py] for an example that shows the difference between old style and new style macros and at the [trac:source:tags/trac-0.11/wiki-macros/README macros/README] which provides a little more insight about the transition.\n\n=== Macro without arguments ===\nIt should be saved as `TimeStamp.py` (in the TracEnvironment\'s `plugins/` directory) as Trac will use the module name as the Macro name.\n{{{\n#!python\nfrom datetime import datetime\n# Note: since Trac 0.11, datetime objects are used internally\n\nfrom genshi.builder import tag\n\nfrom trac.util.datefmt import format_datetime, utc\nfrom trac.wiki.macros import WikiMacroBase\n\nclass TimeStampMacro(WikiMacroBase):\n    \"\"\"Inserts the current time (in seconds) into the wiki page.\"\"\"\n\n    revision = \"$Rev$\"\n    url = \"$URL$\"\n\n    def expand_macro(self, formatter, name, args):\n        t = datetime.now(utc)\n        return tag.b(format_datetime(t, \'%c\'))\n}}}\n\n=== Macro with arguments ===\nIt should be saved as `HelloWorld.py` (in the TracEnvironment\'s `plugins/` directory) as Trac will use the module name as the Macro name.\n{{{\n#!python\nfrom trac.wiki.macros import WikiMacroBase\n\nclass HelloWorldMacro(WikiMacroBase):\n    \"\"\"Simple HelloWorld macro.\n\n    Note that the name of the class is meaningful:\n     - it must end with \"Macro\"\n     - what comes before \"Macro\" ends up being the macro name\n\n    The documentation of the class (i.e. what you\'re reading)\n    will become the documentation of the macro, as shown by\n    the !MacroList macro (usually used in the WikiMacros page).\n    \"\"\"\n\n    revision = \"$Rev$\"\n    url = \"$URL$\"\n\n    def expand_macro(self, formatter, name, args):\n        \"\"\"Return some output that will be displayed in the Wiki content.\n\n        `name` is the actual name of the macro (no surprise, here it\'ll be\n        `\'HelloWorld\'`),\n        `args` is the text enclosed in parenthesis at the call of the macro.\n          Note that if there are \'\'no\'\' parenthesis (like in, e.g.\n          [[HelloWorld]]), then `args` is `None`.\n        \"\"\"\n        return \'Hello World, args = \' + unicode(args)\n    \n    # Note that there\'s no need to HTML escape the returned data,\n    # as the template engine (Genshi) will do it for us.\n}}}\n\n\n=== {{{expand_macro}}} details ===\n{{{expand_macro}}} should return either a simple Python string which will be interpreted as HTML, or preferably a Markup object (use {{{from trac.util.html import Markup}}}).  {{{Markup(string)}}} just annotates the string so the renderer will render the HTML string as-is with no escaping. You will also need to import Formatter using {{{from trac.wiki import Formatter}}}.\n\nIf your macro creates wiki markup instead of HTML, you can convert it to HTML like this:\n\n{{{\n#!python\n  text = \"whatever wiki markup you want, even containing other macros\"\n  # Convert Wiki markup to HTML, new style\n  out = StringIO()\n  Formatter(self.env, formatter.context).format(text, out)\n  return Markup(out.getvalue())\n}}}\n',NULL,NULL),('WikiMacros',2,1397068026268255,'trac','127.0.0.1','= Trac Macros =\n\n[[PageOutline]]\n\nTrac macros are plugins to extend the Trac engine with custom \'functions\' written in Python. A macro inserts dynamic HTML data in any context supporting WikiFormatting. Its syntax is `[[macro-name(optional-arguments)]]`.\n\nThe WikiProcessors are another kind of macros. They typically deal with alternate markup formats and transformation of larger \"blocks\" of information (like source code highlighting). They are used for processing the multiline `{{{#!wiki-processor-name ... }}}` blocks.\n\n== Using Macros ==\n\nMacro calls are enclosed in two \'\'square brackets\'\'. Like Python functions, macros can also have arguments, a comma separated list within parentheses.\n\n=== Getting Detailed Help ===\nThe list of available macros and the full help can be obtained using the !MacroList macro, as seen [#AvailableMacros below].\n\nA brief list can be obtained via `[[MacroList(*)]]` or `[[?]]`.\n\nDetailed help on a specific macro can be obtained by passing it as an argument to !MacroList, e.g. `[[MacroList(MacroList)]]`, or, more conveniently, by appending a question mark (`?`) to the macro\'s name, like in `[[MacroList?]]`.\n\n\n\n=== Example ===\n\nA list of 3 most recently changed wiki pages starting with \'Trac\':\n\n||= Wiki Markup =||= Display =||\n{{{#!td\n  {{{\n  [[RecentChanges(Trac,3)]]\n  }}}\n}}}\n{{{#!td style=\"padding-left: 2em;\"\n[[RecentChanges(Trac,3)]]\n}}}\n|-----------------------------------\n{{{#!td\n  {{{\n  [[RecentChanges?(Trac,3)]]\n  }}}\n}}}\n{{{#!td style=\"padding-left: 2em;\"\n[[RecentChanges?(Trac,3)]]\n}}}\n|-----------------------------------\n{{{#!td\n  {{{\n  [[?]]\n  }}}\n}}}\n{{{#!td style=\"padding-left: 2em\"\n{{{#!html \n<div style=\"font-size: 80%\" class=\"trac-macrolist\">\n<h3><code>[[Image]]</code></h3>Embed an image in wiki-formatted text.\n\nThe first argument is the file …\n<h3><code>[[InterTrac]]</code></h3>Provide a list of known <a class=\"wiki\" href=\"/wiki/InterTrac\">InterTrac</a> prefixes.\n<h3><code>[[InterWiki]]</code></h3>Provide a description list for the known <a class=\"wiki\" href=\"/wiki/InterWiki\">InterWiki</a> prefixes.\n<h3><code>[[KnownMimeTypes]]</code></h3>List all known mime-types which can be used as <a class=\"wiki\" href=\"/wiki/WikiProcessors\">WikiProcessors</a>.\nCan be …</div>\n}}}\netc.\n}}}\n\n== Available Macros ==\n\n\'\'Note that the following list will only contain the macro documentation if you\'ve not enabled `-OO` optimizations, or not set the `PythonOptimize` option for [wiki:TracModPython mod_python].\'\'\n\n[[MacroList]]\n\n== Macros from around the world ==\n\nThe [http://trac-hacks.org/ Trac Hacks] site provides a wide collection of macros and other Trac [TracPlugins plugins] contributed by the Trac community. If you\'re looking for new macros, or have written one that you\'d like to share with the world, please don\'t hesitate to visit that site.\n\n== Developing Custom Macros ==\nMacros, like Trac itself, are written in the [http://python.org/ Python programming language] and are developed as part of TracPlugins.\n\nFor more information about developing macros, see the [trac:TracDev development resources] on the main project site.\n\n\nHere are 2 simple examples showing how to create a Macro with Trac 0.11. \n\nAlso, have a look at [trac:source:tags/trac-0.11/sample-plugins/Timestamp.py Timestamp.py] for an example that shows the difference between old style and new style macros and at the [trac:source:tags/trac-0.11/wiki-macros/README macros/README] which provides a little more insight about the transition.\n\n=== Macro without arguments ===\nTo test the following code, you should saved it in a `timestamp_sample.py` file located in the TracEnvironment\'s `plugins/` directory.\n{{{\n#!python\nfrom datetime import datetime\n# Note: since Trac 0.11, datetime objects are used internally\n\nfrom genshi.builder import tag\n\nfrom trac.util.datefmt import format_datetime, utc\nfrom trac.wiki.macros import WikiMacroBase\n\nclass TimeStampMacro(WikiMacroBase):\n    \"\"\"Inserts the current time (in seconds) into the wiki page.\"\"\"\n\n    revision = \"$Rev$\"\n    url = \"$URL$\"\n\n    def expand_macro(self, formatter, name, text):\n        t = datetime.now(utc)\n        return tag.b(format_datetime(t, \'%c\'))\n}}}\n\n=== Macro with arguments ===\nTo test the following code, you should saved it in a `helloworld_sample.py` file located in the TracEnvironment\'s `plugins/` directory.\n{{{\n#!python\nfrom genshi.core import Markup\n\nfrom trac.wiki.macros import WikiMacroBase\n\nclass HelloWorldMacro(WikiMacroBase):\n    \"\"\"Simple HelloWorld macro.\n\n    Note that the name of the class is meaningful:\n     - it must end with \"Macro\"\n     - what comes before \"Macro\" ends up being the macro name\n\n    The documentation of the class (i.e. what you\'re reading)\n    will become the documentation of the macro, as shown by\n    the !MacroList macro (usually used in the WikiMacros page).\n    \"\"\"\n\n    revision = \"$Rev$\"\n    url = \"$URL$\"\n\n    def expand_macro(self, formatter, name, text, args):\n        \"\"\"Return some output that will be displayed in the Wiki content.\n\n        `name` is the actual name of the macro (no surprise, here it\'ll be\n        `\'HelloWorld\'`),\n        `text` is the text enclosed in parenthesis at the call of the macro.\n          Note that if there are \'\'no\'\' parenthesis (like in, e.g.\n          [[HelloWorld]]), then `text` is `None`.\n        `args` are the arguments passed when HelloWorld is called using a\n        `#!HelloWorld` code block.\n        \"\"\"\n        return \'Hello World, text = %s, args = %s\' % \\\n            (Markup.escape(text), Markup.escape(repr(args)))\n\n}}}\n\nNote that `expand_macro` optionally takes a 4^th^ parameter \'\'`args`\'\'. When the macro is called as a [WikiProcessors WikiProcessor], it\'s also possible to pass `key=value` [WikiProcessors#UsingProcessors processor parameters]. If given, those are stored in a dictionary and passed in this extra `args` parameter. On the contrary, when called as a macro, `args` is  `None`. (\'\'since 0.12\'\').\n\nFor example, when writing:\n{{{\n{{{#!HelloWorld style=\"polite\" -silent verbose\n<Hello World!>\n}}}\n\n{{{#!HelloWorld\n<Hello World!>\n}}}\n\n[[HelloWorld(<Hello World!>)]]\n}}}\nOne should get:\n{{{\nHello World, text = <Hello World!> , args = {\'style\': u\'polite\', \'silent\': False, \'verbose\': True}\nHello World, text = <Hello World!> , args = {}\nHello World, text = <Hello World!> , args = None\n}}}\n\nNote that the return value of `expand_macro` is \'\'\'not\'\'\' HTML escaped. Depending on the expected result, you should escape it by yourself (using `return Markup.escape(result)`) or, if this is indeed HTML, wrap it in a Markup object (`return Markup(result)`) with `Markup` coming from Genshi, (`from genshi.core import Markup`).  \n\nYou can also recursively use a wiki Formatter (`from trac.wiki import Formatter`) to process the `text` as wiki markup, for example by doing:\n\n{{{\n#!python\nfrom genshi.core import Markup\nfrom trac.wiki.macros import WikiMacroBase\nfrom trac.wiki import Formatter\nimport StringIO\n\nclass HelloWorldMacro(WikiMacroBase):\n	def expand_macro(self, formatter, name, text, args):\n		text = \"whatever \'\'\'wiki\'\'\' markup you want, even containing other macros\"\n		# Convert Wiki markup to HTML, new style\n		out = StringIO.StringIO()\n		Formatter(self.env, formatter.context).format(text, out)\n		return Markup(out.getvalue())\n}}}\n',NULL,NULL),('WikiNewPage',1,1291894092000000,'trac','127.0.0.1','= Steps to Add a New Wiki Page =\n[[TracGuideToc]]\n\n 1. Choose a name for your new page. See WikiPageNames for naming conventions.\n 2. Edit an existing page (or any other resources that support WikiFormatting and add a [TracLinks link] to your new page. Save your changes.\n 3. Follow the link you created to take you to the new page. Trac will display a \"describe !PageName here\" message.\n 4. Click the \"Edit this page\" button to edit and add content to your new page. Save your changes.\n 5. All done. Your new page is published.\n\nYou can skip the second step by entering the CamelCase name of the page in the quick-search field at the top of the page. But note that the page will effectively be \"orphaned\" unless you link to it from somewhere else.\n----\nSee also: TracWiki, PageTemplates, WikiFormatting, TracLinks, WikiDeletePage\n',NULL,NULL),('WikiNewPage',2,1397068026241695,'trac','127.0.0.1','= Steps to Add a New Wiki Page =\n[[TracGuideToc]]\n\nNote: make sure you actually have the rights to edit wiki pages. If you don\'t see the **Edit this page** button, read the information relative to the editing policy for your Trac installation (usually on the front page WikiStart), or contact your local Trac administrator.\n\n 1. Choose a name for your new page. See WikiPageNames for naming conventions.\n 2. Edit an existing page (or any other resources that support WikiFormatting and add a [TracLinks link] to your new page. Save your changes.\n 3. Follow the link you created to take you to the new page. Trac will display a \"describe !PageName here\" message.\n 4. Click the \"Edit this page\" button to edit and add content to your new page. Save your changes.\n 5. All done. Your new page is published.\n\nYou can skip the second step by entering the CamelCase name of the page in the quick-search field at the top of the page. But note that the page will effectively be \"orphaned\" unless you link to it from somewhere else.\n\n== Rename a page #renaming\n\nWhile picking up good WikiPageNames is important, you can always change your mind\nand rename the page later.\n\nYou\'ll need to ask for the WIKI_RENAME permission in order to be allowed to do this.\nWhen renaming a page, you\'ll be offered the possibility to create a redirection page, so that links pointing to the old location will not be left dangling.\n\n----\nSee also: TracWiki, PageTemplates, WikiFormatting, TracLinks, WikiDeletePage\n',NULL,NULL),('WikiPageNames',1,1291894092000000,'trac','127.0.0.1','= Wiki Page Names =\n[[TracGuideToc]]\n\nWiki page names commonly use the CamelCase convention. Within wiki text, any word in CamelCase automatically becomes a hyperlink to the wiki page with that name.\n\nCamelCase page names must follow these rules:\n\n 1. The name must consist of \'\'\'alphabetic characters only\'\'\'. No digits, spaces, punctuation, or underscores are allowed.\n 2. A name must have at least two capital letters.\n 3. The first character must be capitalized.\n 4. Every capital letter must be followed by one or more lower-case letters. \n 5. The use of slash ( / ) is permitted in page names (possibly representing a hierarchy).\n\nIf you want to create a wiki page that doesn\'t follow CamelCase rules you can use the following syntax:\n{{{\n * [wiki:Wiki_page], [wiki:ISO9000]\n * [wiki:\"Space Matters\"] that page name embeds space characters\n * or simply: [\"WikiPageName\"]s (!MoinMoin\'s internal free links style)\n}}}\n\nThis will be rendered as:\n * [wiki:Wiki_page], [wiki:ISO9000]\n * [wiki:\"Space Matters\"] that page name embeds space characters\n * or simply: [\"WikiPageName\"]s (!MoinMoin\'s internal free links style)\n\nStarting with Trac 0.11, it\'s also possible to link to a specific \'\'version\'\' of a Wiki page, as you would do for a specific version of a file, for example: WikiStart@1.\n\nSee also TracLinks#QuotingspaceinTracLinks.\n\nFinally, and as exemplified in the line above, one can also append an anchor to a Wiki page name, in order to link to a specific section within that page. The anchor can easily be seen by hovering the mouse over a section heading, then clicking on the [[html(&para;)]] sign that appears at its end. The anchor is usually generated automatically, but it\'s also possible to specify it explicitly: see WikiFormatting#using-explicit-id-in-heading.\n----\nSee also: WikiNewPage, WikiFormatting, TracWiki, TracLinks',NULL,NULL),('WikiPageNames',2,1397068026251872,'trac','127.0.0.1','= Wiki Page Names =\n[[TracGuideToc]]\n\nWiki page names commonly use the CamelCase convention. Within wiki text, any word in CamelCase automatically becomes a hyperlink to the wiki page with that name.\n\nCamelCase page names must follow these rules:\n\n 1. The name must consist of \'\'\'alphabetic characters only\'\'\'. No digits, spaces, punctuation, or underscores are allowed.\n 2. A name must have at least two capital letters.\n 3. The first character must be capitalized.\n 4. Every capital letter must be followed by one or more lower-case letters. \n 5. The use of slash ( / ) is permitted in page names (possibly representing a hierarchy).\n\nIf you want to create a wiki page that doesn\'t follow CamelCase rules you can use the following syntax:\n{{{\n * [wiki:Wiki_page], [wiki:ISO9000],\n   and with a label: [wiki:ISO9000 ISO 9000 standard]\n * [wiki:\"Space Matters\"]\n   and with a label: [wiki:\"Space Matters\" all about white space]\n * or simply: [\"WikiPageName\"]s\n * even better, the new [[WikiCreole link style]]\n   and with a label: [[WikiCreole link style|WikiCreole style links]]\n}}}\n\nThis will be rendered as:\n * [wiki:Wiki_page], [wiki:ISO9000],\n   and with a label: [wiki:ISO9000 ISO 9000 standard]\n * [wiki:\"Space Matters\"] \'\'(that page name embeds space characters)\'\'\n   and with a label: [wiki:\"Space Matters\" all about white space]\n * or simply: [\"WikiPageName\"]s \'\'(old !MoinMoin\'s internal free links style)\'\'\n * even better, the new [[WikiCreole link style]]\n   and with a label: [[WikiCreole link style|WikiCreole style links]]\n   \'\'(since 0.12, also now adopted by !MoinMoin)\'\'\n\n\nStarting with Trac 0.11, it\'s also possible to link to a specific \'\'version\'\' of a Wiki page, as you would do for a specific version of a file, for example: WikiStart@1.\n\nYou can also prevent a CamelCase name to be interpreted as a TracLinks, by quoting it. See TracLinks#EscapingLinks.\n\nAs visible in the example above, one can also append an anchor to a Wiki page name, in order to link to a specific section within that page. The anchor can easily be seen by hovering the mouse over a section heading, then clicking on the [[html(&para;)]] sign that appears at its end. The anchor is usually generated automatically, but it\'s also possible to specify it explicitly: see WikiFormatting#using-explicit-id-in-heading.\n----\nSee also: WikiNewPage, WikiFormatting, TracWiki, TracLinks\n',NULL,NULL),('WikiProcessors',1,1291894092000000,'trac','127.0.0.1','= Wiki Processors =\n\nProcessors are WikiMacros designed to provide alternative markup formats for the [TracWiki Wiki engine]. Processors can be thought of as \'\'macro functions to process user-edited text\'\'. \n\nThe Wiki engine uses processors to allow using [wiki:WikiRestructuredText Restructured Text], [wiki:WikiHtml raw HTML] and [http://www.textism.com/tools/textile/ textile] in any Wiki text throughout Trac.\n\n\n== Using Processors ==\n\nTo use a processor on a block of text, use a Wiki code block, selecting a processor by name using \'\'shebang notation\'\' (#!), familiar to most UNIX users from scripts.\n\n\'\'\'Example 1\'\'\' (\'\'inserting raw HTML in a wiki text\'\'):\n\n{{{\n#!html\n<pre class=\"wiki\">{{{\n#!html\n&lt;h1 style=\"color: orange\"&gt;This is raw HTML&lt;/h1&gt;\n}}}</pre>\n}}}\n\n\'\'\'Results in:\'\'\'\n{{{\n#!html\n<h1 style=\"color: orange\">This is raw HTML</h1>\n}}}\n\nNote that since 0.11, such blocks of HTML have to be self-contained, i.e. you can\'t start an HTML element in one block and close it later in a second block. Use div or span processors for achieving similar effect (see WikiHtml).\n\n----\n\n\'\'\'Example 2\'\'\' (\'\'inserting Restructured Text in wiki text\'\'):\n\n{{{\n#!html\n<pre class=\"wiki\">{{{\n#!rst\nA header\n--------\nThis is some **text** with a footnote [*]_.\n\n.. [*] This is the footnote.\n}}}</pre>\n}}}\n\n\'\'\'Results in:\'\'\'\n{{{\n#!rst\nA header\n--------\nThis is some **text** with a footnote [*]_.\n\n.. [*] This is the footnote.\n}}}\n----\n\'\'\'Example 3\'\'\' (\'\'inserting a block of C source code in wiki text\'\'):\n\n{{{\n#!html\n<pre class=\"wiki\">{{{\n#!c\nint main(int argc, char *argv[])\n{\n  printf(\"Hello World\\n\");\n  return 0;\n}\n}}}</pre>\n}}}\n\n\'\'\'Results in:\'\'\'\n{{{\n#!c\nint main(int argc, char *argv[])\n{\n  printf(\"Hello World\\n\");\n  return 0;\n}\n}}}\n\n----\n\n== Available Processors ==\nThe following processors are included in the Trac distribution:\n * \'\'\'html\'\'\' -- Insert custom HTML in a wiki page. See WikiHtml.\n * \'\'\'div\'\'\' -- Wrap an arbitrary Wiki content in a <div> element (\'\'since 0.11\'\'). See WikiHtml.\n * \'\'\'span\'\'\' -- Wrap an arbitrary Wiki content in a <span> element (\'\'since 0.11\'\'). See also WikiHtml.\n * \'\'\'rst\'\'\' -- Trac support for Restructured Text. See WikiRestructuredText.\n * \'\'\'textile\'\'\' -- Supported if [http://cheeseshop.python.org/pypi/textile Textile] is installed. See [http://www.textism.com/tools/textile/ a Textile reference].\n * \'\'\'comment\'\'\' -- Do not process the text in this section (i.e. contents exist only in the plain text - not in the rendered page).\n * \'\'\'diff\'\'\' -- Pretty print patches and diffs.\n\n=== Code Highlighting Support ===\nTrac includes processors to provide inline [wiki:TracSyntaxColoring syntax highlighting] for the following languages:\n * \'\'\'c\'\'\' -- C\n * \'\'\'cpp\'\'\' -- C++\n * \'\'\'csharp\'\'\' --- C# (\'\'use #!text/x-csharp\'\')\n * \'\'\'python\'\'\' -- Python\n * \'\'\'perl\'\'\' -- Perl\n * \'\'\'ruby\'\'\' -- Ruby\n * \'\'\'php\'\'\' -- PHP\n * \'\'\'asp\'\'\' -- ASP\n * \'\'\'java\'\'\' -- Java\n * \'\'\'js\'\'\' -- Javascript\n * \'\'\'sql\'\'\' -- SQL\n * \'\'\'xml\'\'\' -- XML\n * \'\'\'sh\'\'\' -- Bourne/Bash shell\n\n\'\'\'Note:\'\'\' \'\'Trac relies on external software packages for syntax coloring. See TracSyntaxColoring for more info.\'\'\n\nBy using the MIME type as processor, it is possible to syntax-highlight the same languages that are supported when browsing source code. For example, you can write:\n{{{\n{{{\n#!text/html\n<h1>text</h1>\n}}}\n}}}\n\nThe result will be syntax highlighted HTML code:\n{{{\n#!text/html\n<h1>text</h1>\n}}}\n\nThe same is valid for all other mime types supported.\n\n\nFor more processor macros developed and/or contributed by users, visit: \n * [trac:ProcessorBazaar]\n * [trac:MacroBazaar]\n * [th:WikiStart Trac Hacks] community site\n\n\n== Advanced Topics: Developing Processor Macros ==\nDeveloping processors is no different from Wiki macros. In fact they work the same way, only the usage syntax differs. See WikiMacros for more information.\n\n\n----\nSee also: WikiMacros, WikiHtml, WikiRestructuredText, TracSyntaxColoring, WikiFormatting, TracGuide',NULL,NULL),('WikiProcessors',2,1397068026247811,'trac','127.0.0.1','= Wiki Processors =\n\nProcessors are WikiMacros designed to provide alternative markup formats for the [TracWiki Wiki engine]. Processors can be thought of as \'\'macro functions to process user-edited text\'\'. \n\nWiki processors can be used in any Wiki text throughout Trac,\nfor various different purposes, like:\n - [#CodeHighlightingSupport syntax highlighting] or for rendering text verbatim,\n - rendering [#HTMLrelated Wiki markup inside a context], \n   like inside <div> blocks or <span> or within <td> or <th> table cells,\n - using an alternative markup syntax, like [wiki:WikiHtml raw HTML] and\n   [wiki:WikiRestructuredText Restructured Text],\n   or [http://www.textism.com/tools/textile/ textile]\n\n\n== Using Processors ==\n\nTo use a processor on a block of text, first delimit the lines using\na Wiki \'\'code block\'\':\n{{{\n{{{\nThe lines\nthat should be processed...\n}}}\n}}}\n\nImmediately after the `{{{` or on the line just below, \nadd `#!` followed by the \'\'processor name\'\'.\n\n{{{\n{{{\n#!processorname\nThe lines\nthat should be processed...\n}}}\n}}}\n\nThis is the \"shebang\" notation, familiar to most UNIX users.\n\nBesides their content, some Wiki processors can also accept \'\'parameters\'\',\nwhich are then given as `key=value` pairs after the processor name, \non the same line. If `value` has to contain space, as it\'s often the case for\nthe style parameter, a quoted string can be used (`key=\"value with space\"`).\n\nAs some processors are meant to process Wiki markup, it\'s quite possible to\n\'\'nest\'\' processor blocks.\nYou may want to indent the content of nested blocks for increased clarity,\nthis extra indentation will be ignored when processing the content.\n\n\n== Examples ==\n\n||= Wiki Markup =||= Display =||\n{{{#!td colspan=2 align=center style=\"border: none\"\n\n                __Example 1__: Inserting raw HTML\n}}}\n|-----------------------------------------------------------------\n{{{#!td style=\"border: none\"\n{{{\n{{{\n#!html\n<h1 style=\"color: grey\">This is raw HTML</h1>\n}}}\n}}}\n}}}\n{{{#!td valign=top style=\"border: none; padding-left: 2em\"\n{{{\n#!html\n<h1 style=\"color: grey\">This is raw HTML</h1>\n}}}\n}}}\n|-----------------------------------------------------------------\n{{{#!td colspan=2 align=center style=\"border: none\"\n\n     __Example 2__: Highlighted Python code in a <div> block with custom style\n}}}\n|-----------------------------------------------------------------\n{{{#!td style=\"border: none\"\n  {{{\n  {{{#!div style=\"background: #ffd; border: 3px ridge\"\n\n  This is an example of embedded \"code\" block:\n\n    {{{\n    #!python\n    def hello():\n        return \"world\"\n    }}}\n\n  }}}\n  }}}\n}}}\n{{{#!td valign=top style=\"border: none; padding: 1em\"\n  {{{#!div style=\"background: #ffd; border: 3px ridge\"\n\n  This is an example of embedded \"code\" block:\n\n    {{{\n    #!python\n    def hello():\n        return \"world\"\n    }}}\n\n  }}}\n}}}\n|-----------------------------------------------------------------\n{{{#!td colspan=2 align=center style=\"border: none\"\n\n     __Example 3__: Searching tickets from a wiki page, by keywords.\n}}}\n|-----------------------------------------------------------------\n{{{#!td style=\"border: none\"\n  {{{\n  {{{\n  #!html\n  <form action=\"/query\" method=\"get\"><div>\n  <input type=\"text\" name=\"keywords\" value=\"~\" size=\"30\"/>\n  <input type=\"submit\" value=\"Search by Keywords\"/>\n  <!-- To control what fields show up use hidden fields\n  <input type=\"hidden\" name=\"col\" value=\"id\"/>\n  <input type=\"hidden\" name=\"col\" value=\"summary\"/>\n  <input type=\"hidden\" name=\"col\" value=\"status\"/>\n  <input type=\"hidden\" name=\"col\" value=\"milestone\"/>\n  <input type=\"hidden\" name=\"col\" value=\"version\"/>\n  <input type=\"hidden\" name=\"col\" value=\"owner\"/>\n  <input type=\"hidden\" name=\"col\" value=\"priority\"/>\n  <input type=\"hidden\" name=\"col\" value=\"component\"/>\n  -->\n  </div></form>\n  }}}\n  }}}\n}}}\n{{{#!td valign=top style=\"border: none; padding: 1em\"\n  {{{\n  #!html\n  <form action=\"/query\" method=\"get\"><div>\n  <input type=\"text\" name=\"keywords\" value=\"~\" size=\"30\"/>\n  <input type=\"submit\" value=\"Search by Keywords\"/>\n  <!-- To control what fields show up use hidden fields\n  <input type=\"hidden\" name=\"col\" value=\"id\"/>\n  <input type=\"hidden\" name=\"col\" value=\"summary\"/>\n  <input type=\"hidden\" name=\"col\" value=\"status\"/>\n  <input type=\"hidden\" name=\"col\" value=\"milestone\"/>\n  <input type=\"hidden\" name=\"col\" value=\"version\"/>\n  <input type=\"hidden\" name=\"col\" value=\"owner\"/>\n  <input type=\"hidden\" name=\"col\" value=\"priority\"/>\n  <input type=\"hidden\" name=\"col\" value=\"component\"/>\n  -->\n  </div></form>\n  }}}\n}}}\n== Available Processors ==\n\nThe following processors are included in the Trac distribution:\n\n|| \'\'\'`#!default`\'\'\' || Present the text verbatim in a preformatted text block. This is the same as specifying \'\'no\'\' processor name (and no `#!`) ||\n|| \'\'\'`#!comment`\'\'\' || Do not process the text in this section (i.e. contents exist only in the plain text - not in the rendered page). ||\n|||| ||\n||||= \'\'\'HTML related\'\'\' =||\n|| \'\'\'`#!html`\'\'\' || Insert custom HTML in a wiki page. ||\n|| \'\'\'`#!htmlcomment`\'\'\' || Insert an HTML comment in a wiki page (\'\'since 0.12\'\'). ||\n|| || Note that `#!html` blocks have to be \'\'self-contained\'\', i.e. you can\'t start an HTML element in one block and close it later in a second block. Use the following processors for achieving a similar effect.  ||\n|| \'\'\'`#!div`\'\'\' || Wrap an arbitrary Wiki content inside a <div> element (\'\'since 0.11\'\'). ||\n|| \'\'\'`#!span`\'\'\' || Wrap an arbitrary Wiki content inside a <span> element (\'\'since 0.11\'\'). ||\n|| \'\'\'`#!td`\'\'\' || Wrap an arbitrary Wiki content inside a <td> element (\'\'since 0.12\'\') ||\n|| \'\'\'`#!th`\'\'\' || Wrap an arbitrary Wiki content inside a <th> element (\'\'since 0.12\'\') ||\n|| \'\'\'`#!tr`\'\'\' || Can optionally be used for wrapping `#!td` and `#!th` blocks, either for specifying row attributes of better visual grouping (\'\'since 0.12\'\') ||\n|| || See WikiHtml for example usage and more details about these processors. ||\n|||| ||\n||||= \'\'\'Other Markups\'\'\' =||\n|| \'\'\'`#!rst`\'\'\' || Trac support for Restructured Text. See WikiRestructuredText. ||\n|| \'\'\'`#!textile`\'\'\' || Supported if [http://cheeseshop.python.org/pypi/textile Textile] is installed. See [http://www.textism.com/tools/textile/ a Textile reference]. ||\n|||| ||\n||||= \'\'\'Code Highlighting Support\'\'\' =||\n|| \'\'\'`#!c`\'\'\' [[BR]] \'\'\'`#!cpp`\'\'\' (C++) [[BR]] \'\'\'`#!python`\'\'\' [[BR]] \'\'\'`#!perl`\'\'\' [[BR]] \'\'\'`#!ruby`\'\'\' [[BR]] \'\'\'`#!php`\'\'\' [[BR]] \'\'\'`#!asp`\'\'\' [[BR]] \'\'\'`#!java`\'\'\' [[BR]] \'\'\'`#!js`\'\'\' (Javascript) [[BR]] \'\'\'`#!sql`\'\'\' [[BR]] \'\'\'`#!xml`\'\'\' (XML or HTML) [[BR]] \'\'\'`#!sh`\'\'\' (!Bourne/Bash shell) [[BR]] \'\'\'etc.\'\'\' [[BR]] || Trac includes processors to provide inline syntax highlighting for source code in various languages. [[BR]] [[BR]] Trac relies on external software packages for syntax coloring, like [http://pygments.org Pygments]. [[BR]] [[BR]] See TracSyntaxColoring for information about which languages are supported and how to enable support for more languages. ||\n|||| ||\n\nUsing the MIME type as processor, it is possible to syntax-highlight the same languages that are supported when browsing source code.\n\n||||= \'\'\'MIME Type Processors\'\'\' =||\n{{{#!tr\n{{{#!td\nSome examples:\n {{{\n{{{\n#!text/html\n<h1>text</h1>\n}}}\n }}}\n}}}\n{{{#!td\nThe result will be syntax highlighted HTML code:\n {{{\n#!text/html\n<h1>text</h1>\n }}}\n\nThe same is valid for all other [TracSyntaxColoring#SyntaxColoringSupport mime types supported].\n}}}\n}}}\n{{{#!td\n {{{\n{{{\n#!diff\n--- Version 55\n+++ Version 56\n@@ -115,8 +115,9 @@\n     name=\'TracHelloWorld\', version=\'1.0\',\n     packages=find_packages(exclude=[\'*.tests*\']),\n-    entry_points = \"\"\"\n-        [trac.plugins]\n-        helloworld = myplugs.helloworld\n-    \"\"\",\n+    entry_points = {\n+        \'trac.plugins\': [\n+            \'helloworld = myplugs.helloworld\',\n+        ],\n+    },\n )\n}}}\n }}}\n}}}\n{{{#!td\n\'\'\'`#!diff`\'\'\' has a particularly nice renderer:\n {{{\n#!diff\n--- Version 55\n+++ Version 56\n@@ -115,8 +115,9 @@\n     name=\'TracHelloWorld\', version=\'1.0\',\n     packages=find_packages(exclude=[\'*.tests*\']),\n-    entry_points = \"\"\"\n-        [trac.plugins]\n-        helloworld = myplugs.helloworld\n-    \"\"\",\n+    entry_points = {\n+        \'trac.plugins\': [\n+            \'helloworld = myplugs.helloworld\',\n+        ],\n+    },\n )\n }}}\n}}}\n\nFor more processor macros developed and/or contributed by users, visit: \n * [trac:ProcessorBazaar]\n * [trac:MacroBazaar]\n * [http://trac-hacks.org Trac Hacks] community site\n\nDeveloping processors is no different from Wiki macros. \nIn fact they work the same way, only the usage syntax differs. \nSee WikiMacros#DevelopingCustomMacros for more information.\n\n\n----\nSee also: WikiMacros, WikiHtml, WikiRestructuredText, TracSyntaxColoring, WikiFormatting, TracGuide',NULL,NULL),('WikiRestructuredText',1,1291894092000000,'trac','127.0.0.1','= reStructuredText Support in Trac =\n\nTrac supports using \'\'reStructuredText\'\' (RST) as an alternative to wiki markup in any context WikiFormatting is used.\n\nFrom the reStucturedText webpage:\n \"\'\'reStructuredText is an easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and parser   system. It is useful for in-line program documentation (such as Python docstrings), for quickly creating  simple web pages, and for standalone documents. reStructuredText is designed for extensibility for  specific application domains. \'\'\"\n\nIf you want a file from your Subversion repository be displayed as reStructuredText in Trac\'s source browser, set `text/x-rst` as value for the Subversion property `svn:mime-type`. See [trac:source:/trunk/INSTALL this example].\n\n=== Requirements ===\nNote that to activate RST support in Trac, the python docutils package must be installed. \nIf not already available on your operating system, you can download it at the [http://docutils.sourceforge.net/rst.html RST Website].\n\nInstall docutils using `easy_install docutils`. Do not use the package manager of your OS (e.g. `apt-get install python-docutils`), because Trac will not find docutils then.\n\n=== More information on RST ===\n\n * reStructuredText Website -- http://docutils.sourceforge.net/rst.html\n * RST Quick Reference -- http://docutils.sourceforge.net/docs/rst/quickref.html\n\n----\n\n== Using RST in Trac ==\nTo specify that a block of text should be parsed using RST, use the \'\'rst\'\' processor. \n\n=== TracLinks in reStructuredText ===\n\n * Trac provides a custom RST directive `trac::` to allow TracLinks from within RST text.\n\n Example:\n {{{\n {{{\n #!rst\n This is a reference to |a ticket|\n\n .. |a ticket| trac:: #42\n }}}\n }}}\n\n * Trac allows an even easier way of creating TracLinks in RST, using the custom `:trac:` role.\n\n Example:\n {{{\n {{{\n #!rst\n This is a reference to ticket `#12`:trac:\n\n To learn how to use Trac, see `TracGuide`:trac:\n }}}\n }}}\n\n For a complete example of all uses of the `:trac:` role, please see WikiRestructuredTextLinks. \n\n\n=== Syntax highlighting in reStructuredText ===\n\nThere is a directive for doing TracSyntaxColoring in RST as well. The directive is called\ncode-block\n\nExample\n\n{{{\n{{{\n#!rst\n\n.. code-block:: python\n\n class Test:\n\n    def TestFunction(self):\n        pass\n\n}}}\n}}}\n\nWill result in the below.\n\n{{{\n#!rst\n\n.. code-block:: python\n\n class Test:\n\n    def TestFunction(self):\n        pass\n\n}}}\n\n=== Wiki Macros in reStructuredText ===\n\nFor doing [WikiMacros Wiki Macros] in RST you use the same directive as for syntax highlighting i.e\ncode-block. To work you must use a version of trac that has [trac:ticket:801 #801] applied. \n\n=== Wiki Macro Example ===\n\n{{{\n{{{\n#!rst\n\n.. code-block:: RecentChanges\n\n   Trac,3\n\n}}}\n}}}\n\nWill result in the below:\n\n     [[RecentChanges(Trac,3)]]\n\nOr a more concise Wiki Macro like syntax is also available:\n\n{{{\n{{{\n#!rst\n\n:code-block:`RecentChanges:Trac,3`\n}}}\n}}}\n\n=== Bigger RST Example ===\nThe example below should be mostly self-explanatory:\n{{{\n#!html\n<pre class=\"wiki\">{{{\n#!rst\nFooBar Header\n=============\nreStructuredText is **nice**. It has its own webpage_.\n\nA table:\n\n=====  =====  ======\n   Inputs     Output\n------------  ------\n  A      B    A or B\n=====  =====  ======\nFalse  False  False\nTrue   False  True\nFalse  True   True\nTrue   True   True\n=====  =====  ======\n\nRST TracLinks\n-------------\n\nSee also ticket `#42`:trac:.\n\n.. _webpage: http://docutils.sourceforge.net/rst.html\n}}}</pre>\n}}}\n\n\nResults in:\n{{{\n#!rst\nFooBar Header\n=============\nreStructuredText is **nice**. It has its own webpage_.\n\nA table:\n\n=====  =====  ======\n   Inputs     Output\n------------  ------\n  A      B    A or B\n=====  =====  ======\nFalse  False  False\nTrue   False  True\nFalse  True   True\nTrue   True   True\n=====  =====  ======\n\nRST TracLinks\n-------------\n\nSee also ticket `#42`:trac:.\n\n.. _webpage: http://docutils.sourceforge.net/rst.html\n}}}\n\n\n----\nSee also: WikiRestructuredTextLinks, WikiProcessors, WikiFormatting\n',NULL,NULL),('WikiRestructuredText',2,1397068026259379,'trac','127.0.0.1','= reStructuredText Support in Trac =\n\nTrac supports using \'\'reStructuredText\'\' (RST) as an alternative to wiki markup in any context WikiFormatting is used.\n\nFrom the reStucturedText webpage:\n \"\'\'reStructuredText is an easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and parser   system. It is useful for in-line program documentation (such as Python docstrings), for quickly creating  simple web pages, and for standalone documents. reStructuredText is designed for extensibility for  specific application domains. \'\'\"\n\nIf you want a file from your Subversion repository be displayed as reStructuredText in Trac\'s source browser, set `text/x-rst` as value for the Subversion property `svn:mime-type`. See [trac:source:/trunk/INSTALL this example].\n\n=== Requirements ===\nNote that to activate RST support in Trac, the python docutils package must be installed. \nIf not already available on your operating system, you can download it at the [http://docutils.sourceforge.net/rst.html RST Website].\n\nInstall docutils using `easy_install docutils`. Do not use the package manager of your OS (e.g. `apt-get install python-docutils`), because Trac will not find docutils then.\n\n=== More information on RST ===\n\n * reStructuredText Website -- http://docutils.sourceforge.net/rst.html\n * RST Quick Reference -- http://docutils.sourceforge.net/docs/rst/quickref.html\n\n----\n\n== Using RST in Trac ==\nTo specify that a block of text should be parsed using RST, use the \'\'rst\'\' processor. \n\n=== TracLinks in reStructuredText ===\n\n * Trac provides a custom RST directive `trac::` to allow TracLinks from within RST text.\n   ||= Wiki Markup ||= Display ||\n   {{{#!td\n     {{{\n     {{{\n     #!rst\n     This is a reference to |a ticket|\n\n     .. |a ticket| trac:: #42\n     }}}\n     }}}\n   }}}\n   {{{#!td\n     {{{\n     #!rst\n     This is a reference to |a ticket|\n\n     .. |a ticket| trac:: #42\n     }}}\n   }}}\n\n * Trac allows an even easier way of creating TracLinks in RST, using the custom `:trac:` role.\n   ||= Wiki Markup ||= Display ||\n   {{{#!td\n     {{{\n     {{{\n     #!rst\n     This is a reference to ticket `#12`:trac:\n\n     To learn how to use Trac, see `TracGuide`:trac:\n     }}}\n     }}}\n   }}}\n   {{{#!td\n     {{{\n     #!rst\n     This is a reference to ticket `#12`:trac:\n\n     To learn how to use Trac, see `TracGuide`:trac:\n     }}}\n   }}}\n\n For a complete example of all uses of the `:trac:` role, please see WikiRestructuredTextLinks. \n\n\n=== Syntax highlighting in reStructuredText ===\n\nThere is a directive for doing TracSyntaxColoring in RST as well. The directive is called\ncode-block\n\n||= Wiki Markup ||= Display ||\n{{{#!td\n  {{{\n  {{{\n  #!rst\n\n  .. code-block:: python\n\n     class Test:\n\n         def TestFunction(self):\n             pass\n  \n  }}}\n  }}}\n}}}\n{{{#!td\n  {{{\n  #!rst\n\n  .. code-block:: python\n\n     class Test:\n\n         def TestFunction(self):\n             pass\n\n  }}}\n}}}\nNote the need to indent the code at least one character after the `.. code-block` directive.\n\n=== Wiki Macros in reStructuredText ===\n\nFor doing [WikiMacros Wiki Macros] in RST you use the same directive as for syntax highlighting i.e code-block.\n\n||= Wiki Markup ||= Display ||\n{{{#!td\n  {{{\n  {{{\n  #!rst\n\n  .. code-block:: RecentChanges\n\n     Trac,3\n\n  }}}\n  }}}\n}}}\n{{{#!td\n  {{{\n  #!rst\n\n  .. code-block:: RecentChanges\n\n     Trac,3\n\n  }}}\n}}}\n\nOr a more concise Wiki Macro like syntax is also available, using the `:code-block:` role:\n\n||= Wiki Markup ||= Display ||\n{{{#!td\n  {{{\n  {{{\n  #!rst\n\n  :code-block:`RecentChanges:Trac,3`\n  }}}\n  }}}\n}}}\n{{{#!td\n  {{{\n  #!rst\n\n  :code-block:`RecentChanges:Trac,3`\n  }}}\n}}}\n\n=== Bigger RST Example ===\nThe example below should be mostly self-explanatory:\n\n||= Wiki Markup ||= Display ||\n{{{#!td\n{{{\n#!html\n<pre class=\"wiki\">{{{\n#!rst\nFooBar Header\n=============\nreStructuredText is **nice**. It has its own webpage_.\n\nA table:\n\n=====  =====  ======\n   Inputs     Output\n------------  ------\n  A      B    A or B\n=====  =====  ======\nFalse  False  False\nTrue   False  True\nFalse  True   True\nTrue   True   True\n=====  =====  ======\n\nRST TracLinks\n-------------\n\nSee also ticket `#42`:trac:.\n\n.. _webpage: http://docutils.sourceforge.net/rst.html\n}}}</pre>\n}}}\n}}}\n{{{#!td\n{{{\n#!rst\nFooBar Header\n=============\nreStructuredText is **nice**. It has its own webpage_.\n\nA table:\n\n=====  =====  ======\n   Inputs     Output\n------------  ------\n  A      B    A or B\n=====  =====  ======\nFalse  False  False\nTrue   False  True\nFalse  True   True\nTrue   True   True\n=====  =====  ======\n\nRST TracLinks\n-------------\n\nSee also ticket `#42`:trac:.\n\n.. _webpage: http://docutils.sourceforge.net/rst.html\n}}}\n}}}\n\n----\nSee also: WikiRestructuredTextLinks, WikiProcessors, WikiFormatting\n',NULL,NULL),('WikiRestructuredTextLinks',1,1291894092000000,'trac','127.0.0.1','= TracLinks in reStructuredText =\n\nThis document illustrates how to use the `:trac:` role in reStructuredText. The page is written like:\n\n{{{\n{{{\n#!rst \nExamples:\n\n * Tickets: :trac:`#1` or :trac:`ticket:1`\n * Ticket comments: :trac:`comment:ticket:1:2`\n * Reports: :trac:`{1}` or :trac:`report:1`\n * Changesets: :trac:`r1`, :trac:`[1]` or :trac:`changeset:1`\n * Revision log: :trac:`r1:3`, :trac:`[1:3]` or :trac:`log:@1:3`, :trac:`log:trunk@1:3`\n * Diffs (since version 0.10): :trac:`diff:@20:30`, :trac:`diff:tags/trac-0.9.2/wiki-default//tags/trac-0.9.3/wiki-default` or :trac:`diff:trunk/trac@3538//sandbox/vc-refactoring/trac@3539`\n * Wiki pages: :trac:`CamelCase` or :trac:`wiki:CamelCase`\n * Milestones: :trac:`milestone:1.0`\n * Attachment: :trac:`attachment:ticket:944:attachment.1073.diff`\n * Files: :trac:`source:trunk/COPYING`\n * A specific file revision: :trac:`source:/trunk/COPYING@200`\n * A particular line of a specific file revision: :trac:`source:/trunk/COPYING@200#L25`\n\nAn explicit label can be specified, separated from the link by a space:\n\n * See :trac:`#1 ticket 1` and the :trac:`source:trunk/COPYING license`.\n}}}\n}}}\n\nProvided you have docutils installed, the above block will render as:\n----\n{{{\n#!rst \nExamples:\n\n * Tickets: :trac:`#1` or :trac:`ticket:1`\n * Ticket comments: :trac:`comment:ticket:1:2`\n * Reports: :trac:`{1}` or :trac:`report:1`\n * Changesets: :trac:`r1`, :trac:`[1]` or :trac:`changeset:1`\n * Revision log: :trac:`r1:3`, :trac:`[1:3]` or :trac:`log:@1:3`, :trac:`log:trunk@1:3`\n * Diffs (since version 0.10): :trac:`diff:@20:30`, :trac:`diff:tags/trac-0.9.2/wiki-default//tags/trac-0.9.3/wiki-default` or :trac:`diff:trunk/trac@3538//sandbox/vc-refactoring/trac@3539`\n * Wiki pages: :trac:`CamelCase` or :trac:`wiki:CamelCase`\n * Milestones: :trac:`milestone:1.0`\n * Attachment: :trac:`attachment:ticket:944:attachment.1073.diff`\n * Files: :trac:`source:trunk/COPYING`\n * A specific file revision: :trac:`source:/trunk/COPYING@200`\n * A particular line of a specific file revision: :trac:`source:/trunk/COPYING@200#L25`\n\nAn explicit label can be specified, separated from the link by a space:\n\n * See :trac:`#1 ticket 1` and the :trac:`source:trunk/COPYING license`.\n}}}\n----\n\nNote also that any of the above could have been written using substitution references and the `trac::` directive:\n{{{\n{{{\n#!rst\nSee |ticket123|.\n\n .. |ticket123| trac:: ticket:123 this ticket\n}}}\n}}}\n\nThis renders as:\n----\n\n{{{\n#!rst\nSee |ticket123|.\n\n .. |ticket123| trac:: ticket:123 this ticket\n}}}\n\n----\nSee also: WikiRestructuredText, TracLinks',NULL,NULL),('WikiStart',1,1291894092000000,'trac','127.0.0.1','= Welcome to Trac 0.11.7 =\n\nTrac is a \'\'\'minimalistic\'\'\' approach to \'\'\'web-based\'\'\' management of\n\'\'\'software projects\'\'\'. Its goal is to simplify effective tracking and handling of software issues, enhancements and overall progress.\n\nAll aspects of Trac have been designed with the single goal to \n\'\'\'help developers write great software\'\'\' while \'\'\'staying out of the way\'\'\'\nand imposing as little as possible on a team\'s established process and\nculture.\n\nAs all Wiki pages, this page is editable, this means that you can\nmodify the contents of this page simply by using your\nweb-browser. Simply click on the \"Edit this page\" link at the bottom\nof the page. WikiFormatting will give you a detailed description of\navailable Wiki formatting commands.\n\n\"[wiki:TracAdmin trac-admin] \'\'yourenvdir\'\' initenv\" created\na new Trac environment, containing a default set of wiki pages and some sample\ndata. This newly created environment also contains \n[wiki:TracGuide documentation] to help you get started with your project.\n\nYou can use [wiki:TracAdmin trac-admin] to configure\n[http://trac.edgewall.org/ Trac] to better fit your project, especially in\nregard to \'\'components\'\', \'\'versions\'\' and \'\'milestones\'\'. \n\n\nTracGuide is a good place to start.\n\nEnjoy! [[BR]]\n\'\'The Trac Team\'\'\n\n== Starting Points ==\n\n * TracGuide --  Built-in Documentation\n * [http://trac.edgewall.org/ The Trac project] -- Trac Open Source Project\n * [http://trac.edgewall.org/wiki/TracFaq Trac FAQ] -- Frequently Asked Questions\n * TracSupport --  Trac Support\n\nFor a complete list of local wiki pages, see TitleIndex.\n',NULL,NULL),('WikiStart',2,1291895466000000,'akshat','158.144.12.163','= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.','',0),('WikiStart',3,1291895482000000,'akshat','158.144.12.163','= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n','',0),('WikiStart',4,1291896849000000,'akshat','158.144.12.163','= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[Contents]','',0),('WikiStart',5,1291897017000000,'akshat','158.144.12.163','= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[List of all Pages http://mutha/trac/Computing%20Documentation/wiki/Contents]','',0),('WikiStart',6,1291897334000000,'akshat','158.144.12.163','= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[wiki:Contents List of all Pages]','',0),('WikiStart',7,1309450765000000,'akshat','158.144.16.13','[[Image(GMRT2.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">NATIONAL CENTRE FOR RADIO ASTROPHYSICS</h1>\r\n<h1 style=\"text-align: Center; color: #A52A2A\">TATA INSTITUTE OF FUNDAMENTAL RESEARCH PUNE</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n}}}\r\n[[br]][[br]][[br]][[br]]\r\n= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[wiki:Contents List of all Pages]','',0),('WikiStart',8,1309451020000000,'akshat','158.144.16.13','[[Image(GMRT2.jpg,200px,left)]]\r\n[[Image(GMRT.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">NATIONAL CENTRE FOR RADIO ASTROPHYSICS</h1>\r\n<h1 style=\"text-align: Center; color: #A52A2A\">TATA INSTITUTE OF FUNDAMENTAL RESEARCH PUNE</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n}}}\r\n[[br]][[br]][[br]][[br]]\r\n= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[wiki:Contents List of all Pages]','',0),('WikiStart',9,1309451761000000,'akshat','158.144.16.13','[[Image(GMRT2.jpg,200px,left)]]\r\n[[Image(Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">NATIONAL CENTRE FOR RADIO ASTROPHYSICS</h1>\r\n<h1 style=\"text-align: Center; color: #A52A2A\">TATA INSTITUTE OF FUNDAMENTAL RESEARCH PUNE</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n}}}\r\n[[br]][[br]][[br]][[br]]\r\n\r\n= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[wiki:Contents List of all Pages]\r\n\r\n----\r\n\r\n','',0),('WikiStart',10,1397121281475438,'admin','192.168.0.13','[[Image(GMRT2.jpg,200px,left)]]\r\n[[Image(Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">storageDNA Inc.</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n}}}\r\n[[br]][[br]][[br]][[br]]\r\n\r\n= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[wiki:Contents List of all Pages]\r\n\r\n----\r\n\r\n','',0),('WikiStart',11,1397143132310104,'admin','192.168.0.13','[[Image(/chrome/site/WikiStart/GMRT2.jpg,200px,left)]]\r\n[[Image(/chrome/site/WikiStart/Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">storageDNA Inc.</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n}}}\r\n[[br]][[br]][[br]][[br]]\r\n\r\n= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[wiki:Contents List of all Pages]\r\n\r\n----\r\n\r\n','',0),('WikiStart',12,1397144631876795,'admin','192.168.0.13','[[Image(htdocs:DNA.png,110px,left)]]\r\n[[Image(htdocs:WikiStart/Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">storageDNA Inc.</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n}}}\r\n[[br]][[br]][[br]][[br]]\r\n\r\n= Computing Documentation =\r\n\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n----\r\n[wiki:Contents List of all Pages]\r\n\r\n----\r\n\r\n','',0),('WikiStart',13,1397219607245492,'admin','192.168.0.13','[[Image(htdocs:WikiStart/Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">storageDNA Inc.</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n\r\n<div align =\"justify\" style=\"padding-left:5%; padding-right:25%; color:#ed9613; border-style:dashed\">\r\n<br>\r\n<h2>Computing Documentation </h2>\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n<br><br>\r\n</div>\r\n}}}\r\n[[br]][[br]][[br]][[br]]\r\n\r\n----\r\n\r\n[wiki:Contents List of all Pages]\r\n\r\n----\r\n\r\n','',0),('WikiStart',14,1397220717945881,'admin','192.168.0.13','[[Image(htdocs:DNA.png,40px,left)]]\r\n[[Image(htdocs:WikiStart/Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">storageDNA Inc.</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:25%;  border-width:20px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>Computing Documentation </h2>\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n<br><br>\r\n</div>\r\n}}}\r\n[[br]][[br]][[br]][[br]]\r\n\r\n----\r\n\r\n[wiki:Contents List of all Pages]\r\n\r\n----\r\n\r\n','',0),('WikiStart',15,1397220760659533,'admin','192.168.0.13','[[Image(htdocs:DNA.png,40px,left)]]\r\n[[Image(htdocs:WikiStart/Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">storageDNA Inc.</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:25%;  border-width:20px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>Computing Documentation </h2>\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n<br><br>\r\n</div>\r\n}}}\r\n[[br]]\r\n\r\n----\r\n\r\n[wiki:Contents List of all Pages]\r\n\r\n----\r\n\r\n','',0),('WikiStart',16,1397733087060757,'akshat','192.168.0.8','[[Image(htdocs:DNA.png,40px,left)]]\r\n[[Image(htdocs:WikiStart/Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">storageDNA Inc.</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:25%;  border-width:20px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>Computing Documentation </h2>\r\nIn this section of wiki we have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n<br><br>\r\n</div>\r\n}}}\r\n[[br]]\r\n\r\n----\r\n[http://192.168.0.20/trac/Computing_Documentation BROWSE][[BR]]\r\n* [http://192.168.0.20/trac Home][[BR]]\r\n* [wiki:Contents List of all Pages]\r\n----','',0),('WikiStart',17,1435140594330482,'akshat','127.3.17.1','[[Image(htdocs:aks.png,40px,left)]]\r\n[[Image(htdocs:WikiStart/Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">akshat\'s</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:25%;  border-width:20px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>Computing Documentation </h2>\r\nIn this section of wiki I have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n<br><br>\r\n</div>\r\n}}}\r\n[[br]]\r\n\r\n----\r\n[http://192.168.0.20/trac/Computing_Documentation BROWSE][[BR]]\r\n* [http://192.168.0.20/trac Home][[BR]]\r\n* [wiki:Contents List of all Pages]\r\n----','',0),('WikiStart',18,1435140766438516,'akshat','127.3.17.1','[[Image(htdocs:aks.png,72px,left)]]\r\n[[Image(htdocs:WikiStart/Computing.jpg,200px,right)]]\r\n\r\n{{{\r\n#!html\r\n<h1 style=\"text-align: Center; color: #A52A2A\">akshat\'s</h1>\r\n<h2 style=\"text-align: Center; color: #191970\">COMPUTING DOCUMENTATION WIKI</h2>\r\n\r\n<br>\r\n<div align =\"justify\" style=\"width:25%;  border-width:20px; border-style:dashed; padding-left:5%; padding-right:5%; color:#ed9613\">\r\n<br>\r\n<h2>Computing Documentation </h2>\r\nIn this section of wiki I have documented all the major software and hardware Installations and Configurations, from which you can take the reference while going through the similar configurations. You can use the \"Search\" tab to the right to type in a subject, or error message, and hopefully find the answer you\'re seeking.\r\n<br><br>\r\n</div>\r\n}}}\r\n[[br]]\r\n\r\n----\r\n[http://192.168.0.20/trac/Computing_Documentation BROWSE][[BR]]\r\n* [http://192.168.0.20/trac Home][[BR]]\r\n* [wiki:Contents List of all Pages]\r\n----','',0);
/*!40000 ALTER TABLE `wiki` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-06-24  8:42:57
